1687213981
2 2
6 libdna 4 yMIf 8 toontown 
358
398 12 get_dna_path 1 0 12 get_dna_path 0 1 392 0
51
ConfigVariableSearchPath const &get_dna_path(void);

399 29 upcast_to_TypedReferenceCount 12 756 39 DNAGroup::upcast_to_TypedReferenceCount 0 1 18 43
upcast from DNAGroup to TypedReferenceCount
67
TypedReferenceCount *DNAGroup::upcast_to_TypedReferenceCount(void);

400 20 downcast_to_DNAGroup 12 757 41 TypedReferenceCount::downcast_to_DNAGroup 0 1 19 45
downcast from TypedReferenceCount to DNAGroup
58
DNAGroup *TypedReferenceCount::downcast_to_DNAGroup(void);

401 17 upcast_to_Namable 12 756 27 DNAGroup::upcast_to_Namable 0 1 20 31
upcast from DNAGroup to Namable
43
Namable *DNAGroup::upcast_to_Namable(void);

402 20 downcast_to_DNAGroup 12 758 29 Namable::downcast_to_DNAGroup 0 1 21 33
downcast from Namable to DNAGroup
46
DNAGroup *Namable::downcast_to_DNAGroup(void);

403 8 DNAGroup 4 756 18 DNAGroup::DNAGroup 0 3 1 2 3 440
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::CopyConstructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
111
DNAGroup::DNAGroup(basic_string< char > const &initial_name = (""));
DNAGroup::DNAGroup(DNAGroup const &group);

404 8 traverse 4 756 18 DNAGroup::traverse 0 2 4 5 214
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::traverse
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
92
virtual NodePath DNAGroup::traverse(NodePath &parent, DNAStorage *store, int editing = (0));

405 18 top_level_traverse 4 756 28 DNAGroup::top_level_traverse 0 2 6 7 272
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::top_level_traverse
//       Access: Public
//  Description: The top level traverse does some special things
////////////////////////////////////////////////////////////////////
94
NodePath DNAGroup::top_level_traverse(NodePath &parent, DNAStorage *store, int editing = (0));

406 3 add 4 756 13 DNAGroup::add 0 1 8 248
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::add
//       Access: Public
//  Description: add a DNAGroup to this vector of nodes
////////////////////////////////////////////////////////////////////
48
void DNAGroup::add(PointerTo< DNAGroup > group);

407 6 remove 4 756 16 DNAGroup::remove 0 1 9 446
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::remove
//       Access: Public
//  Description: Remove a group from this vector. Note, this is
//               not really meant for heavy use, since we are using
//               an STL vector which erases in linear time.
//               Should be ok, since removal will be rare.
////////////////////////////////////////////////////////////////////
51
void DNAGroup::remove(PointerTo< DNAGroup > group);

408 2 at 4 756 12 DNAGroup::at 0 1 10 373
// Filename: dnaGroup.I
// Created by:  shochet (24May00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::at
//       Access: Public
//  Description: Return the nth group in the vector
////////////////////////////////////////////////////////////////////
62
inline PointerTo< DNAGroup > DNAGroup::at(unsigned int index);

409 7 current 4 756 17 DNAGroup::current 0 1 11 238
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::current
//       Access: Public
//  Description: return the current group
////////////////////////////////////////////////////////////////////
53
inline PointerTo< DNAGroup > DNAGroup::current(void);

410 16 get_num_children 4 756 26 DNAGroup::get_num_children 0 1 12 259
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::get_num_children
//       Access: Public
//  Description: how many groups do we have under us?
////////////////////////////////////////////////////////////////////
44
inline int DNAGroup::get_num_children(void);

411 10 get_parent 4 756 20 DNAGroup::get_parent 0 1 13 240
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::get_parent
//       Access: Public
//  Description: Return the parent group
////////////////////////////////////////////////////////////////////
62
inline PointerTo< DNAGroup > DNAGroup::get_parent(void) const;

412 5 write 4 756 15 DNAGroup::write 0 2 14 15 255
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::write
//       Access: Public
//  Description: Writes the group and all children to output
////////////////////////////////////////////////////////////////////
92
virtual void DNAGroup::write(ostream &out, DNAStorage *store, int indent_level = (0)) const;

413 2 ls 4 756 12 DNAGroup::ls 0 1 16 266
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::ls
//       Access: Public
//  Description: Writes the group and all children to cout (for debugging)
////////////////////////////////////////////////////////////////////
30
void DNAGroup::ls(void) const;

414 14 get_class_type 4 756 24 DNAGroup::get_class_type 0 1 17 0
49
static TypeHandle DNAGroup::get_class_type(void);

415 9 ~DNAGroup 4 756 19 DNAGroup::~DNAGroup 0 0 0
26
DNAGroup::~DNAGroup(void);

416 12 DNASuitPoint 4 759 26 DNASuitPoint::DNASuitPoint 0 2 22 23 221
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
110
DNASuitPoint::DNASuitPoint(int index, DNASuitPoint::DNASuitPointType type, LPoint3f pos, int lb_index = (-1));

417 9 set_index 4 759 23 DNASuitPoint::set_index 0 1 24 0
47
inline void DNASuitPoint::set_index(int index);

418 9 get_index 4 759 23 DNASuitPoint::get_index 0 1 25 0
47
inline int DNASuitPoint::get_index(void) const;

419 14 set_point_type 4 759 28 DNASuitPoint::set_point_type 0 1 26 0
78
inline void DNASuitPoint::set_point_type(DNASuitPoint::DNASuitPointType type);

420 14 get_point_type 4 759 28 DNASuitPoint::get_point_type 0 1 27 0
79
inline DNASuitPoint::DNASuitPointType DNASuitPoint::get_point_type(void) const;

421 7 set_pos 4 759 21 DNASuitPoint::set_pos 0 1 28 0
48
inline void DNASuitPoint::set_pos(LPoint3f pos);

422 7 get_pos 4 759 21 DNASuitPoint::get_pos 0 1 29 0
50
inline LPoint3f DNASuitPoint::get_pos(void) const;

423 12 set_graph_id 4 759 26 DNASuitPoint::set_graph_id 0 1 30 0
53
inline void DNASuitPoint::set_graph_id(int graph_id);

424 12 get_graph_id 4 759 26 DNASuitPoint::get_graph_id 0 1 31 0
50
inline int DNASuitPoint::get_graph_id(void) const;

425 27 set_landmark_building_index 4 759 41 DNASuitPoint::set_landmark_building_index 0 1 32 0
68
inline void DNASuitPoint::set_landmark_building_index(int lb_index);

426 27 get_landmark_building_index 4 759 41 DNASuitPoint::get_landmark_building_index 0 1 33 0
65
inline int DNASuitPoint::get_landmark_building_index(void) const;

427 11 is_terminal 4 759 25 DNASuitPoint::is_terminal 0 1 34 541
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::is_terminal
//       Access: Published
//  Description: Returns true if this point is the sort of point you
//               find at the beginning or end of a suit path (like a
//               FRONT_DOOR_POINT or SIDE_DOOR_POINT), or false if it
//               is something you're more likely to find in the middle
//               of a suit path (like a STREET_POINT).
////////////////////////////////////////////////////////////////////
50
inline bool DNASuitPoint::is_terminal(void) const;

428 6 output 4 759 20 DNASuitPoint::output 0 1 35 256
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::output
//       Access: Public
//  Description: Output all the properties to the stream
////////////////////////////////////////////////////////////////////
46
void DNASuitPoint::output(ostream &out) const;

429 5 write 4 759 19 DNASuitPoint::write 0 2 36 37 256
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::write
//       Access: Public
//  Description: write the suit point back out to the dna
////////////////////////////////////////////////////////////////////
77
virtual void DNASuitPoint::write(ostream &out, int indent_level = (0)) const;

430 14 get_class_type 4 759 28 DNASuitPoint::get_class_type 0 1 38 0
53
static TypeHandle DNASuitPoint::get_class_type(void);

431 13 ~DNASuitPoint 4 759 27 DNASuitPoint::~DNASuitPoint 0 0 0
34
DNASuitPoint::~DNASuitPoint(void);

432 11 DNASuitEdge 4 761 24 DNASuitEdge::DNASuitEdge 0 1 39 220
////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
131
DNASuitEdge::DNASuitEdge(PointerTo< DNASuitPoint > start_point, PointerTo< DNASuitPoint > end_point, basic_string< char > zone_id);

433 11 operator == 4 761 24 DNASuitEdge::operator == 0 1 40 0
69
inline bool DNASuitEdge::operator ==(DNASuitEdge const &other) const;

434 15 get_start_point 4 761 28 DNASuitEdge::get_start_point 0 1 41 0
74
inline PointerTo< DNASuitPoint > DNASuitEdge::get_start_point(void) const;

435 13 get_end_point 4 761 26 DNASuitEdge::get_end_point 0 1 42 0
72
inline PointerTo< DNASuitPoint > DNASuitEdge::get_end_point(void) const;

436 11 get_zone_id 4 761 24 DNASuitEdge::get_zone_id 0 1 43 0
65
inline basic_string< char > DNASuitEdge::get_zone_id(void) const;

437 11 set_zone_id 4 761 24 DNASuitEdge::set_zone_id 0 1 44 0
67
inline void DNASuitEdge::set_zone_id(basic_string< char > zone_id);

438 6 output 4 761 19 DNASuitEdge::output 0 1 45 253
////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::output
//       Access: Public
//  Description: Outputs all the properties to ostream
////////////////////////////////////////////////////////////////////
45
void DNASuitEdge::output(ostream &out) const;

439 5 write 4 761 18 DNASuitEdge::write 0 2 46 47 245
////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::write
//       Access: Public
//  Description: Writes the edge and properties
////////////////////////////////////////////////////////////////////
95
virtual void DNASuitEdge::write(ostream &out, DNAStorage *store, int indent_level = (0)) const;

440 14 get_class_type 4 761 27 DNASuitEdge::get_class_type 0 1 48 0
52
static TypeHandle DNASuitEdge::get_class_type(void);

441 12 ~DNASuitEdge 4 761 25 DNASuitEdge::~DNASuitEdge 0 0 0
32
DNASuitEdge::~DNASuitEdge(void);

442 13 DNABattleCell 4 762 28 DNABattleCell::DNABattleCell 0 1 49 222
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
70
DNABattleCell::DNABattleCell(float width, float height, LPoint3f pos);

443 16 set_width_height 4 762 31 DNABattleCell::set_width_height 0 1 50 115
// Filename: dnaBattleCell.I
// Created by:
//
////////////////////////////////////////////////////////////////////
71
inline void DNABattleCell::set_width_height(float width, float height);

444 9 get_width 4 762 24 DNABattleCell::get_width 0 1 51 220
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::get_width
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
50
inline float DNABattleCell::get_width(void) const;

445 10 get_height 4 762 25 DNABattleCell::get_height 0 1 52 221
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::get_height
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
51
inline float DNABattleCell::get_height(void) const;

446 7 set_pos 4 762 22 DNABattleCell::set_pos 0 1 53 0
49
inline void DNABattleCell::set_pos(LPoint3f pos);

447 7 get_pos 4 762 22 DNABattleCell::get_pos 0 1 54 0
51
inline LPoint3f DNABattleCell::get_pos(void) const;

448 6 output 4 762 21 DNABattleCell::output 0 1 55 254
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::output
//       Access: Public
//  Description: Writes the cell properties to output
////////////////////////////////////////////////////////////////////
47
void DNABattleCell::output(ostream &out) const;

449 8 traverse 4 762 23 DNABattleCell::traverse 0 2 56 57 219
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::traverse
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
97
virtual NodePath DNABattleCell::traverse(NodePath &parent, DNAStorage *store, int editing = (0));

450 5 write 4 762 20 DNABattleCell::write 0 2 58 59 260
////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::write
//       Access: Public
//  Description: Writes the group and all children to output
////////////////////////////////////////////////////////////////////
97
virtual void DNABattleCell::write(ostream &out, DNAStorage *store, int indent_level = (0)) const;

451 14 get_class_type 4 762 29 DNABattleCell::get_class_type 0 1 60 0
54
static TypeHandle DNABattleCell::get_class_type(void);

452 14 ~DNABattleCell 4 762 29 DNABattleCell::~DNABattleCell 0 0 0
36
DNABattleCell::~DNABattleCell(void);

453 11 DNAVisGroup 4 763 24 DNAVisGroup::DNAVisGroup 0 3 61 62 63 446
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::CopyConstructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
126
DNAVisGroup::DNAVisGroup(basic_string< char > const &initial_name = (""));
DNAVisGroup::DNAVisGroup(DNAVisGroup const &group);

454 11 add_visible 4 763 24 DNAVisGroup::add_visible 0 1 64 262
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_visible
//       Access: Public
//  Description: Add a vis group name to this group's list
////////////////////////////////////////////////////////////////////
74
void DNAVisGroup::add_visible(basic_string< char > const &vis_group_name);

455 14 remove_visible 4 763 27 DNAVisGroup::remove_visible 0 1 65 270
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_vis_group
//       Access: Public
//  Description: Remove a vis group name to this group's list
////////////////////////////////////////////////////////////////////
76
int DNAVisGroup::remove_visible(basic_string< char > const &vis_group_name);

456 16 get_num_visibles 4 763 29 DNAVisGroup::get_num_visibles 0 1 66 266
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_visibles
//       Access: Public
//  Description: Ask how many visibles this vis group has
////////////////////////////////////////////////////////////////////
46
int DNAVisGroup::get_num_visibles(void) const;

457 16 get_visible_name 4 763 29 DNAVisGroup::get_visible_name 0 1 67 267
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_visible_name
//       Access: Public
//  Description: Return the string name of the ith visible
////////////////////////////////////////////////////////////////////
73
basic_string< char > DNAVisGroup::get_visible_name(unsigned int i) const;

458 13 add_suit_edge 4 763 26 DNAVisGroup::add_suit_edge 0 1 68 327
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_suit_edge
//       Access: Public
//  Description: Adds a suit edge to this vis group
//               This is only stored here so we can write it back out
////////////////////////////////////////////////////////////////////
63
void DNAVisGroup::add_suit_edge(PointerTo< DNASuitEdge > edge);

459 16 remove_suit_edge 4 763 29 DNAVisGroup::remove_suit_edge 0 1 69 247
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_suit_edge
//       Access: Public
//  Description: Remove this suit edge
////////////////////////////////////////////////////////////////////
65
int DNAVisGroup::remove_suit_edge(PointerTo< DNASuitEdge > edge);

460 18 get_num_suit_edges 4 763 31 DNAVisGroup::get_num_suit_edges 0 1 70 265
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_suit_edges
//       Access: Public
//  Description: Ask how many edges this vis group has
////////////////////////////////////////////////////////////////////
48
int DNAVisGroup::get_num_suit_edges(void) const;

461 13 get_suit_edge 4 763 26 DNAVisGroup::get_suit_edge 0 1 71 256
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_suit_edge
//       Access: Public
//  Description: Return the ith edge in the vector
////////////////////////////////////////////////////////////////////
74
PointerTo< DNASuitEdge > DNAVisGroup::get_suit_edge(unsigned int i) const;

462 15 add_battle_cell 4 763 28 DNAVisGroup::add_battle_cell 0 1 72 331
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_battle_cell
//       Access: Public
//  Description: Adds a battle_cell to this vis group
//               This is only stored here so we can write it back out
////////////////////////////////////////////////////////////////////
67
void DNAVisGroup::add_battle_cell(PointerTo< DNABattleCell > cell);

463 18 remove_battle_cell 4 763 31 DNAVisGroup::remove_battle_cell 0 1 73 251
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_battle_cell
//       Access: Public
//  Description: Remove this battle cell
////////////////////////////////////////////////////////////////////
69
int DNAVisGroup::remove_battle_cell(PointerTo< DNABattleCell > cell);

464 20 get_num_battle_cells 4 763 33 DNAVisGroup::get_num_battle_cells 0 1 74 267
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_battle_cells
//       Access: Public
//  Description: Ask how many cells this vis group has
////////////////////////////////////////////////////////////////////
50
int DNAVisGroup::get_num_battle_cells(void) const;

465 15 get_battle_cell 4 763 28 DNAVisGroup::get_battle_cell 0 1 75 258
////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_battle_cell
//       Access: Public
//  Description: Return the ith cell in the vector
////////////////////////////////////////////////////////////////////
78
PointerTo< DNABattleCell > DNAVisGroup::get_battle_cell(unsigned int i) const;

466 14 get_class_type 4 763 27 DNAVisGroup::get_class_type 0 1 76 0
52
static TypeHandle DNAVisGroup::get_class_type(void);

467 12 ~DNAVisGroup 4 763 25 DNAVisGroup::~DNAVisGroup 0 0 0
32
DNAVisGroup::~DNAVisGroup(void);

468 11 DNASuitPath 4 764 24 DNASuitPath::DNASuitPath 0 3 77 78 79 754
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Constructor
//       Access: Public
//  Description: Accepts an integer which indicates the expected
//               length of the path.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
128
DNASuitPath::DNASuitPath(void);
DNASuitPath::DNASuitPath(int reserve_length);
DNASuitPath::DNASuitPath(DNASuitPath const &path);

469 14 get_num_points 4 764 27 DNASuitPath::get_num_points 0 1 80 451
// Filename: dnaSuitPath.I
// Created by:  shochet (28Jan01)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::get_num_points
//       Access: Public
//  Description: How many points are along this path, including the
//               starting and ending points
////////////////////////////////////////////////////////////////////
51
inline int DNASuitPath::get_num_points(void) const;

470 4 copy 4 764 17 DNASuitPath::copy 0 1 81 213
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::copy
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
48
void DNASuitPath::copy(DNASuitPath const &path);

471 15 get_point_index 4 764 28 DNASuitPath::get_point_index 0 1 82 387
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::get_point_index
//       Access: Public
//  Description: Returns the point index at location i. This index
//               can then be looked up in the dna storage to ask
//               properties of the actual point
////////////////////////////////////////////////////////////////////
53
inline int DNASuitPath::get_point_index(int i) const;

472 6 output 4 764 19 DNASuitPath::output 0 1 83 246
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::output
//       Access: Public
//  Description: Output the path to the ostream
////////////////////////////////////////////////////////////////////
45
void DNASuitPath::output(ostream &out) const;

473 14 get_class_type 4 764 27 DNASuitPath::get_class_type 0 1 84 0
52
static TypeHandle DNASuitPath::get_class_type(void);

474 12 ~DNASuitPath 4 764 25 DNASuitPath::~DNASuitPath 0 0 0
32
DNASuitPath::~DNASuitPath(void);

475 6 PosHpr 4 765 14 PosHpr::PosHpr 0 3 85 86 87 0
91
PosHpr::PosHpr(LPoint3f const &pos = ((Vertexf(0))), LPoint3f const &hpr = ((Vertexf(0))));

476 7 get_pos 4 765 15 PosHpr::get_pos 0 1 88 0
44
LPoint3f const &PosHpr::get_pos(void) const;

477 7 get_hpr 4 765 15 PosHpr::get_hpr 0 1 89 0
44
LPoint3f const &PosHpr::get_hpr(void) const;

478 7 ~PosHpr 4 765 15 PosHpr::~PosHpr 0 0 0
22
PosHpr::~PosHpr(void);

479 10 DNAStorage 4 766 22 DNAStorage::DNAStorage 0 1 90 207
////////////////////////////////////////////////////////////////////
//     Function: Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
29
DNAStorage::DNAStorage(void);

480 18 print_node_storage 4 766 30 DNAStorage::print_node_storage 0 1 91 268
// Storage functions

////////////////////////////////////////////////////////////////////
//     Function: print_node_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
////////////////////////////////////////////////////////////////////
48
void DNAStorage::print_node_storage(void) const;

481 21 print_texture_storage 4 766 33 DNAStorage::print_texture_storage 0 1 92 271
// Storage functions

////////////////////////////////////////////////////////////////////
//     Function: print_texture_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
////////////////////////////////////////////////////////////////////
51
void DNAStorage::print_texture_storage(void) const;

482 18 print_font_storage 4 766 30 DNAStorage::print_font_storage 0 1 93 246
////////////////////////////////////////////////////////////////////
//     Function: print_font_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
////////////////////////////////////////////////////////////////////
48
void DNAStorage::print_font_storage(void) const;

483 24 print_suit_point_storage 4 766 36 DNAStorage::print_suit_point_storage 0 1 94 252
////////////////////////////////////////////////////////////////////
//     Function: print_suit_point_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
////////////////////////////////////////////////////////////////////
54
void DNAStorage::print_suit_point_storage(void) const;

484 25 print_battle_cell_storage 4 766 37 DNAStorage::print_battle_cell_storage 0 1 95 248
////////////////////////////////////////////////////////////////////
//     Function: print_battle_cell_storage
//       Access: Public
//  Description: Print out the battle cells
////////////////////////////////////////////////////////////////////
55
void DNAStorage::print_battle_cell_storage(void) const;

485 13 store_texture 4 766 25 DNAStorage::store_texture 0 1 96 252
////////////////////////////////////////////////////////////////////
//     Function: store_texture
//       Access: Public
//  Description: Store a texture pointer in the texture map
////////////////////////////////////////////////////////////////////
102
void DNAStorage::store_texture(basic_string< char > const &code_string, PointerTo< Texture > texture);

486 10 store_font 4 766 22 DNAStorage::store_font 0 1 97 243
////////////////////////////////////////////////////////////////////
//     Function: store_font
//       Access: Public
//  Description: Store a font pointer in the font map
////////////////////////////////////////////////////////////////////
97
void DNAStorage::store_font(basic_string< char > const &code_string, PointerTo< TextFont > font);

487 10 store_node 4 766 22 DNAStorage::store_node 0 2 98 99 243
////////////////////////////////////////////////////////////////////
//     Function: store_node
//       Access: Public
//  Description: Store a node pointer in the node map
////////////////////////////////////////////////////////////////////
141
inline void DNAStorage::store_node(basic_string< char > const &code_string, NodePath node, basic_string< char > const &code_category = (""));

488 15 store_hood_node 4 766 27 DNAStorage::store_hood_node 0 2 100 101 292
////////////////////////////////////////////////////////////////////
//     Function: store_hood_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               hood node map
////////////////////////////////////////////////////////////////////
146
inline void DNAStorage::store_hood_node(basic_string< char > const &code_string, NodePath node, basic_string< char > const &code_category = (""));

489 16 store_place_node 4 766 28 DNAStorage::store_place_node 0 2 102 103 294
////////////////////////////////////////////////////////////////////
//     Function: store_place_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               place node map
////////////////////////////////////////////////////////////////////
147
inline void DNAStorage::store_place_node(basic_string< char > const &code_string, NodePath node, basic_string< char > const &code_category = (""));

490 16 store_suit_point 4 766 28 DNAStorage::store_suit_point 0 2 104 105 638
////////////////////////////////////////////////////////////////////
//     Function: store_suit_point
//       Access: Public
//  Description: Store a point in the suit point map. If that pos
//               already exists, return the existing point, otherwise
//               create a new point and store that.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: store_suit_point
//       Access: Public
//  Description: Store a suit point in the suit point map
////////////////////////////////////////////////////////////////////
168
PointerTo< DNASuitPoint > DNAStorage::store_suit_point(DNASuitPoint::DNASuitPointType type, LPoint3f pos);
int DNAStorage::store_suit_point(PointerTo< DNASuitPoint > );

491 28 get_highest_suit_point_index 4 766 40 DNAStorage::get_highest_suit_point_index 0 1 106 0
51
int DNAStorage::get_highest_suit_point_index(void);

492 17 remove_suit_point 4 766 29 DNAStorage::remove_suit_point 0 1 107 320
////////////////////////////////////////////////////////////////////
//     Function: remove_suit_point
//       Access: Public
//  Description: Remove a suit point from the suit point map
//               Returns the number of points removed (0 or 1)
////////////////////////////////////////////////////////////////////
62
int DNAStorage::remove_suit_point(PointerTo< DNASuitPoint > );

493 18 store_block_number 4 766 30 DNAStorage::store_block_number 0 1 108 237
////////////////////////////////////////////////////////////////////
//     Function: store_block_number
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
108
void DNAStorage::store_block_number(basic_string< char > const &block, basic_string< char > const &zone_id);

494 24 store_block_door_pos_hpr 4 766 36 DNAStorage::store_block_door_pos_hpr 0 1 109 243
////////////////////////////////////////////////////////////////////
//     Function: store_block_door_pos_hpr
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
119
void DNAStorage::store_block_door_pos_hpr(basic_string< char > const &block, LPoint3f const &pos, LPoint3f const &hpr);

495 26 store_block_sign_transform 4 766 38 DNAStorage::store_block_sign_transform 0 1 110 245
////////////////////////////////////////////////////////////////////
//     Function: store_block_sign_transform
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
101
void DNAStorage::store_block_sign_transform(basic_string< char > const &block, LMatrix4f const &mat);

496 17 store_block_title 4 766 29 DNAStorage::store_block_title 0 1 111 236
////////////////////////////////////////////////////////////////////
//     Function: store_block_title
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
105
void DNAStorage::store_block_title(basic_string< char > const &block, basic_string< char > const &title);

497 19 store_block_article 4 766 31 DNAStorage::store_block_article 0 1 112 238
////////////////////////////////////////////////////////////////////
//     Function: store_block_article
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
109
void DNAStorage::store_block_article(basic_string< char > const &block, basic_string< char > const &article);

498 17 store_battle_cell 4 766 29 DNAStorage::store_battle_cell 0 1 113 259
////////////////////////////////////////////////////////////////////
//     Function: store_battle_cell
//       Access: Public
//  Description: Store a battle cell in the battle cell vector
////////////////////////////////////////////////////////////////////
64
void DNAStorage::store_battle_cell(PointerTo< DNABattleCell > );

499 18 remove_battle_cell 4 766 30 DNAStorage::remove_battle_cell 0 1 114 263
////////////////////////////////////////////////////////////////////
//     Function: remove_battle_cell
//       Access: Public
//  Description: Remove a battle cell from the battle cell vector
////////////////////////////////////////////////////////////////////
64
int DNAStorage::remove_battle_cell(PointerTo< DNABattleCell > );

500 15 store_suit_edge 4 766 27 DNAStorage::store_suit_edge 0 2 115 116 716
////////////////////////////////////////////////////////////////////
//     Function: store_suit_edge
//       Access: Public
//  Description: Store a suit edge represented by the start and end
//               indexes in the suit start point map. These indexes
//               better be stored in the suit_point_vector already
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: store_suit_edge
//       Access: Public
//  Description: Store a suit edge in the suit start point map,
//               listed under the index of the start point
////////////////////////////////////////////////////////////////////
196
PointerTo< DNASuitEdge > DNAStorage::store_suit_edge(int start_index, int end_index, basic_string< char > zone_id);
PointerTo< DNASuitEdge > DNAStorage::store_suit_edge(PointerTo< DNASuitEdge > );

501 16 remove_suit_edge 4 766 28 DNAStorage::remove_suit_edge 0 1 117 245
////////////////////////////////////////////////////////////////////
//     Function: remove_suit_edge
//       Access: Public
//  Description: Removes a suit edge from the map
////////////////////////////////////////////////////////////////////
60
int DNAStorage::remove_suit_edge(PointerTo< DNASuitEdge > );

502 25 delete_unused_suit_points 4 766 37 DNAStorage::delete_unused_suit_points 0 1 118 463
////////////////////////////////////////////////////////////////////
//     Function: delete_unused_suit_points
//       Access: Public
//  Description: Runs through the list of suit points deleting
//               any points that are not on any edges.
//               This is computationally expensive, but it is only run
//               when we save the dna in the editor, not at run time.
////////////////////////////////////////////////////////////////////
48
int DNAStorage::delete_unused_suit_points(void);

503 26 fix_coincident_suit_points 4 766 38 DNAStorage::fix_coincident_suit_points 0 1 119 393
////////////////////////////////////////////////////////////////////
//     Function: fix_coincident_suit_points
//       Access: Public
//  Description: Runs through the list of suit points fixing
//               any points that are coincident by deleting the
//               duplicates and patching up the effected edges
////////////////////////////////////////////////////////////////////
49
int DNAStorage::fix_coincident_suit_points(void);

504 11 reset_nodes 4 766 23 DNAStorage::reset_nodes 0 1 120 314
// Reset functions

////////////////////////////////////////////////////////////////////
//     Function: reset_nodes
//       Access: Public
//  Description: clear out the map of shared nodes
//               so the ref counter will delete them
////////////////////////////////////////////////////////////////////
42
inline void DNAStorage::reset_nodes(void);

505 14 reset_textures 4 766 26 DNAStorage::reset_textures 0 1 121 320
// Reset functions

////////////////////////////////////////////////////////////////////
//     Function: reset_textures
//       Access: Public
//  Description: clear out the map of shared textures
//               so the ref counter will delete them
////////////////////////////////////////////////////////////////////
45
inline void DNAStorage::reset_textures(void);

506 10 reset_hood 4 766 22 DNAStorage::reset_hood 0 1 122 549
// Reset everything associated with this hood

////////////////////////////////////////////////////////////////////
//     Function: reset_hood
//       Access: Public
//  Description: clear out everything associated with the current hood
//               this is called in Python whenever we leave a hood. It
//               is easier to add things here than to have to keep
//               updating the showcode.
//               Reseting the hood also resets the place nodes.
////////////////////////////////////////////////////////////////////
41
inline void DNAStorage::reset_hood(void);

507 16 reset_hood_nodes 4 766 28 DNAStorage::reset_hood_nodes 0 1 123 353
// These all get called by reset hood

////////////////////////////////////////////////////////////////////
//     Function: reset_hood_nodes
//       Access: Public
//  Description: clear out the map of neighborhood specific nodes
//               so the ref counter will delete them
////////////////////////////////////////////////////////////////////
47
inline void DNAStorage::reset_hood_nodes(void);

508 17 reset_place_nodes 4 766 29 DNAStorage::reset_place_nodes 0 1 124 353
// These all get called by reset hood

////////////////////////////////////////////////////////////////////
//     Function: reset_place_nodes
//       Access: Public
//  Description: clear out the map of town and sz specific nodes
//               so the ref counter will delete them
////////////////////////////////////////////////////////////////////
48
inline void DNAStorage::reset_place_nodes(void);

509 17 reset_suit_points 4 766 29 DNAStorage::reset_suit_points 0 1 125 256
////////////////////////////////////////////////////////////////////
//     Function: reset_suit_points
//       Access: Public
//  Description: clear out all maps relating to suit points
////////////////////////////////////////////////////////////////////
48
inline void DNAStorage::reset_suit_points(void);

510 18 reset_battle_cells 4 766 30 DNAStorage::reset_battle_cells 0 1 126 241
////////////////////////////////////////////////////////////////////
//     Function: reset_battle_cells
//       Access: Public
//  Description: clear out all battle cells
////////////////////////////////////////////////////////////////////
49
inline void DNAStorage::reset_battle_cells(void);

511 19 reset_block_numbers 4 766 31 DNAStorage::reset_block_numbers 0 1 127 232
////////////////////////////////////////////////////////////////////
//     Function: reset_block_number
//       Access: Public
//  Description: clear out the map
////////////////////////////////////////////////////////////////////
50
inline void DNAStorage::reset_block_numbers(void);

512 25 reset_block_door_pos_hprs 4 766 37 DNAStorage::reset_block_door_pos_hprs 0 1 128 238
////////////////////////////////////////////////////////////////////
//     Function: reset_block_door_pos_hpr
//       Access: Public
//  Description: clear out the map
////////////////////////////////////////////////////////////////////
56
inline void DNAStorage::reset_block_door_pos_hprs(void);

513 27 reset_block_sign_transforms 4 766 39 DNAStorage::reset_block_sign_transforms 0 1 129 240
////////////////////////////////////////////////////////////////////
//     Function: reset_block_sign_transform
//       Access: Public
//  Description: clear out the map
////////////////////////////////////////////////////////////////////
58
inline void DNAStorage::reset_block_sign_transforms(void);

514 17 reset_block_title 4 766 29 DNAStorage::reset_block_title 0 1 130 231
////////////////////////////////////////////////////////////////////
//     Function: reset_block_title
//       Access: Public
//  Description: clear out the map
////////////////////////////////////////////////////////////////////
48
inline void DNAStorage::reset_block_title(void);

515 19 reset_block_article 4 766 31 DNAStorage::reset_block_article 0 1 131 233
////////////////////////////////////////////////////////////////////
//     Function: reset_block_article
//       Access: Public
//  Description: clear out the map
////////////////////////////////////////////////////////////////////
50
inline void DNAStorage::reset_block_article(void);

516 12 find_texture 4 766 24 DNAStorage::find_texture 0 1 132 322
// Searching functions

////////////////////////////////////////////////////////////////////
//     Function: find_texture
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
////////////////////////////////////////////////////////////////////
92
PointerTo< Texture > DNAStorage::find_texture(basic_string< char > const &dna_string) const;

517 9 find_node 4 766 21 DNAStorage::find_node 0 1 133 319
// Searching functions

////////////////////////////////////////////////////////////////////
//     Function: find_node
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
////////////////////////////////////////////////////////////////////
77
NodePath DNAStorage::find_node(basic_string< char > const &dna_string) const;

518 9 find_font 4 766 21 DNAStorage::find_font 0 1 134 295
////////////////////////////////////////////////////////////////////
//     Function: find_node
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
////////////////////////////////////////////////////////////////////
90
PointerTo< TextFont > DNAStorage::find_font(basic_string< char > const &dna_string) const;

519 21 get_num_catalog_codes 4 766 33 DNAStorage::get_num_catalog_codes 0 1 135 339
// Catalog functions

////////////////////////////////////////////////////////////////////
//     Function: get_num_catalog_codes
//       Access: Public
//  Description: Return the number of entries in this catalog
//               Return -1 if the catalog is not found
////////////////////////////////////////////////////////////////////
88
int DNAStorage::get_num_catalog_codes(basic_string< char > const &catalog_string) const;

520 16 get_catalog_code 4 766 28 DNAStorage::get_catalog_code 0 1 136 344
// Catalog functions

////////////////////////////////////////////////////////////////////
//     Function: get_catalog_code
//       Access: Public
//  Description: Return the number of entries in this catalog
//               Return empty string if the catalog is not found
////////////////////////////////////////////////////////////////////
107
basic_string< char > DNAStorage::get_catalog_code(basic_string< char > const &catalog_string, int i) const;

521 20 store_catalog_string 4 766 32 DNAStorage::store_catalog_string 0 1 137 229
////////////////////////////////////////////////////////////////////
//     Function: store_catalog_string
//       Access: Public
//  Description: Add a string
////////////////////////////////////////////////////////////////////
122
void DNAStorage::store_catalog_string(basic_string< char > const &catalog_string, basic_string< char > const &dna_string);

522 13 print_catalog 4 766 25 DNAStorage::print_catalog 0 1 138 227
////////////////////////////////////////////////////////////////////
//     Function: print_catalog
//       Access: Public
//  Description: print the catalog
////////////////////////////////////////////////////////////////////
43
void DNAStorage::print_catalog(void) const;

523 14 store_DNAGroup 4 766 26 DNAStorage::store_DNAGroup 0 1 139 275
// DNAGroup functions

////////////////////////////////////////////////////////////////////
//     Function: store_DNAGroup
//       Access: Public
//  Description: store a DNAGroup at the node path pointer
////////////////////////////////////////////////////////////////////
81
void DNAStorage::store_DNAGroup(PointerTo< PandaNode > , PointerTo< DNAGroup > );

524 15 remove_DNAGroup 4 766 27 DNAStorage::remove_DNAGroup 0 2 140 141 784
// DNAGroup functions

////////////////////////////////////////////////////////////////////
//     Function: remove_DNAGroup
//       Access: Public
//  Description: remove the DNAGroup pointed to by rr from the map
//               It also removes all children of the dnaGroup.
//               Returns the total number of DNAGroups removed.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: remove_DNAGroup
//       Access: Public
//  Description: remove the DNAGroup from the map
//               It also removes all children of the dnaGroup.
//               Returns the total number of DNAGroups removed.
////////////////////////////////////////////////////////////////////
114
int DNAStorage::remove_DNAGroup(PointerTo< PandaNode > );
int DNAStorage::remove_DNAGroup(PointerTo< DNAGroup > );

525 13 find_DNAGroup 4 766 25 DNAStorage::find_DNAGroup 0 1 142 250
////////////////////////////////////////////////////////////////////
//     Function: find_DNAGroup
//       Access: Public
//  Description: find a DNAGroup at the node path pointer
////////////////////////////////////////////////////////////////////
79
PointerTo< DNAGroup > DNAStorage::find_DNAGroup(PointerTo< PandaNode > ) const;

526 14 find_PandaNode 4 766 26 DNAStorage::find_PandaNode 0 1 143 243
////////////////////////////////////////////////////////////////////
//     Function: find_PandaNode
//       Access: Public
//  Description: find a PandaNode at the DNAGroup
////////////////////////////////////////////////////////////////////
80
PointerTo< PandaNode > DNAStorage::find_PandaNode(PointerTo< DNAGroup > ) const;

527 26 get_zone_from_block_number 4 766 38 DNAStorage::get_zone_from_block_number 0 1 144 249
// Block number functions

////////////////////////////////////////////////////////////////////
//     Function: get_zone_from_block_number
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
67
int DNAStorage::get_zone_from_block_number(int block_number) const;

528 19 get_block_number_at 4 766 31 DNAStorage::get_block_number_at 0 1 145 259
// Block number functions

////////////////////////////////////////////////////////////////////
//     Function: get_block_number_at
//       Access: Public
//  Description: Get key at index
////////////////////////////////////////////////////////////////////
62
int DNAStorage::get_block_number_at(unsigned int index) const;

529 21 get_num_block_numbers 4 766 33 DNAStorage::get_num_block_numbers 0 1 146 243
////////////////////////////////////////////////////////////////////
//     Function: get_num_block_number
//       Access: Public
//  Description: Ask how many block numbers
////////////////////////////////////////////////////////////////////
50
int DNAStorage::get_num_block_numbers(void) const;

530 34 get_door_pos_hpr_from_block_number 4 766 46 DNAStorage::get_door_pos_hpr_from_block_number 0 1 147 263
// Block door pos hpr functions

////////////////////////////////////////////////////////////////////
//     Function: get_door_pos_hpr_from_block_number
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
85
PosHpr const &DNAStorage::get_door_pos_hpr_from_block_number(int block_number) const;

531 25 get_door_pos_hpr_block_at 4 766 37 DNAStorage::get_door_pos_hpr_block_at 0 1 148 271
// Block door pos hpr functions

////////////////////////////////////////////////////////////////////
//     Function: get_door_pos_hpr_block_at
//       Access: Public
//  Description: Get key at index
////////////////////////////////////////////////////////////////////
68
int DNAStorage::get_door_pos_hpr_block_at(unsigned int index) const;

532 27 get_num_block_door_pos_hprs 4 766 39 DNAStorage::get_num_block_door_pos_hprs 0 1 149 250
////////////////////////////////////////////////////////////////////
//     Function: get_num_block_door_pos_hprs
//       Access: Public
//  Description: Ask how many block numbers
////////////////////////////////////////////////////////////////////
56
int DNAStorage::get_num_block_door_pos_hprs(void) const;

533 36 get_sign_transform_from_block_number 4 766 48 DNAStorage::get_sign_transform_from_block_number 0 1 150 265
// Block sign pos hpr functions

////////////////////////////////////////////////////////////////////
//     Function: get_sign_transform_from_block_number
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
90
LMatrix4f const &DNAStorage::get_sign_transform_from_block_number(int block_number) const;

534 27 get_sign_transform_block_at 4 766 39 DNAStorage::get_sign_transform_block_at 0 1 151 273
// Block sign pos hpr functions

////////////////////////////////////////////////////////////////////
//     Function: get_sign_transform_block_at
//       Access: Public
//  Description: Get key at index
////////////////////////////////////////////////////////////////////
70
int DNAStorage::get_sign_transform_block_at(unsigned int index) const;

535 29 get_num_block_sign_transforms 4 766 41 DNAStorage::get_num_block_sign_transforms 0 1 152 252
////////////////////////////////////////////////////////////////////
//     Function: get_num_block_sign_transforms
//       Access: Public
//  Description: Ask how many block numbers
////////////////////////////////////////////////////////////////////
58
int DNAStorage::get_num_block_sign_transforms(void) const;

536 15 reset_DNAGroups 4 766 27 DNAStorage::reset_DNAGroups 0 1 153 242
////////////////////////////////////////////////////////////////////
//     Function: reset_DNAGroups
//       Access: Public
//  Description: clear out the map of DNAGroups
////////////////////////////////////////////////////////////////////
46
inline void DNAStorage::reset_DNAGroups(void);

537 27 get_title_from_block_number 4 766 39 DNAStorage::get_title_from_block_number 0 1 154 249
// Block title functions

////////////////////////////////////////////////////////////////////
//     Function: get_title_from_block_number
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
85
basic_string< char > DNAStorage::get_title_from_block_number(int block_number) const;

538 18 get_title_block_at 4 766 30 DNAStorage::get_title_block_at 0 1 155 257
// Block title functions

////////////////////////////////////////////////////////////////////
//     Function: get_title_block_at
//       Access: Public
//  Description: Get key at index
////////////////////////////////////////////////////////////////////
61
int DNAStorage::get_title_block_at(unsigned int index) const;

539 20 get_num_block_titles 4 766 32 DNAStorage::get_num_block_titles 0 1 156 243
////////////////////////////////////////////////////////////////////
//     Function: get_num_block_titles
//       Access: Public
//  Description: Ask how many block numbers
////////////////////////////////////////////////////////////////////
49
int DNAStorage::get_num_block_titles(void) const;

540 29 get_article_from_block_number 4 766 41 DNAStorage::get_article_from_block_number 0 1 157 253
// Block article functions

////////////////////////////////////////////////////////////////////
//     Function: get_article_from_block_number
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
87
basic_string< char > DNAStorage::get_article_from_block_number(int block_number) const;

541 25 store_block_building_type 4 766 37 DNAStorage::store_block_building_type 0 1 158 278
// Block building type functions

////////////////////////////////////////////////////////////////////
//     Function: store_block_building_type
//       Access: Public
//  Description: Store a block and zone
////////////////////////////////////////////////////////////////////
112
void DNAStorage::store_block_building_type(basic_string< char > const &block, basic_string< char > const &type);

542 23 get_block_building_type 4 766 35 DNAStorage::get_block_building_type 0 1 159 253
// Block building type functions

////////////////////////////////////////////////////////////////////
//     Function: get_block_building_type
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
81
basic_string< char > DNAStorage::get_block_building_type(int block_number) const;

543 17 store_DNAVisGroup 4 766 29 DNAStorage::store_DNAVisGroup 0 1 160 281
// VisGroup functions

////////////////////////////////////////////////////////////////////
//     Function: store_DNAVisGroup
//       Access: Public
//  Description: store a DNAVisGroup at the node path pointer
////////////////////////////////////////////////////////////////////
94
inline void DNAStorage::store_DNAVisGroup(PointerTo< PandaNode > , PointerTo< DNAVisGroup > );

544 18 remove_DNAVisGroup 4 766 30 DNAStorage::remove_DNAVisGroup 0 1 161 290
// VisGroup functions

////////////////////////////////////////////////////////////////////
//     Function: remove_DNAVisGroup
//       Access: Public
//  Description: remove the DNAVisGroup pointed to by rr from the map
////////////////////////////////////////////////////////////////////
67
inline int DNAStorage::remove_DNAVisGroup(PointerTo< PandaNode > );

545 16 find_DNAVisGroup 4 766 28 DNAStorage::find_DNAVisGroup 0 1 162 256
////////////////////////////////////////////////////////////////////
//     Function: find_DNAVisGroup
//       Access: Public
//  Description: find a DNAVisGroup at the node path pointer
////////////////////////////////////////////////////////////////////
85
PointerTo< DNAVisGroup > DNAStorage::find_DNAVisGroup(PointerTo< PandaNode > ) const;

546 18 reset_DNAVisGroups 4 766 30 DNAStorage::reset_DNAVisGroups 0 1 163 248
////////////////////////////////////////////////////////////////////
//     Function: reset_DNAVisGroups
//       Access: Public
//  Description: clear out the map of DNAVisGroups
////////////////////////////////////////////////////////////////////
49
inline void DNAStorage::reset_DNAVisGroups(void);

547 20 get_num_DNAVisGroups 4 766 32 DNAStorage::get_num_DNAVisGroups 0 1 164 267
////////////////////////////////////////////////////////////////////
//     Function: get_num_DNAVisGroups
//       Access: Public
//  Description: Ask how many vis groups this dna store knows about
////////////////////////////////////////////////////////////////////
56
inline int DNAStorage::get_num_DNAVisGroups(void) const;

548 15 get_DNAVisGroup 4 766 27 DNAStorage::get_DNAVisGroup 0 1 165 251
////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroup
//       Access: Public
//  Description: Return the ith vis group in our storage
////////////////////////////////////////////////////////////////////
75
PointerTo< DNAVisGroup > DNAStorage::get_DNAVisGroup(unsigned int i) const;

549 31 get_num_visibles_in_DNAVisGroup 4 766 43 DNAStorage::get_num_visibles_in_DNAVisGroup 0 1 166 276
////////////////////////////////////////////////////////////////////
//     Function: get_num_visibles_in_DNAVisGroup
//       Access: Public
//  Description: Ask how many visibles there are in this visgroup
////////////////////////////////////////////////////////////////////
70
int DNAStorage::get_num_visibles_in_DNAVisGroup(unsigned int i) const;

550 20 get_DNAVisGroup_name 4 766 32 DNAStorage::get_DNAVisGroup_name 0 1 167 267
////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroup_name
//       Access: Public
//  Description: Ask for the name of the nth DNAVisGroup in the map
////////////////////////////////////////////////////////////////////
76
basic_string< char > DNAStorage::get_DNAVisGroup_name(unsigned int i) const;

551 16 get_visible_name 4 766 28 DNAStorage::get_visible_name 0 1 168 271
////////////////////////////////////////////////////////////////////
//     Function: get_visible_name
//       Access: Public
//  Description: Ask for the name of the nth visible in the nth DNAVisGroup
////////////////////////////////////////////////////////////////////
113
basic_string< char > DNAStorage::get_visible_name(unsigned int visgroup_index, unsigned int visible_index) const;

552 19 store_DNAVisGroupAI 4 766 31 DNAStorage::store_DNAVisGroupAI 0 1 169 381
// For the AI, he does not traverse but still needs vis groups

////////////////////////////////////////////////////////////////////
//     Function: store_DNAVisGroupAI
//       Access: Public
//  Description: store a DNAVisGroup in a vector so the AI can
//               retrieve it without traversing the DNA
////////////////////////////////////////////////////////////////////
64
void DNAStorage::store_DNAVisGroupAI(PointerTo< DNAVisGroup > );

553 22 get_num_DNAVisGroupsAI 4 766 34 DNAStorage::get_num_DNAVisGroupsAI 0 1 170 333
// For the AI, he does not traverse but still needs vis groups

////////////////////////////////////////////////////////////////////
//     Function: get_num_DNAVisGroupsAI
//       Access: Public
//  Description: Ask how many vis groups this dna store knows about
////////////////////////////////////////////////////////////////////
58
inline int DNAStorage::get_num_DNAVisGroupsAI(void) const;

554 17 get_DNAVisGroupAI 4 766 29 DNAStorage::get_DNAVisGroupAI 0 1 171 253
////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroupAI
//       Access: Public
//  Description: Return the ith vis group in our storage
////////////////////////////////////////////////////////////////////
84
inline PointerTo< DNAVisGroup > DNAStorage::get_DNAVisGroupAI(unsigned int i) const;

555 20 reset_DNAVisGroupsAI 4 766 32 DNAStorage::reset_DNAVisGroupsAI 0 1 172 253
////////////////////////////////////////////////////////////////////
//     Function: reset_DNAVisGroupsAI
//       Access: Public
//  Description: clear out the vector of DNAVisGroups
////////////////////////////////////////////////////////////////////
51
inline void DNAStorage::reset_DNAVisGroupsAI(void);

556 18 get_num_PandaNodes 4 766 30 DNAStorage::get_num_PandaNodes 0 1 173 284
// Node relation functions

////////////////////////////////////////////////////////////////////
//     Function: get_num_PandaNodes
//       Access: Public
//  Description: how many node paths do we have in our map
////////////////////////////////////////////////////////////////////
54
inline int DNAStorage::get_num_PandaNodes(void) const;

557 16 get_PandaNode_at 4 766 28 DNAStorage::get_PandaNode_at 0 1 174 264
// Node relation functions

////////////////////////////////////////////////////////////////////
//     Function: get_PandaNode_at
//       Access: Public
//  Description: return the ith NodePath
////////////////////////////////////////////////////////////////////
74
PointerTo< PandaNode > DNAStorage::get_PandaNode_at(unsigned int i) const;

558 16 print_PandaNodes 4 766 28 DNAStorage::print_PandaNodes 0 1 175 0
46
void DNAStorage::print_PandaNodes(void) const;

559 18 get_suit_edge_zone 4 766 30 DNAStorage::get_suit_edge_zone 0 1 176 346
// Suit point functions

////////////////////////////////////////////////////////////////////
//     Function: get_suit_edge_zone
//       Access: Public
//  Description: Ask for the zone that this edge is in
//               Returns -1 if there is no edge between these points
////////////////////////////////////////////////////////////////////
90
basic_string< char > DNAStorage::get_suit_edge_zone(int start_index, int end_index) const;

560 25 get_suit_edge_travel_time 4 766 37 DNAStorage::get_suit_edge_travel_time 0 1 177 474
// Suit point functions

////////////////////////////////////////////////////////////////////
//     Function: get_suit_travel_time
//       Access: Public
//  Description: Ask how long in seconds it will take a suit to walk
//               from the start point to the end point if he is
//               walking this constant rate in units/second
//               If there is not connection, return -1.0
////////////////////////////////////////////////////////////////////
94
float DNAStorage::get_suit_edge_travel_time(int start_index, int end_index, float rate) const;

561 19 get_num_suit_points 4 766 31 DNAStorage::get_num_suit_points 0 1 178 256
////////////////////////////////////////////////////////////////////
//     Function: get_num_suit_points
//       Access: Public
//  Description: How many suit points are in the map now?
////////////////////////////////////////////////////////////////////
55
inline int DNAStorage::get_num_suit_points(void) const;

562 23 get_suit_point_at_index 4 766 35 DNAStorage::get_suit_point_at_index 0 1 179 273
////////////////////////////////////////////////////////////////////
//     Function: get_suit_point_at_index
//       Access: Private
//  Description: Convient way to return the point at index internally
////////////////////////////////////////////////////////////////////
86
inline PointerTo< DNASuitPoint > DNAStorage::get_suit_point_at_index(int index) const;

563 25 get_suit_point_with_index 4 766 37 DNAStorage::get_suit_point_with_index 0 1 180 275
////////////////////////////////////////////////////////////////////
//     Function: get_suit_point_with_index
//       Access: Private
//  Description: Convient way to return the point at index internally
////////////////////////////////////////////////////////////////////
88
inline PointerTo< DNASuitPoint > DNAStorage::get_suit_point_with_index(int index) const;

564 13 get_suit_path 4 766 25 DNAStorage::get_suit_path 0 1 181 708
////////////////////////////////////////////////////////////////////
//     Function: get_suit_path
//       Access: Public
//  Description: Find a valid path from start to end for a suit to
//               walk on given all the points and edges that are
//               loaded in the current branch
//               To make this easy, the SuitStartPointMap is organized
//               as a map of points to edge lists that that point starts
//               {
//                 start_point1 { edge1 edge2 edge3 }
//                 start_point2 { edge4 edge5 }
//                 start_point3 { edge6 edge7 edge8 }
//               }
////////////////////////////////////////////////////////////////////
153
PointerTo< DNASuitPath > DNAStorage::get_suit_path(DNASuitPoint const *start_point, DNASuitPoint const *end_point, int min_length, int max_length) const;

565 19 get_adjacent_points 4 766 31 DNAStorage::get_adjacent_points 0 1 182 432
////////////////////////////////////////////////////////////////////
//     Function: get_adjacent_points
//       Access: Public
//  Description: Returns all of the points adjacent to the indicated
//               point.  The result is returned as a DNASuitPath, even
//               though it's not actually a path; it's just a set of
//               points.
////////////////////////////////////////////////////////////////////
102
PointerTo< DNASuitPath > DNAStorage::get_adjacent_points(PointerTo< DNASuitPoint > start_point) const;

566 19 discover_continuity 4 766 31 DNAStorage::discover_continuity 0 1 183 725
////////////////////////////////////////////////////////////////////
//     Function: discover_continuity
//       Access: Public
//  Description: This should be called once the DNA file has been read
//               and the set of suit points is complete.  It walks
//               through the points and discovers which points are
//               connected to each other and which are not.  Each
//               group of suit points that can be reached from each
//               other are assigned a unique graph_id number, which
//               has no other meaning.  The return value is the number
//               of disconnected graphs we have.
////////////////////////////////////////////////////////////////////
42
int DNAStorage::discover_continuity(void);

567 9 get_block 4 766 21 DNAStorage::get_block 0 1 184 279
////////////////////////////////////////////////////////////////////
//     Function: get_block
//       Access: Public
//  Description: Get the block number as a string from the building
//               name.
////////////////////////////////////////////////////////////////////
83
basic_string< char > DNAStorage::get_block(basic_string< char > const &name) const;

568 5 fixup 4 766 17 DNAStorage::fixup 0 1 185 302
////////////////////////////////////////////////////////////////////
//     Function: fixup
//       Access: Public
//  Description: Do any processing here before we write the file
//               to cleanup or fixup the dna storage
////////////////////////////////////////////////////////////////////
29
void DNAStorage::fixup(void);

569 5 write 4 766 17 DNAStorage::write 0 1 186 315
////////////////////////////////////////////////////////////////////
//     Function: write
//       Access: Public
//  Description: Write out to the dna file whatever the storage
//               feels it needs to. For instance, the suit points.
////////////////////////////////////////////////////////////////////
61
void DNAStorage::write(ostream &out, int indent_level) const;

570 11 ~DNAStorage 4 766 23 DNAStorage::~DNAStorage 0 0 0
30
DNAStorage::~DNAStorage(void);

571 7 DNANode 4 767 16 DNANode::DNANode 0 2 187 188 438
////////////////////////////////////////////////////////////////////
//     Function: DNANode::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNANode::CopyConstructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
98
DNANode::DNANode(basic_string< char > const &initial_name);
DNANode::DNANode(DNANode const &node);

572 7 set_pos 4 767 16 DNANode::set_pos 0 1 189 0
52
inline void DNANode::set_pos(LVecBase3f const &pos);

573 7 get_pos 4 767 16 DNANode::get_pos 0 1 190 0
47
inline LVecBase3f DNANode::get_pos(void) const;

574 7 set_hpr 4 767 16 DNANode::set_hpr 0 1 191 0
52
inline void DNANode::set_hpr(LVecBase3f const &hpr);

575 7 get_hpr 4 767 16 DNANode::get_hpr 0 1 192 0
47
inline LVecBase3f DNANode::get_hpr(void) const;

576 9 set_scale 4 767 18 DNANode::set_scale 0 1 193 0
56
inline void DNANode::set_scale(LVecBase3f const &scale);

577 9 get_scale 4 767 18 DNANode::get_scale 0 1 194 0
49
inline LVecBase3f DNANode::get_scale(void) const;

578 14 get_class_type 4 767 23 DNANode::get_class_type 0 1 195 0
48
static TypeHandle DNANode::get_class_type(void);

579 8 ~DNANode 4 767 17 DNANode::~DNANode 0 0 0
24
DNANode::~DNANode(void);

580 7 DNAWall 4 768 16 DNAWall::DNAWall 0 3 196 197 198 439
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAWall::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
105
DNAWall::DNAWall(basic_string< char > const &initial_name = (""));
DNAWall::DNAWall(DNAWall const &wall);

581 8 set_code 4 768 17 DNAWall::set_code 0 1 199 213
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
57
inline void DNAWall::set_code(basic_string< char > code);

582 8 get_code 4 768 17 DNAWall::get_code 0 1 200 213
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
58
inline basic_string< char > DNAWall::get_code(void) const;

583 10 set_height 4 768 19 DNAWall::set_height 0 1 201 349
// Filename: dnaBuildings.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_height
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
46
inline void DNAWall::set_height(float height);

584 10 get_height 4 768 19 DNAWall::get_height 0 1 202 215
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_height
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
45
inline float DNAWall::get_height(void) const;

585 9 set_color 4 768 18 DNAWall::set_color 0 1 203 214
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
56
inline void DNAWall::set_color(LVecBase4f const &color);

586 9 get_color 4 768 18 DNAWall::get_color 0 1 204 214
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
49
inline LVecBase4f DNAWall::get_color(void) const;

587 14 get_class_type 4 768 23 DNAWall::get_class_type 0 1 205 0
48
static TypeHandle DNAWall::get_class_type(void);

588 8 ~DNAWall 4 768 17 DNAWall::~DNAWall 0 0 0
24
DNAWall::~DNAWall(void);

589 15 DNAFlatBuilding 4 769 32 DNAFlatBuilding::DNAFlatBuilding 0 3 206 207 208 455
////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
149
DNAFlatBuilding::DNAFlatBuilding(basic_string< char > const &initial_name = (""));
DNAFlatBuilding::DNAFlatBuilding(DNAFlatBuilding const &building);

590 9 set_width 4 769 26 DNAFlatBuilding::set_width 0 1 209 222
////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::set_width
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
52
inline void DNAFlatBuilding::set_width(float width);

591 9 get_width 4 769 26 DNAFlatBuilding::get_width 0 1 210 222
////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::get_width
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
52
inline float DNAFlatBuilding::get_width(void) const;

592 23 get_current_wall_height 4 769 40 DNAFlatBuilding::get_current_wall_height 0 1 211 236
////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::get_current_wall_height
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
60
inline float DNAFlatBuilding::get_current_wall_height(void);

593 14 get_class_type 4 769 31 DNAFlatBuilding::get_class_type 0 1 212 0
56
static TypeHandle DNAFlatBuilding::get_class_type(void);

594 16 ~DNAFlatBuilding 4 769 33 DNAFlatBuilding::~DNAFlatBuilding 0 0 0
40
DNAFlatBuilding::~DNAFlatBuilding(void);

595 19 DNALandmarkBuilding 4 770 40 DNALandmarkBuilding::DNALandmarkBuilding 0 3 213 214 215 463
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
169
DNALandmarkBuilding::DNALandmarkBuilding(basic_string< char > const &initial_name = (""));
DNALandmarkBuilding::DNALandmarkBuilding(DNALandmarkBuilding const &building);

596 9 set_title 4 770 30 DNALandmarkBuilding::set_title 0 1 216 226
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_title
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
78
inline void DNALandmarkBuilding::set_title(basic_string< char > const &title);

597 9 get_title 4 770 30 DNALandmarkBuilding::get_title 0 1 217 226
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_title
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
71
inline basic_string< char > DNALandmarkBuilding::get_title(void) const;

598 11 set_article 4 770 32 DNALandmarkBuilding::set_article 0 1 218 228
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_article
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
82
inline void DNALandmarkBuilding::set_article(basic_string< char > const &article);

599 11 get_article 4 770 32 DNALandmarkBuilding::get_article 0 1 219 228
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_article
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
73
inline basic_string< char > DNALandmarkBuilding::get_article(void) const;

600 8 set_code 4 770 29 DNALandmarkBuilding::set_code 0 1 220 225
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
69
inline void DNALandmarkBuilding::set_code(basic_string< char > code);

601 8 get_code 4 770 29 DNALandmarkBuilding::get_code 0 1 221 225
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
70
inline basic_string< char > DNALandmarkBuilding::get_code(void) const;

602 14 set_wall_color 4 770 35 DNALandmarkBuilding::set_wall_color 0 1 222 231
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_wall_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
73
inline void DNALandmarkBuilding::set_wall_color(LVecBase4f const &color);

603 14 get_wall_color 4 770 35 DNALandmarkBuilding::get_wall_color 0 1 223 231
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_wall_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
66
inline LVecBase4f DNALandmarkBuilding::get_wall_color(void) const;

604 17 set_building_type 4 770 38 DNALandmarkBuilding::set_building_type 0 1 224 269
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_building_type
//       Access: Public
//  Description: Set the flag for Toon Headquarters
////////////////////////////////////////////////////////////////////
85
inline void DNALandmarkBuilding::set_building_type(basic_string< char > const &type);

605 17 get_building_type 4 770 38 DNALandmarkBuilding::get_building_type 0 1 225 267
////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_building_type
//       Access: Public
//  Description: Is this a Headquarters building?
////////////////////////////////////////////////////////////////////
79
inline basic_string< char > DNALandmarkBuilding::get_building_type(void) const;

606 14 get_class_type 4 770 35 DNALandmarkBuilding::get_class_type 0 1 226 0
60
static TypeHandle DNALandmarkBuilding::get_class_type(void);

607 20 ~DNALandmarkBuilding 4 770 41 DNALandmarkBuilding::~DNALandmarkBuilding 0 0 0
48
DNALandmarkBuilding::~DNALandmarkBuilding(void);

608 15 DNAAnimBuilding 4 771 32 DNAAnimBuilding::DNAAnimBuilding 0 3 227 228 229 455
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
154
DNAAnimBuilding::DNAAnimBuilding(basic_string< char > const &initial_name = (""));
DNAAnimBuilding::DNAAnimBuilding(DNAAnimBuilding const &anim_building);

609 8 set_anim 4 771 25 DNAAnimBuilding::set_anim 0 1 230 356
// Filename: dnaAnimBuilding.I
// Created by:  gjeon (12Nov09)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::set_anim
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
65
inline void DNAAnimBuilding::set_anim(basic_string< char > anim);

610 8 get_anim 4 771 25 DNAAnimBuilding::get_anim 0 1 231 221
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::get_anim
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
66
inline basic_string< char > DNAAnimBuilding::get_anim(void) const;

611 14 get_class_type 4 771 31 DNAAnimBuilding::get_class_type 0 1 232 0
56
static TypeHandle DNAAnimBuilding::get_class_type(void);

612 16 ~DNAAnimBuilding 4 771 33 DNAAnimBuilding::~DNAAnimBuilding 0 0 0
40
DNAAnimBuilding::~DNAAnimBuilding(void);

613 7 DNAProp 4 772 16 DNAProp::DNAProp 0 3 233 234 235 439
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAProp::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
105
DNAProp::DNAProp(basic_string< char > const &initial_name = (""));
DNAProp::DNAProp(DNAProp const &prop);

614 8 set_code 4 772 17 DNAProp::set_code 0 1 236 213
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::set_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
57
inline void DNAProp::set_code(basic_string< char > code);

615 8 get_code 4 772 17 DNAProp::get_code 0 1 237 213
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::get_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
58
inline basic_string< char > DNAProp::get_code(void) const;

616 9 set_color 4 772 18 DNAProp::set_color 0 1 238 343
// Filename: dnaProp.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::set_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
56
inline void DNAProp::set_color(LVecBase4f const &color);

617 9 get_color 4 772 18 DNAProp::get_color 0 1 239 214
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::get_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
49
inline LVecBase4f DNAProp::get_color(void) const;

618 14 get_class_type 4 772 23 DNAProp::get_class_type 0 1 240 0
48
static TypeHandle DNAProp::get_class_type(void);

619 8 ~DNAProp 4 772 17 DNAProp::~DNAProp 0 0 0
24
DNAProp::~DNAProp(void);

620 11 DNAAnimProp 4 773 24 DNAAnimProp::DNAAnimProp 0 3 241 242 243 447
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
130
DNAAnimProp::DNAAnimProp(basic_string< char > const &initial_name = (""));
DNAAnimProp::DNAAnimProp(DNAAnimProp const &anim_prop);

621 8 set_anim 4 773 21 DNAAnimProp::set_anim 0 1 244 348
// Filename: dnaAnimProp.I
// Created by:  gjeon (18Sep09)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::set_anim
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
61
inline void DNAAnimProp::set_anim(basic_string< char > anim);

622 8 get_anim 4 773 21 DNAAnimProp::get_anim 0 1 245 217
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::get_anim
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
62
inline basic_string< char > DNAAnimProp::get_anim(void) const;

623 14 get_class_type 4 773 27 DNAAnimProp::get_class_type 0 1 246 0
52
static TypeHandle DNAAnimProp::get_class_type(void);

624 12 ~DNAAnimProp 4 773 25 DNAAnimProp::~DNAAnimProp 0 0 0
32
DNAAnimProp::~DNAAnimProp(void);

625 10 DNACornice 4 774 22 DNACornice::DNACornice 0 3 247 248 249 445
////////////////////////////////////////////////////////////////////
//     Function: DNACornice::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNACornice::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
123
DNACornice::DNACornice(basic_string< char > const &initial_name = (""));
DNACornice::DNACornice(DNACornice const &cornice);

626 8 set_code 4 774 20 DNACornice::set_code 0 1 250 216
////////////////////////////////////////////////////////////////////
//     Function: DNACornice::set_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
53
void DNACornice::set_code(basic_string< char > code);

627 8 get_code 4 774 20 DNACornice::get_code 0 1 251 216
////////////////////////////////////////////////////////////////////
//     Function: DNACornice::get_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
54
basic_string< char > DNACornice::get_code(void) const;

628 9 set_color 4 774 21 DNACornice::set_color 0 1 252 217
////////////////////////////////////////////////////////////////////
//     Function: DNACornice::set_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
52
void DNACornice::set_color(LVecBase4f const &color);

629 9 get_color 4 774 21 DNACornice::get_color 0 1 253 217
////////////////////////////////////////////////////////////////////
//     Function: DNACornice::get_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
45
LVecBase4f DNACornice::get_color(void) const;

630 14 get_class_type 4 774 26 DNACornice::get_class_type 0 1 254 0
51
static TypeHandle DNACornice::get_class_type(void);

631 11 ~DNACornice 4 774 23 DNACornice::~DNACornice 0 0 0
30
DNACornice::~DNACornice(void);

632 7 DNAData 4 775 16 DNAData::DNAData 0 3 255 256 257 568
// Filename: dnaData.I
// Created by:  shochet (24May00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAData::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAData::Copy constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
119
inline DNAData::DNAData(basic_string< char > const &initial_name = (""));
inline DNAData::DNAData(DNAData const &copy);

633 10 operator = 4 775 19 DNAData::operator = 0 1 258 229
////////////////////////////////////////////////////////////////////
//     Function: DNAData::Copy assignment operator
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
57
inline DNAData &DNAData::operator =(DNAData const &copy);

634 4 read 4 775 13 DNAData::read 0 4 259 260 261 262 1049
////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Opens the indicated filename and reads the DNA data
//               contents from it.  Returns true if the file was
//               successfully opened and read, false if there were
//               some errors, in which case the data may be partially
//               read.
//
//               error is the output stream to which to write error
//               messages.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Parses the DNA syntax contained in the indicated
//               input stream.  Returns true if the stream was a
//               completely valid DNA file, false if there were some
//               errors, in which case the data may be partially read.
////////////////////////////////////////////////////////////////////
127
bool DNAData::read(Filename filename, ostream &error = ((out())));
bool DNAData::read(istream &in, ostream &error = ((out())));

635 20 resolve_dna_filename 4 775 29 DNAData::resolve_dna_filename 0 2 263 264 528
////////////////////////////////////////////////////////////////////
//     Function: DnaData::resolve_dna_filename
//       Access: Public, Static
//  Description: Looks for the indicated filename, first along the
//               indicated searchpath, and then along the dna_path and
//               finally along the model_path.  If found, updates the
//               filename to the full path and returns true;
//               otherwise, returns false.
////////////////////////////////////////////////////////////////////
106
static bool DNAData::resolve_dna_filename(Filename &dna_filename, DSearchPath const &searchpath = ((())));

636 17 resolve_externals 4 775 26 DNAData::resolve_externals 0 2 265 266 659
////////////////////////////////////////////////////////////////////
//     Function: DNAData::resolve_externals
//       Access: Public
//  Description: Loads up all the dna files referenced by <File>
//               entries within the dna structure, and inserts their
//               contents in place of the <File> entries.  Searches
//               for files in the searchpath, if not found directly,
//               and writes error messages to the indicated output
//               stream.  Returns true if all externals were loaded
//               successfully, false otherwise.
////////////////////////////////////////////////////////////////////
100
bool DNAData::resolve_externals(basic_string< char > const &searchpath, ostream &error = ((out())));

637 9 write_dna 4 775 18 DNAData::write_dna 0 2 267 268 532
////////////////////////////////////////////////////////////////////
//     Function: DNAData::write_dna
//       Access: Public
//  Description: The main interface for writing complete dna files.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAData::write_dna
//       Access: Public
//  Description: The main interface for writing complete dna files.
////////////////////////////////////////////////////////////////////
152
bool DNAData::write_dna(Filename filename, ostream &error, DNAStorage *store);
bool DNAData::write_dna(ostream &out, ostream &error, DNAStorage *store);

638 21 set_coordinate_system 4 775 30 DNAData::set_coordinate_system 0 1 269 403
////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_coordinate_system
//       Access: Public
//  Description: Changes the coordinate system of the DNAData.  If the
//               coordinate system was previously different, this may
//               result in a conversion of the data.
////////////////////////////////////////////////////////////////////
63
void DNAData::set_coordinate_system(CoordinateSystem coordsys);

639 21 get_coordinate_system 4 775 30 DNAData::get_coordinate_system 0 1 270 307
////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_coordinate_system
//       Access: Public
//  Description: Returns the coordinate system in which the dna file
//               is defined.
////////////////////////////////////////////////////////////////////
67
inline CoordinateSystem DNAData::get_coordinate_system(void) const;

640 16 set_dna_filename 4 775 25 DNAData::set_dna_filename 0 1 271 361
////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_dna_filename
//       Access: Public
//  Description: Sets the directory in which the dna file is
//               considered to reside.  This is also implicitly set by
//               read().
////////////////////////////////////////////////////////////////////
65
inline void DNAData::set_dna_filename(Filename const &directory);

641 16 get_dna_filename 4 775 25 DNAData::get_dna_filename 0 1 272 307
////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_dna_filename
//       Access: Public
//  Description: Returns the directory in which the dna file is
//               considered to reside.
////////////////////////////////////////////////////////////////////
61
inline Filename const &DNAData::get_dna_filename(void) const;

642 15 set_dna_storage 4 775 24 DNAData::set_dna_storage 0 1 273 258
////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_dna_storage
//       Access: Public
//  Description: Sets the current dna storage facility
////////////////////////////////////////////////////////////////////
56
inline void DNAData::set_dna_storage(DNAStorage *store);

643 15 get_dna_storage 4 775 24 DNAData::get_dna_storage 0 1 274 261
////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_dna_storage
//       Access: Public
//  Description: Returns the current dna storage facility
////////////////////////////////////////////////////////////////////
50
inline DNAStorage *DNAData::get_dna_storage(void);

644 14 get_class_type 4 775 23 DNAData::get_class_type 0 1 275 0
48
static TypeHandle DNAData::get_class_type(void);

645 8 ~DNAData 4 775 17 DNAData::~DNAData 0 0 0
24
DNAData::~DNAData(void);

646 7 DNADoor 4 776 16 DNADoor::DNADoor 0 3 276 277 278 439
////////////////////////////////////////////////////////////////////
//     Function: DNADoor::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNADoor::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
105
DNADoor::DNADoor(basic_string< char > const &initial_name = (""));
DNADoor::DNADoor(DNADoor const &door);

647 8 set_code 4 776 17 DNADoor::set_code 0 1 279 213
////////////////////////////////////////////////////////////////////
//     Function: DNADoor::set_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
50
void DNADoor::set_code(basic_string< char > code);

648 8 get_code 4 776 17 DNADoor::get_code 0 1 280 213
////////////////////////////////////////////////////////////////////
//     Function: DNADoor::get_code
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
51
basic_string< char > DNADoor::get_code(void) const;

649 9 set_color 4 776 18 DNADoor::set_color 0 1 281 214
////////////////////////////////////////////////////////////////////
//     Function: DNADoor::set_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
49
void DNADoor::set_color(LVecBase4f const &color);

650 9 get_color 4 776 18 DNADoor::get_color 0 1 282 214
////////////////////////////////////////////////////////////////////
//     Function: DNADoor::get_color
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
42
LVecBase4f DNADoor::get_color(void) const;

651 10 setup_door 4 776 19 DNADoor::setup_door 0 1 283 0
177
static void DNADoor::setup_door(NodePath &door_node_path, NodePath &parent, NodePath &door_origin, DNAStorage *store, basic_string< char > const &block, LVector4f const &color);

652 14 get_class_type 4 776 23 DNADoor::get_class_type 0 1 284 0
48
static TypeHandle DNADoor::get_class_type(void);

653 8 ~DNADoor 4 776 17 DNADoor::~DNADoor 0 0 0
24
DNADoor::~DNADoor(void);

654 11 DNAFlatDoor 4 777 24 DNAFlatDoor::DNAFlatDoor 0 3 285 286 287 447
////////////////////////////////////////////////////////////////////
//     Function: DNAFlatDoor::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAFlatDoor::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
125
DNAFlatDoor::DNAFlatDoor(basic_string< char > const &initial_name = (""));
DNAFlatDoor::DNAFlatDoor(DNAFlatDoor const &door);

655 14 get_class_type 4 777 27 DNAFlatDoor::get_class_type 0 1 288 0
52
static TypeHandle DNAFlatDoor::get_class_type(void);

656 12 ~DNAFlatDoor 4 777 25 DNAFlatDoor::~DNAFlatDoor 0 0 0
32
DNAFlatDoor::~DNAFlatDoor(void);

657 18 DNAInteractiveProp 4 778 38 DNAInteractiveProp::DNAInteractiveProp 0 3 289 290 291 461
////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
172
DNAInteractiveProp::DNAInteractiveProp(basic_string< char > const &initial_name = (""));
DNAInteractiveProp::DNAInteractiveProp(DNAInteractiveProp const &interactive_prop);

658 11 set_cell_id 4 778 31 DNAInteractiveProp::set_cell_id 0 1 292 721
// Filename: dnaInteractiveProp.I
// Created by:  gjeon (02Oct09)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::set_cell_id
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
57
inline void DNAInteractiveProp::set_cell_id(int cell_id);

659 11 get_cell_id 4 778 31 DNAInteractiveProp::get_cell_id 0 1 293 227
////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::get_cell_id
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
55
inline int DNAInteractiveProp::get_cell_id(void) const;

660 14 get_class_type 4 778 34 DNAInteractiveProp::get_class_type 0 1 294 0
59
static TypeHandle DNAInteractiveProp::get_class_type(void);

661 19 ~DNAInteractiveProp 4 778 39 DNAInteractiveProp::~DNAInteractiveProp 0 0 0
46
DNAInteractiveProp::~DNAInteractiveProp(void);

662 9 DNALoader 4 779 20 DNALoader::DNALoader 0 1 295 218
////////////////////////////////////////////////////////////////////
//     Function: DNALoader::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
27
DNALoader::DNALoader(void);

663 11 build_graph 4 779 22 DNALoader::build_graph 0 2 296 297 218
////////////////////////////////////////////////////////////////////
//     Function: DNALoader::build_graph
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
88
PointerTo< PandaNode > DNALoader::build_graph(DNAStorage *dna_store, int editing = (0));

664 8 get_data 4 779 19 DNALoader::get_data 0 1 298 0
47
PointerTo< DNAData > DNALoader::get_data(void);

665 12 get_top_node 20 779 23 DNALoader::get_top_node 0 1 299 55
getter for PointerTo< PandaNode > DNALoader::_top_node;
66
PointerTo< PandaNode > const &DNALoader::get_top_node(void) const;

666 8 get_root 20 779 19 DNALoader::get_root 0 1 300 37
getter for NodePath DNALoader::_root;
48
NodePath const &DNALoader::get_root(void) const;

667 10 ~DNALoader 4 779 21 DNALoader::~DNALoader 0 0 0
28
DNALoader::~DNALoader(void);

668 10 DNAWindows 4 783 22 DNAWindows::DNAWindows 0 3 301 302 303 445
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
122
DNAWindows::DNAWindows(basic_string< char > const &initial_name = (""));
DNAWindows::DNAWindows(DNAWindows const &window);

669 8 set_code 4 783 20 DNAWindows::set_code 0 1 304 381
// Filename: dnaWindow.I
// Created by:  shochet (11Jun00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_code
//       Access: Public
//  Description: sets the code of the windows node
////////////////////////////////////////////////////////////////////
60
inline void DNAWindows::set_code(basic_string< char > code);

670 8 get_code 4 783 20 DNAWindows::get_code 0 1 305 253
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_code
//       Access: Public
//  Description: returns the code of the windows node
////////////////////////////////////////////////////////////////////
61
inline basic_string< char > DNAWindows::get_code(void) const;

671 16 set_window_count 4 783 28 DNAWindows::set_window_count 0 1 306 251
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_window_count
//       Access: Public
//  Description: sets the number of windows
////////////////////////////////////////////////////////////////////
52
inline void DNAWindows::set_window_count(int count);

672 16 get_window_count 4 783 28 DNAWindows::get_window_count 0 1 307 253
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_window_count
//       Access: Public
//  Description: returns the count of windows
////////////////////////////////////////////////////////////////////
52
inline int DNAWindows::get_window_count(void) const;

673 9 set_color 4 783 21 DNAWindows::set_color 0 1 308 252
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_color
//       Access: Public
//  Description: sets the color of the windows node
////////////////////////////////////////////////////////////////////
59
inline void DNAWindows::set_color(LVecBase4f const &color);

674 9 get_color 4 783 21 DNAWindows::get_color 0 1 309 255
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_color
//       Access: Public
//  Description: returns the color of the windows node
////////////////////////////////////////////////////////////////////
52
inline LVecBase4f DNAWindows::get_color(void) const;

675 14 get_class_type 4 783 26 DNAWindows::get_class_type 0 1 310 0
51
static TypeHandle DNAWindows::get_class_type(void);

676 11 ~DNAWindows 4 783 23 DNAWindows::~DNAWindows 0 0 0
30
DNAWindows::~DNAWindows(void);

677 9 DNAStreet 4 784 20 DNAStreet::DNAStreet 0 2 311 312 443
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
110
DNAStreet::DNAStreet(basic_string< char > const &initial_name);
DNAStreet::DNAStreet(DNAStreet const &street);

678 8 set_code 4 784 19 DNAStreet::set_code 0 1 313 379
// Filename: dnaStreet.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_code
//       Access: Public
//  Description: sets the code of the street node
////////////////////////////////////////////////////////////////////
59
inline void DNAStreet::set_code(basic_string< char > code);

679 8 get_code 4 784 19 DNAStreet::get_code 0 1 314 251
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_code
//       Access: Public
//  Description: returns the code of the street node
////////////////////////////////////////////////////////////////////
60
inline basic_string< char > DNAStreet::get_code(void) const;

680 18 set_street_texture 4 784 29 DNAStreet::set_street_texture 0 1 315 261
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_street_texture
//       Access: Public
//  Description: sets the texture of the street node
////////////////////////////////////////////////////////////////////
79
inline void DNAStreet::set_street_texture(basic_string< char > street_texture);

681 18 get_street_texture 4 784 29 DNAStreet::get_street_texture 0 1 316 264
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_street_texture
//       Access: Public
//  Description: returns the texture of the street node
////////////////////////////////////////////////////////////////////
70
inline basic_string< char > DNAStreet::get_street_texture(void) const;

682 20 set_sidewalk_texture 4 784 31 DNAStreet::set_sidewalk_texture 0 1 317 265
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_sidewalk_texture
//       Access: Public
//  Description: sets the texture of the sidewalk node
////////////////////////////////////////////////////////////////////
83
inline void DNAStreet::set_sidewalk_texture(basic_string< char > sidewalk_texture);

683 20 get_sidewalk_texture 4 784 31 DNAStreet::get_sidewalk_texture 0 1 318 268
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_sidewalk_texture
//       Access: Public
//  Description: returns the texture of the sidewalk node
////////////////////////////////////////////////////////////////////
72
inline basic_string< char > DNAStreet::get_sidewalk_texture(void) const;

684 16 set_curb_texture 4 784 27 DNAStreet::set_curb_texture 0 1 319 257
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_curb_texture
//       Access: Public
//  Description: sets the texture of the curb node
////////////////////////////////////////////////////////////////////
75
inline void DNAStreet::set_curb_texture(basic_string< char > curb_texture);

685 16 get_curb_texture 4 784 27 DNAStreet::get_curb_texture 0 1 320 260
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_curb_texture
//       Access: Public
//  Description: returns the texture of the curb node
////////////////////////////////////////////////////////////////////
68
inline basic_string< char > DNAStreet::get_curb_texture(void) const;

686 16 set_street_color 4 784 27 DNAStreet::set_street_color 0 1 321 329
// For now we no longer support color on streets to allow vertex color

////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_street_color
//       Access: Public
//  Description: sets the color of the street node
////////////////////////////////////////////////////////////////////
65
inline void DNAStreet::set_street_color(LVecBase4f const &color);

687 16 get_street_color 4 784 27 DNAStreet::get_street_color 0 1 322 260
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_street_color
//       Access: Public
//  Description: returns the color of the street node
////////////////////////////////////////////////////////////////////
58
inline LVecBase4f DNAStreet::get_street_color(void) const;

688 18 set_sidewalk_color 4 784 29 DNAStreet::set_sidewalk_color 0 1 323 261
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_sidewalk_color
//       Access: Public
//  Description: sets the color of the sidewalk node
////////////////////////////////////////////////////////////////////
67
inline void DNAStreet::set_sidewalk_color(LVecBase4f const &color);

689 18 get_sidewalk_color 4 784 29 DNAStreet::get_sidewalk_color 0 1 324 264
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_sidewalk_color
//       Access: Public
//  Description: returns the color of the sidewalk node
////////////////////////////////////////////////////////////////////
60
inline LVecBase4f DNAStreet::get_sidewalk_color(void) const;

690 14 set_curb_color 4 784 25 DNAStreet::set_curb_color 0 1 325 257
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_curb_color
//       Access: Public
//  Description: sets the color of the sidewalk node
////////////////////////////////////////////////////////////////////
63
inline void DNAStreet::set_curb_color(LVecBase4f const &color);

691 14 get_curb_color 4 784 25 DNAStreet::get_curb_color 0 1 326 256
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_curb_color
//       Access: Public
//  Description: returns the color of the curb node
////////////////////////////////////////////////////////////////////
56
inline LVecBase4f DNAStreet::get_curb_color(void) const;

692 14 get_class_type 4 784 25 DNAStreet::get_class_type 0 1 327 0
50
static TypeHandle DNAStreet::get_class_type(void);

693 10 ~DNAStreet 4 784 21 DNAStreet::~DNAStreet 0 0 0
28
DNAStreet::~DNAStreet(void);

694 7 DNASign 4 785 16 DNASign::DNASign 0 3 328 329 330 439
////////////////////////////////////////////////////////////////////
//     Function: DNASign::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASign::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
105
DNASign::DNASign(basic_string< char > const &initial_name = (""));
DNASign::DNASign(DNASign const &Sign);

695 8 set_code 4 785 17 DNASign::set_code 0 1 331 0
50
void DNASign::set_code(basic_string< char > code);

696 8 get_code 4 785 17 DNASign::get_code 0 1 332 0
51
basic_string< char > DNASign::get_code(void) const;

697 9 set_color 4 785 18 DNASign::set_color 0 1 333 0
49
void DNASign::set_color(LVecBase4f const &color);

698 9 get_color 4 785 18 DNASign::get_color 0 1 334 0
42
LVecBase4f DNASign::get_color(void) const;

699 14 get_class_type 4 785 23 DNASign::get_class_type 0 1 335 0
48
static TypeHandle DNASign::get_class_type(void);

700 8 ~DNASign 4 785 17 DNASign::~DNASign 0 0 0
24
DNASign::~DNASign(void);

701 15 DNASignBaseline 4 786 32 DNASignBaseline::DNASignBaseline 0 3 336 337 338 455
////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
145
DNASignBaseline::DNASignBaseline(basic_string< char > const &initial_name = (""));
DNASignBaseline::DNASignBaseline(DNASignBaseline const &Sign);

702 8 set_code 4 786 25 DNASignBaseline::set_code 0 1 339 0
65
inline void DNASignBaseline::set_code(basic_string< char > code);

703 8 get_code 4 786 25 DNASignBaseline::get_code 0 1 340 0
66
inline basic_string< char > DNASignBaseline::get_code(void) const;

704 9 set_color 4 786 26 DNASignBaseline::set_color 0 1 341 0
64
inline void DNASignBaseline::set_color(LVecBase4f const &color);

705 9 get_color 4 786 26 DNASignBaseline::get_color 0 1 342 0
57
inline LVecBase4f DNASignBaseline::get_color(void) const;

706 8 set_font 4 786 25 DNASignBaseline::set_font 0 1 343 0
54
inline void DNASignBaseline::set_font(TextFont *font);

707 8 get_font 4 786 25 DNASignBaseline::get_font 0 1 344 0
55
inline TextFont *DNASignBaseline::get_font(void) const;

708 10 set_indent 4 786 27 DNASignBaseline::set_indent 0 1 345 0
54
inline void DNASignBaseline::set_indent(float indent);

709 10 get_indent 4 786 27 DNASignBaseline::get_indent 0 1 346 0
53
inline float DNASignBaseline::get_indent(void) const;

710 8 set_kern 4 786 25 DNASignBaseline::set_kern 0 1 347 0
50
inline void DNASignBaseline::set_kern(float kern);

711 8 get_kern 4 786 25 DNASignBaseline::get_kern 0 1 348 0
51
inline float DNASignBaseline::get_kern(void) const;

712 16 get_current_kern 4 786 33 DNASignBaseline::get_current_kern 0 1 349 0
53
inline float DNASignBaseline::get_current_kern(void);

713 10 set_wiggle 4 786 27 DNASignBaseline::set_wiggle 0 1 350 0
54
inline void DNASignBaseline::set_wiggle(float wiggle);

714 10 get_wiggle 4 786 27 DNASignBaseline::get_wiggle 0 1 351 0
53
inline float DNASignBaseline::get_wiggle(void) const;

715 18 get_current_wiggle 4 786 35 DNASignBaseline::get_current_wiggle 0 1 352 0
55
inline float DNASignBaseline::get_current_wiggle(void);

716 11 set_stumble 4 786 28 DNASignBaseline::set_stumble 0 1 353 0
56
inline void DNASignBaseline::set_stumble(float stumble);

717 11 get_stumble 4 786 28 DNASignBaseline::get_stumble 0 1 354 0
54
inline float DNASignBaseline::get_stumble(void) const;

718 19 get_current_stumble 4 786 36 DNASignBaseline::get_current_stumble 0 1 355 0
56
inline float DNASignBaseline::get_current_stumble(void);

719 9 set_stomp 4 786 26 DNASignBaseline::set_stomp 0 1 356 0
52
inline void DNASignBaseline::set_stomp(float stomp);

720 9 get_stomp 4 786 26 DNASignBaseline::get_stomp 0 1 357 0
52
inline float DNASignBaseline::get_stomp(void) const;

721 17 get_current_stomp 4 786 34 DNASignBaseline::get_current_stomp 0 1 358 0
54
inline float DNASignBaseline::get_current_stomp(void);

722 9 set_width 4 786 26 DNASignBaseline::set_width 0 1 359 0
52
inline void DNASignBaseline::set_width(float width);

723 9 get_width 4 786 26 DNASignBaseline::get_width 0 1 360 0
52
inline float DNASignBaseline::get_width(void) const;

724 10 set_height 4 786 27 DNASignBaseline::set_height 0 1 361 0
54
inline void DNASignBaseline::set_height(float height);

725 10 get_height 4 786 27 DNASignBaseline::get_height 0 1 362 0
53
inline float DNASignBaseline::get_height(void) const;

726 9 set_flags 4 786 26 DNASignBaseline::set_flags 0 1 363 0
67
inline void DNASignBaseline::set_flags(basic_string< char > flags);

727 9 get_flags 4 786 26 DNASignBaseline::get_flags 0 1 364 0
67
inline basic_string< char > DNASignBaseline::get_flags(void) const;

728 19 isFirstLetterOfWord 4 786 36 DNASignBaseline::isFirstLetterOfWord 0 1 365 232
////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::isFirstLetterOfWord
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
71
bool DNASignBaseline::isFirstLetterOfWord(basic_string< char > letter);

729 13 reset_counter 4 786 30 DNASignBaseline::reset_counter 0 1 366 0
42
void DNASignBaseline::reset_counter(void);

730 11 inc_counter 4 786 28 DNASignBaseline::inc_counter 0 1 367 0
40
void DNASignBaseline::inc_counter(void);

731 27 baseline_next_pos_hpr_scale 4 786 44 DNASignBaseline::baseline_next_pos_hpr_scale 0 1 368 235
////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::baseline_pos_hpr_scale
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
131
virtual void DNASignBaseline::baseline_next_pos_hpr_scale(LVector3f &pos, LVector3f &hpr, LVector3f &scale, LVector3f const &size);

732 14 get_class_type 4 786 31 DNASignBaseline::get_class_type 0 1 369 0
56
static TypeHandle DNASignBaseline::get_class_type(void);

733 16 ~DNASignBaseline 4 786 33 DNASignBaseline::~DNASignBaseline 0 0 0
40
DNASignBaseline::~DNASignBaseline(void);

734 14 DNASignGraphic 4 787 30 DNASignGraphic::DNASignGraphic 0 3 370 371 372 453
////////////////////////////////////////////////////////////////////
//     Function: DNASignGraphic::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASignGraphic::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
143
DNASignGraphic::DNASignGraphic(basic_string< char > const &initial_name = (""));
DNASignGraphic::DNASignGraphic(DNASignGraphic const &graphic);

735 8 set_code 4 787 24 DNASignGraphic::set_code 0 1 373 0
57
void DNASignGraphic::set_code(basic_string< char > code);

736 8 get_code 4 787 24 DNASignGraphic::get_code 0 1 374 0
58
basic_string< char > DNASignGraphic::get_code(void) const;

737 9 set_color 4 787 25 DNASignGraphic::set_color 0 1 375 0
56
void DNASignGraphic::set_color(LVecBase4f const &color);

738 9 get_color 4 787 25 DNASignGraphic::get_color 0 1 376 0
49
LVecBase4f DNASignGraphic::get_color(void) const;

739 9 set_width 4 787 25 DNASignGraphic::set_width 0 1 377 0
44
void DNASignGraphic::set_width(float width);

740 9 get_width 4 787 25 DNASignGraphic::get_width 0 1 378 0
44
float DNASignGraphic::get_width(void) const;

741 10 set_height 4 787 26 DNASignGraphic::set_height 0 1 379 0
46
void DNASignGraphic::set_height(float height);

742 10 get_height 4 787 26 DNASignGraphic::get_height 0 1 380 0
45
float DNASignGraphic::get_height(void) const;

743 14 get_class_type 4 787 30 DNASignGraphic::get_class_type 0 1 381 0
55
static TypeHandle DNASignGraphic::get_class_type(void);

744 15 ~DNASignGraphic 4 787 31 DNASignGraphic::~DNASignGraphic 0 0 0
38
DNASignGraphic::~DNASignGraphic(void);

745 11 DNASignText 4 788 24 DNASignText::DNASignText 0 3 382 383 384 447
////////////////////////////////////////////////////////////////////
//     Function: DNASignText::Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: DNASignText::Copy Constructor
//       Access: Public
//  Description:
////////////////////////////////////////////////////////////////////
129
DNASignText::DNASignText(basic_string< char > const &initial_name = (""));
DNASignText::DNASignText(DNASignText const &signText);

746 8 set_code 4 788 21 DNASignText::set_code 0 1 385 0
61
inline void DNASignText::set_code(basic_string< char > code);

747 8 get_code 4 788 21 DNASignText::get_code 0 1 386 0
62
inline basic_string< char > DNASignText::get_code(void) const;

748 9 set_color 4 788 22 DNASignText::set_color 0 1 387 0
60
inline void DNASignText::set_color(LVecBase4f const &color);

749 9 get_color 4 788 22 DNASignText::get_color 0 1 388 0
53
inline LVecBase4f DNASignText::get_color(void) const;

750 11 set_letters 4 788 24 DNASignText::set_letters 0 1 389 0
67
inline void DNASignText::set_letters(basic_string< char > letters);

751 11 get_letters 4 788 24 DNASignText::get_letters 0 1 390 0
65
inline basic_string< char > DNASignText::get_letters(void) const;

752 14 get_class_type 4 788 27 DNASignText::get_class_type 0 1 391 0
52
static TypeHandle DNASignText::get_class_type(void);

753 12 ~DNASignText 4 788 25 DNASignText::~DNASignText 0 0 0
32
DNASignText::~DNASignText(void);

754 13 load_DNA_file 1 0 13 load_DNA_file 0 3 393 394 395 1080
////////////////////////////////////////////////////////////////////
//     Function: load_dna_file
//  Description: A convenience function; the primary interface to this
//               package.  Loads up the indicated dna file, and
//               returns the root of a scene graph.  Returns NULL if
//               the file cannot be read for some reason.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: load_dna_file
//  Description: A convenience function.  Loads up the indicated dna
//               file, and returns the root of a scene graph.  Returns
//               NULL if the file cannot be read for some reason.
//
//               Unlike load_egg_file(), this function *does* search
//               for the file along the model_path (as well as the
//               dna_path) if it is not already fully qualified.
//               Begin the filename with ./ to prevent this behavior.
////////////////////////////////////////////////////////////////////
153
PointerTo< PandaNode > load_DNA_file(DNAStorage *dna_store, basic_string< char > const &filename, CoordinateSystem cs = (CS_default), int editing = (0));

755 16 load_DNA_file_AI 1 0 16 load_DNA_file_AI 0 2 396 397 810
////////////////////////////////////////////////////////////////////
//     Function: load_dna_file_ai
//  Description: Loads up the indicated dna file but does not create
//               any geometry from it. It simply creates the dna
//               structures that can then be accessed via the dnaStorage
//               Returns the DNAData object on success, or NULL if the
//               file cannot be read for some reason.
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
//     Function: load_dna_file_AI
//  Description: Loads up the indicated dna file but does not create
//               geometry.  Returns the DNAData loaded, or NULL.
////////////////////////////////////////////////////////////////////
135
PointerTo< DNAData > load_DNA_file_AI(DNAStorage *dna_store, basic_string< char > const &filename, CoordinateSystem cs = (CS_default));

397
1 14 Dtool_yMIfQTN4 7 9 791 415 14 Dtool_yMIfQTN4 221 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::CopyConstructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 5 group 1 789  
2 14 Dtool_yMIfISCp 7 9 791 415 14 Dtool_yMIfISCp 217 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
3 14 Dtool_yMIfvZ75 7 9 791 415 14 Dtool_yMIfvZ75 217 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
4 14 Dtool_yMIfyAUW 7 10 793 0 14 Dtool_yMIfyAUW 214 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::traverse
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 4 4 this 3 791  6 parent 1 793  5 store 1 794  7 editing 1 795  
5 14 Dtool_yMIfeeXS 7 10 793 0 14 Dtool_yMIfeeXS 214 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::traverse
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 4 this 3 791  6 parent 1 793  5 store 1 794  
6 14 Dtool_yMIfsXhv 7 11 793 0 14 Dtool_yMIfsXhv 272 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::top_level_traverse
//       Access: Public
//  Description: The top level traverse does some special things
//////////////////////////////////////////////////////////////////// 4 4 this 3 791  6 parent 1 793  5 store 1 794  7 editing 1 795  
7 14 Dtool_yMIfVnuf 7 11 793 0 14 Dtool_yMIfVnuf 272 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::top_level_traverse
//       Access: Public
//  Description: The top level traverse does some special things
//////////////////////////////////////////////////////////////////// 3 4 this 3 791  6 parent 1 793  5 store 1 794  
8 14 Dtool_yMIfflZo 4 12 796 0 14 Dtool_yMIfflZo 248 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::add
//       Access: Public
//  Description: add a DNAGroup to this vector of nodes
//////////////////////////////////////////////////////////////////// 2 4 this 3 791  5 group 1 791  
9 14 Dtool_yMIfuG_w 4 13 796 0 14 Dtool_yMIfuG_w 446 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::remove
//       Access: Public
//  Description: Remove a group from this vector. Note, this is
//               not really meant for heavy use, since we are using
//               an STL vector which erases in linear time.
//               Should be ok, since removal will be rare.
//////////////////////////////////////////////////////////////////// 2 4 this 3 791  5 group 1 791  
10 14 Dtool_yMIf538n 7 14 791 415 14 Dtool_yMIf538n 373 // Filename: dnaGroup.I
// Created by:  shochet (24May00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::at
//       Access: Public
//  Description: Return the nth group in the vector
//////////////////////////////////////////////////////////////////// 2 4 this 3 791  5 index 1 797  
11 14 Dtool_yMIfnRHn 7 15 791 415 14 Dtool_yMIfnRHn 238 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::current
//       Access: Public
//  Description: return the current group
//////////////////////////////////////////////////////////////////// 1 4 this 3 791  
12 14 Dtool_yMIfaTa8 6 16 795 0 14 Dtool_yMIfaTa8 259 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::get_num_children
//       Access: Public
//  Description: how many groups do we have under us?
//////////////////////////////////////////////////////////////////// 1 4 this 3 791  
13 14 Dtool_yMIfpj1A 7 17 791 415 14 Dtool_yMIfpj1A 240 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::get_parent
//       Access: Public
//  Description: Return the parent group
//////////////////////////////////////////////////////////////////// 1 4 this 3 789  
14 14 Dtool_yMIfzQ3X 4 18 796 0 14 Dtool_yMIfzQ3X 255 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::write
//       Access: Public
//  Description: Writes the group and all children to output
//////////////////////////////////////////////////////////////////// 4 4 this 3 789  3 out 1 798  5 store 1 794  12 indent_level 1 795  
15 14 Dtool_yMIfkM94 4 18 796 0 14 Dtool_yMIfkM94 255 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::write
//       Access: Public
//  Description: Writes the group and all children to output
//////////////////////////////////////////////////////////////////// 3 4 this 3 789  3 out 1 798  5 store 1 794  
16 14 Dtool_yMIf5DWD 4 19 796 0 14 Dtool_yMIf5DWD 266 ////////////////////////////////////////////////////////////////////
//     Function: DNAGroup::ls
//       Access: Public
//  Description: Writes the group and all children to cout (for debugging)
//////////////////////////////////////////////////////////////////// 1 4 this 3 789  
17 14 Dtool_yMIffV_Z 7 20 801 0 14 Dtool_yMIffV_Z 0 0 
18 14 Dtool_yMIftUlS 7 4 802 0 14 Dtool_yMIftUlS 0 1 4 this 3 791  
19 14 Dtool_yMIf0wlo 7 5 791 415 14 Dtool_yMIf0wlo 0 1 4 this 3 802  
20 14 Dtool_yMIfAv1q 6 7 803 0 14 Dtool_yMIfAv1q 0 1 4 this 3 791  
21 14 Dtool_yMIfJJp5 7 8 791 415 14 Dtool_yMIfJJp5 0 1 4 this 3 803  
22 14 Dtool_yMIfqaal 7 24 806 431 14 Dtool_yMIfqaal 221 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 4 5 index 1 795  4 type 1 760  3 pos 1 804  8 lb_index 1 795  
23 14 Dtool_yMIfaogd 7 24 806 431 14 Dtool_yMIfaogd 221 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 5 index 1 795  4 type 1 760  3 pos 1 804  
24 14 Dtool_yMIf1KrK 4 25 796 0 14 Dtool_yMIf1KrK 0 2 4 this 3 806  5 index 1 795  
25 14 Dtool_yMIfTHKF 6 26 795 0 14 Dtool_yMIfTHKF 0 1 4 this 3 807  
26 14 Dtool_yMIfPzDT 4 27 796 0 14 Dtool_yMIfPzDT 0 2 4 this 3 806  4 type 1 760  
27 14 Dtool_yMIf9WF8 6 28 760 0 14 Dtool_yMIf9WF8 0 1 4 this 3 807  
28 14 Dtool_yMIfwt9s 4 29 796 0 14 Dtool_yMIfwt9s 0 2 4 this 3 806  3 pos 1 804  
29 14 Dtool_yMIfoSRO 7 30 804 0 14 Dtool_yMIfoSRO 0 1 4 this 3 807  
30 14 Dtool_yMIfv3nG 4 31 796 0 14 Dtool_yMIfv3nG 0 2 4 this 3 806  8 graph_id 1 795  
31 14 Dtool_yMIfUczs 6 32 795 0 14 Dtool_yMIfUczs 0 1 4 this 3 807  
32 14 Dtool_yMIfgoF_ 4 33 796 0 14 Dtool_yMIfgoF_ 0 2 4 this 3 806  8 lb_index 1 795  
33 14 Dtool_yMIfTC6v 6 34 795 0 14 Dtool_yMIfTC6v 0 1 4 this 3 807  
34 14 Dtool_yMIf_bKo 6 35 809 0 14 Dtool_yMIf_bKo 541 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::is_terminal
//       Access: Published
//  Description: Returns true if this point is the sort of point you
//               find at the beginning or end of a suit path (like a
//               FRONT_DOOR_POINT or SIDE_DOOR_POINT), or false if it
//               is something you're more likely to find in the middle
//               of a suit path (like a STREET_POINT).
//////////////////////////////////////////////////////////////////// 1 4 this 3 807  
35 14 Dtool_yMIfRrxR 4 36 796 0 14 Dtool_yMIfRrxR 256 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::output
//       Access: Public
//  Description: Output all the properties to the stream
//////////////////////////////////////////////////////////////////// 2 4 this 3 807  3 out 1 798  
36 14 Dtool_yMIfs_3h 4 37 796 0 14 Dtool_yMIfs_3h 256 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::write
//       Access: Public
//  Description: write the suit point back out to the dna
//////////////////////////////////////////////////////////////////// 3 4 this 3 807  3 out 1 798  12 indent_level 1 795  
37 14 Dtool_yMIfnXK6 4 37 796 0 14 Dtool_yMIfnXK6 256 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPoint::write
//       Access: Public
//  Description: write the suit point back out to the dna
//////////////////////////////////////////////////////////////////// 2 4 this 3 807  3 out 1 798  
38 14 Dtool_yMIf88If 7 38 801 0 14 Dtool_yMIf88If 0 0 
39 14 Dtool_yMIfL1XC 7 41 810 441 14 Dtool_yMIfL1XC 220 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 11 start_point 1 806  9 end_point 1 806  7 zone_id 1 792  
40 14 Dtool_yMIfiUCU 6 42 809 0 14 Dtool_yMIfiUCU 0 2 4 this 3 811  5 other 1 811  
41 14 Dtool_yMIfh728 7 43 806 431 14 Dtool_yMIfh728 0 1 4 this 3 811  
42 14 Dtool_yMIf7Cdh 7 44 806 431 14 Dtool_yMIf7Cdh 0 1 4 this 3 811  
43 14 Dtool_yMIfex_N 6 45 792 0 14 Dtool_yMIfex_N 0 1 4 this 3 811  
44 14 Dtool_yMIfwx8C 4 46 796 0 14 Dtool_yMIfwx8C 0 2 4 this 3 810  7 zone_id 1 792  
45 14 Dtool_yMIfsQOc 4 47 796 0 14 Dtool_yMIfsQOc 253 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::output
//       Access: Public
//  Description: Outputs all the properties to ostream
//////////////////////////////////////////////////////////////////// 2 4 this 3 811  3 out 1 798  
46 14 Dtool_yMIfkMts 4 48 796 0 14 Dtool_yMIfkMts 245 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::write
//       Access: Public
//  Description: Writes the edge and properties
//////////////////////////////////////////////////////////////////// 4 4 this 3 811  3 out 1 798  5 store 1 794  12 indent_level 1 795  
47 14 Dtool_yMIfgV5N 4 48 796 0 14 Dtool_yMIfgV5N 245 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitEdge::write
//       Access: Public
//  Description: Writes the edge and properties
//////////////////////////////////////////////////////////////////// 3 4 this 3 811  3 out 1 798  5 store 1 794  
48 14 Dtool_yMIfOVpE 7 49 801 0 14 Dtool_yMIfOVpE 0 0 
49 14 Dtool_yMIfh_xl 7 52 814 452 14 Dtool_yMIfh_xl 222 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 5 width 1 813  6 height 1 813  3 pos 1 804  
50 14 Dtool_yMIf5NZM 4 53 796 0 14 Dtool_yMIf5NZM 115 // Filename: dnaBattleCell.I
// Created by:
//
//////////////////////////////////////////////////////////////////// 3 4 this 3 814  5 width 1 813  6 height 1 813  
51 14 Dtool_yMIfKZCb 6 54 813 0 14 Dtool_yMIfKZCb 220 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::get_width
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 815  
52 14 Dtool_yMIfS5qA 6 55 813 0 14 Dtool_yMIfS5qA 221 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::get_height
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 815  
53 14 Dtool_yMIfYfPn 4 56 796 0 14 Dtool_yMIfYfPn 0 2 4 this 3 814  3 pos 1 804  
54 14 Dtool_yMIftrDR 7 57 804 0 14 Dtool_yMIftrDR 0 1 4 this 3 815  
55 14 Dtool_yMIf_PDC 4 58 796 0 14 Dtool_yMIf_PDC 254 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::output
//       Access: Public
//  Description: Writes the cell properties to output
//////////////////////////////////////////////////////////////////// 2 4 this 3 815  3 out 1 798  
56 14 Dtool_yMIfREkl 7 59 793 0 14 Dtool_yMIfREkl 219 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::traverse
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 4 4 this 3 814  6 parent 1 793  5 store 1 794  7 editing 1 795  
57 14 Dtool_yMIfBJrd 7 59 793 0 14 Dtool_yMIfBJrd 219 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::traverse
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 4 this 3 814  6 parent 1 793  5 store 1 794  
58 14 Dtool_yMIfGXoo 4 60 796 0 14 Dtool_yMIfGXoo 260 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::write
//       Access: Public
//  Description: Writes the group and all children to output
//////////////////////////////////////////////////////////////////// 4 4 this 3 815  3 out 1 798  5 store 1 794  12 indent_level 1 795  
59 14 Dtool_yMIfsN1q 4 60 796 0 14 Dtool_yMIfsN1q 260 ////////////////////////////////////////////////////////////////////
//     Function: DNABattleCell::write
//       Access: Public
//  Description: Writes the group and all children to output
//////////////////////////////////////////////////////////////////// 3 4 this 3 815  3 out 1 798  5 store 1 794  
60 14 Dtool_yMIfSx1s 7 61 801 0 14 Dtool_yMIfSx1s 0 0 
61 14 Dtool_yMIfJYfu 7 64 819 467 14 Dtool_yMIfJYfu 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::CopyConstructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 5 group 1 817  
62 14 Dtool_yMIf2lmR 7 64 819 467 14 Dtool_yMIf2lmR 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
63 14 Dtool_yMIfesJI 7 64 819 467 14 Dtool_yMIfesJI 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
64 14 Dtool_yMIfrAIa 4 65 796 0 14 Dtool_yMIfrAIa 262 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_visible
//       Access: Public
//  Description: Add a vis group name to this group's list
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  14 vis_group_name 1 792  
65 14 Dtool_yMIf5V81 6 66 795 0 14 Dtool_yMIf5V81 270 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_vis_group
//       Access: Public
//  Description: Remove a vis group name to this group's list
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  14 vis_group_name 1 792  
66 14 Dtool_yMIfqnTT 6 67 795 0 14 Dtool_yMIfqnTT 266 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_visibles
//       Access: Public
//  Description: Ask how many visibles this vis group has
//////////////////////////////////////////////////////////////////// 1 4 this 3 817  
67 14 Dtool_yMIfEJX6 6 68 792 0 14 Dtool_yMIfEJX6 267 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_visible_name
//       Access: Public
//  Description: Return the string name of the ith visible
//////////////////////////////////////////////////////////////////// 2 4 this 3 817  1 i 1 797  
68 14 Dtool_yMIf42Hm 4 69 796 0 14 Dtool_yMIf42Hm 327 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_suit_edge
//       Access: Public
//  Description: Adds a suit edge to this vis group
//               This is only stored here so we can write it back out
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  4 edge 1 810  
69 14 Dtool_yMIfsL9U 6 70 795 0 14 Dtool_yMIfsL9U 247 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_suit_edge
//       Access: Public
//  Description: Remove this suit edge
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  4 edge 1 810  
70 14 Dtool_yMIfDKQf 6 71 795 0 14 Dtool_yMIfDKQf 265 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_suit_edges
//       Access: Public
//  Description: Ask how many edges this vis group has
//////////////////////////////////////////////////////////////////// 1 4 this 3 817  
71 14 Dtool_yMIfGgTQ 7 72 810 441 14 Dtool_yMIfGgTQ 256 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_suit_edge
//       Access: Public
//  Description: Return the ith edge in the vector
//////////////////////////////////////////////////////////////////// 2 4 this 3 817  1 i 1 797  
72 14 Dtool_yMIfNPzx 4 73 796 0 14 Dtool_yMIfNPzx 331 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::add_battle_cell
//       Access: Public
//  Description: Adds a battle_cell to this vis group
//               This is only stored here so we can write it back out
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  4 cell 1 814  
73 14 Dtool_yMIfnwfH 6 74 795 0 14 Dtool_yMIfnwfH 251 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::remove_battle_cell
//       Access: Public
//  Description: Remove this battle cell
//////////////////////////////////////////////////////////////////// 2 4 this 3 819  4 cell 1 814  
74 14 Dtool_yMIfDFHg 6 75 795 0 14 Dtool_yMIfDFHg 267 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_num_battle_cells
//       Access: Public
//  Description: Ask how many cells this vis group has
//////////////////////////////////////////////////////////////////// 1 4 this 3 817  
75 14 Dtool_yMIfkfde 7 76 814 452 14 Dtool_yMIfkfde 258 ////////////////////////////////////////////////////////////////////
//     Function: DNAVisGroup::get_battle_cell
//       Access: Public
//  Description: Return the ith cell in the vector
//////////////////////////////////////////////////////////////////// 2 4 this 3 817  1 i 1 797  
76 14 Dtool_yMIfxLTy 7 77 801 0 14 Dtool_yMIfxLTy 0 0 
77 14 Dtool_yMIfvZAe 7 80 820 474 14 Dtool_yMIfvZAe 220 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
78 14 Dtool_yMIf7m9i 7 80 820 474 14 Dtool_yMIf7m9i 225 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 path 1 821  
79 14 Dtool_yMIfdMnK 7 80 820 474 14 Dtool_yMIfdMnK 305 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::Constructor
//       Access: Public
//  Description: Accepts an integer which indicates the expected
//               length of the path.
//////////////////////////////////////////////////////////////////// 1 14 reserve_length 1 795  
80 14 Dtool_yMIfsfvS 6 81 795 0 14 Dtool_yMIfsfvS 451 // Filename: dnaSuitPath.I
// Created by:  shochet (28Jan01)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::get_num_points
//       Access: Public
//  Description: How many points are along this path, including the
//               starting and ending points
//////////////////////////////////////////////////////////////////// 1 4 this 3 821  
81 14 Dtool_yMIfhz46 4 82 796 0 14 Dtool_yMIfhz46 213 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::copy
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 820  4 path 1 821  
82 14 Dtool_yMIfzh4X 6 83 795 0 14 Dtool_yMIfzh4X 387 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::get_point_index
//       Access: Public
//  Description: Returns the point index at location i. This index
//               can then be looked up in the dna storage to ask
//               properties of the actual point
//////////////////////////////////////////////////////////////////// 2 4 this 3 821  1 i 1 795  
83 14 Dtool_yMIfOK18 4 84 796 0 14 Dtool_yMIfOK18 246 ////////////////////////////////////////////////////////////////////
//     Function: DNASuitPath::output
//       Access: Public
//  Description: Output the path to the ostream
//////////////////////////////////////////////////////////////////// 2 4 this 3 821  3 out 1 798  
84 14 Dtool_yMIfjaRl 7 85 801 0 14 Dtool_yMIfjaRl 0 0 
85 14 Dtool_yMIfJ_mZ 7 88 825 478 14 Dtool_yMIfJ_mZ 0 2 3 pos 1 823  3 hpr 1 823  
86 14 Dtool_yMIfD1B1 7 88 825 478 14 Dtool_yMIfD1B1 0 1 3 pos 1 823  
87 14 Dtool_yMIfz9z8 7 88 825 478 14 Dtool_yMIfz9z8 0 0 
88 14 Dtool_yMIfKdTP 6 89 823 0 14 Dtool_yMIfKdTP 0 1 4 this 3 826  
89 14 Dtool_yMIfEm7x 6 90 823 0 14 Dtool_yMIfEm7x 0 1 4 this 3 826  
90 14 Dtool_yMIf1ZFR 7 93 794 570 14 Dtool_yMIf1ZFR 207 ////////////////////////////////////////////////////////////////////
//     Function: Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
91 14 Dtool_yMIfuzwk 4 94 796 0 14 Dtool_yMIfuzwk 246 ////////////////////////////////////////////////////////////////////
//     Function: print_node_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
92 14 Dtool_yMIfriYa 4 95 796 0 14 Dtool_yMIfriYa 249 ////////////////////////////////////////////////////////////////////
//     Function: print_texture_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
93 14 Dtool_yMIfczQC 4 96 796 0 14 Dtool_yMIfczQC 246 ////////////////////////////////////////////////////////////////////
//     Function: print_font_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
94 14 Dtool_yMIfGsM_ 4 97 796 0 14 Dtool_yMIfGsM_ 252 ////////////////////////////////////////////////////////////////////
//     Function: print_suit_point_storage
//       Access: Public
//  Description: Print out the key/pointer pairs
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
95 14 Dtool_yMIfZH2Z 4 98 796 0 14 Dtool_yMIfZH2Z 248 ////////////////////////////////////////////////////////////////////
//     Function: print_battle_cell_storage
//       Access: Public
//  Description: Print out the battle cells
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
96 14 Dtool_yMIf_9Ok 4 99 796 0 14 Dtool_yMIf_9Ok 252 ////////////////////////////////////////////////////////////////////
//     Function: store_texture
//       Access: Public
//  Description: Store a texture pointer in the texture map
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  11 code_string 1 792  7 texture 1 830  
97 14 Dtool_yMIfPpZl 4 100 796 0 14 Dtool_yMIfPpZl 243 ////////////////////////////////////////////////////////////////////
//     Function: store_font
//       Access: Public
//  Description: Store a font pointer in the font map
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  11 code_string 1 792  4 font 1 832  
98 14 Dtool_yMIfkLDF 4 101 796 0 14 Dtool_yMIfkLDF 243 ////////////////////////////////////////////////////////////////////
//     Function: store_node
//       Access: Public
//  Description: Store a node pointer in the node map
//////////////////////////////////////////////////////////////////// 4 4 this 3 794  11 code_string 1 792  4 node 1 793  13 code_category 1 792  
99 14 Dtool_yMIfBtk7 4 101 796 0 14 Dtool_yMIfBtk7 243 ////////////////////////////////////////////////////////////////////
//     Function: store_node
//       Access: Public
//  Description: Store a node pointer in the node map
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  11 code_string 1 792  4 node 1 793  
100 14 Dtool_yMIfKFup 4 102 796 0 14 Dtool_yMIfKFup 292 ////////////////////////////////////////////////////////////////////
//     Function: store_hood_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               hood node map
//////////////////////////////////////////////////////////////////// 4 4 this 3 794  11 code_string 1 792  4 node 1 793  13 code_category 1 792  
101 14 Dtool_yMIfP0tW 4 102 796 0 14 Dtool_yMIfP0tW 292 ////////////////////////////////////////////////////////////////////
//     Function: store_hood_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               hood node map
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  11 code_string 1 792  4 node 1 793  
102 14 Dtool_yMIfNIgc 4 103 796 0 14 Dtool_yMIfNIgc 294 ////////////////////////////////////////////////////////////////////
//     Function: store_place_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               place node map
//////////////////////////////////////////////////////////////////// 4 4 this 3 794  11 code_string 1 792  4 node 1 793  13 code_category 1 792  
103 14 Dtool_yMIf_Bg6 4 103 796 0 14 Dtool_yMIf_Bg6 294 ////////////////////////////////////////////////////////////////////
//     Function: store_place_node
//       Access: Public
//  Description: Store a neighborhood specific node pointer in the
//               place node map
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  11 code_string 1 792  4 node 1 793  
104 14 Dtool_yMIfo1kA 7 104 806 431 14 Dtool_yMIfo1kA 383 ////////////////////////////////////////////////////////////////////
//     Function: store_suit_point
//       Access: Public
//  Description: Store a point in the suit point map. If that pos
//               already exists, return the existing point, otherwise
//               create a new point and store that.
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  4 type 1 760  3 pos 1 804  
105 14 Dtool_yMIfEhAr 6 104 795 0 14 Dtool_yMIfEhAr 253 ////////////////////////////////////////////////////////////////////
//     Function: store_suit_point
//       Access: Public
//  Description: Store a suit point in the suit point map
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 806  
106 14 Dtool_yMIfuwaV 6 105 795 0 14 Dtool_yMIfuwaV 0 1 4 this 3 794  
107 14 Dtool_yMIf1UVm 6 106 795 0 14 Dtool_yMIf1UVm 320 ////////////////////////////////////////////////////////////////////
//     Function: remove_suit_point
//       Access: Public
//  Description: Remove a suit point from the suit point map
//               Returns the number of points removed (0 or 1)
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 806  
108 14 Dtool_yMIffH3h 4 107 796 0 14 Dtool_yMIffH3h 237 ////////////////////////////////////////////////////////////////////
//     Function: store_block_number
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  5 block 1 792  7 zone_id 1 792  
109 14 Dtool_yMIfjxgm 4 108 796 0 14 Dtool_yMIfjxgm 243 ////////////////////////////////////////////////////////////////////
//     Function: store_block_door_pos_hpr
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 4 4 this 3 794  5 block 1 792  3 pos 1 823  3 hpr 1 823  
110 14 Dtool_yMIf8j4y 4 109 796 0 14 Dtool_yMIf8j4y 245 ////////////////////////////////////////////////////////////////////
//     Function: store_block_sign_transform
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  5 block 1 792  3 mat 1 834  
111 14 Dtool_yMIfK106 4 110 796 0 14 Dtool_yMIfK106 236 ////////////////////////////////////////////////////////////////////
//     Function: store_block_title
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  5 block 1 792  5 title 1 792  
112 14 Dtool_yMIfcNsd 4 111 796 0 14 Dtool_yMIfcNsd 238 ////////////////////////////////////////////////////////////////////
//     Function: store_block_article
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  5 block 1 792  7 article 1 792  
113 14 Dtool_yMIfNkDh 4 112 796 0 14 Dtool_yMIfNkDh 259 ////////////////////////////////////////////////////////////////////
//     Function: store_battle_cell
//       Access: Public
//  Description: Store a battle cell in the battle cell vector
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 814  
114 14 Dtool_yMIfKnto 6 113 795 0 14 Dtool_yMIfKnto 263 ////////////////////////////////////////////////////////////////////
//     Function: remove_battle_cell
//       Access: Public
//  Description: Remove a battle cell from the battle cell vector
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 814  
115 14 Dtool_yMIfVErq 7 114 810 441 14 Dtool_yMIfVErq 317 ////////////////////////////////////////////////////////////////////
//     Function: store_suit_edge
//       Access: Public
//  Description: Store a suit edge in the suit start point map,
//               listed under the index of the start point
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 810  
116 14 Dtool_yMIfUQZ8 7 114 810 441 14 Dtool_yMIfUQZ8 397 ////////////////////////////////////////////////////////////////////
//     Function: store_suit_edge
//       Access: Public
//  Description: Store a suit edge represented by the start and end
//               indexes in the suit start point map. These indexes
//               better be stored in the suit_point_vector already
//////////////////////////////////////////////////////////////////// 4 4 this 3 794  11 start_index 1 795  9 end_index 1 795  7 zone_id 1 792  
117 14 Dtool_yMIfuWHb 6 115 795 0 14 Dtool_yMIfuWHb 245 ////////////////////////////////////////////////////////////////////
//     Function: remove_suit_edge
//       Access: Public
//  Description: Removes a suit edge from the map
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 810  
118 14 Dtool_yMIfzNi7 6 116 795 0 14 Dtool_yMIfzNi7 463 ////////////////////////////////////////////////////////////////////
//     Function: delete_unused_suit_points
//       Access: Public
//  Description: Runs through the list of suit points deleting
//               any points that are not on any edges.
//               This is computationally expensive, but it is only run
//               when we save the dna in the editor, not at run time.
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
119 14 Dtool_yMIfkZjO 6 117 795 0 14 Dtool_yMIfkZjO 393 ////////////////////////////////////////////////////////////////////
//     Function: fix_coincident_suit_points
//       Access: Public
//  Description: Runs through the list of suit points fixing
//               any points that are coincident by deleting the
//               duplicates and patching up the effected edges
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
120 14 Dtool_yMIfYe4o 4 118 796 0 14 Dtool_yMIfYe4o 294 ////////////////////////////////////////////////////////////////////
//     Function: reset_nodes
//       Access: Public
//  Description: clear out the map of shared nodes
//               so the ref counter will delete them
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
121 14 Dtool_yMIfbEjQ 4 119 796 0 14 Dtool_yMIfbEjQ 300 ////////////////////////////////////////////////////////////////////
//     Function: reset_textures
//       Access: Public
//  Description: clear out the map of shared textures
//               so the ref counter will delete them
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
122 14 Dtool_yMIfgO48 4 120 796 0 14 Dtool_yMIfgO48 502 ////////////////////////////////////////////////////////////////////
//     Function: reset_hood
//       Access: Public
//  Description: clear out everything associated with the current hood
//               this is called in Python whenever we leave a hood. It
//               is easier to add things here than to have to keep
//               updating the showcode.
//               Reseting the hood also resets the place nodes.
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
123 14 Dtool_yMIfWsns 4 121 796 0 14 Dtool_yMIfWsns 314 ////////////////////////////////////////////////////////////////////
//     Function: reset_hood_nodes
//       Access: Public
//  Description: clear out the map of neighborhood specific nodes
//               so the ref counter will delete them
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
124 14 Dtool_yMIfuCLk 4 122 796 0 14 Dtool_yMIfuCLk 314 ////////////////////////////////////////////////////////////////////
//     Function: reset_place_nodes
//       Access: Public
//  Description: clear out the map of town and sz specific nodes
//               so the ref counter will delete them
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
125 14 Dtool_yMIfbk05 4 123 796 0 14 Dtool_yMIfbk05 256 ////////////////////////////////////////////////////////////////////
//     Function: reset_suit_points
//       Access: Public
//  Description: clear out all maps relating to suit points
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
126 14 Dtool_yMIfmT1N 4 124 796 0 14 Dtool_yMIfmT1N 241 ////////////////////////////////////////////////////////////////////
//     Function: reset_battle_cells
//       Access: Public
//  Description: clear out all battle cells
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
127 14 Dtool_yMIf_J6Q 4 125 796 0 14 Dtool_yMIf_J6Q 232 ////////////////////////////////////////////////////////////////////
//     Function: reset_block_number
//       Access: Public
//  Description: clear out the map
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
128 14 Dtool_yMIfV_iW 4 126 796 0 14 Dtool_yMIfV_iW 238 ////////////////////////////////////////////////////////////////////
//     Function: reset_block_door_pos_hpr
//       Access: Public
//  Description: clear out the map
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
129 14 Dtool_yMIfAGek 4 127 796 0 14 Dtool_yMIfAGek 240 ////////////////////////////////////////////////////////////////////
//     Function: reset_block_sign_transform
//       Access: Public
//  Description: clear out the map
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
130 14 Dtool_yMIf1OEc 4 128 796 0 14 Dtool_yMIf1OEc 231 ////////////////////////////////////////////////////////////////////
//     Function: reset_block_title
//       Access: Public
//  Description: clear out the map
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
131 14 Dtool_yMIf6HVk 4 129 796 0 14 Dtool_yMIf6HVk 233 ////////////////////////////////////////////////////////////////////
//     Function: reset_block_article
//       Access: Public
//  Description: clear out the map
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
132 14 Dtool_yMIfsgKy 7 130 830 0 14 Dtool_yMIfsgKy 298 ////////////////////////////////////////////////////////////////////
//     Function: find_texture
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  10 dna_string 1 792  
133 14 Dtool_yMIfw7Kg 7 131 793 0 14 Dtool_yMIfw7Kg 295 ////////////////////////////////////////////////////////////////////
//     Function: find_node
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  10 dna_string 1 792  
134 14 Dtool_yMIfKEGD 7 132 832 0 14 Dtool_yMIfKEGD 295 ////////////////////////////////////////////////////////////////////
//     Function: find_node
//       Access: Public
//  Description: A convenient interface if you only know the codes
//               by name, not by number
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  10 dna_string 1 792  
135 14 Dtool_yMIf0qRV 6 133 795 0 14 Dtool_yMIf0qRV 317 ////////////////////////////////////////////////////////////////////
//     Function: get_num_catalog_codes
//       Access: Public
//  Description: Return the number of entries in this catalog
//               Return -1 if the catalog is not found
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  14 catalog_string 1 792  
136 14 Dtool_yMIfhTPT 6 134 792 0 14 Dtool_yMIfhTPT 322 ////////////////////////////////////////////////////////////////////
//     Function: get_catalog_code
//       Access: Public
//  Description: Return the number of entries in this catalog
//               Return empty string if the catalog is not found
//////////////////////////////////////////////////////////////////// 3 4 this 3 828  14 catalog_string 1 792  1 i 1 795  
137 14 Dtool_yMIf09hu 4 135 796 0 14 Dtool_yMIf09hu 229 ////////////////////////////////////////////////////////////////////
//     Function: store_catalog_string
//       Access: Public
//  Description: Add a string
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  14 catalog_string 1 792  10 dna_string 1 792  
138 14 Dtool_yMIfeZRO 4 136 796 0 14 Dtool_yMIfeZRO 227 ////////////////////////////////////////////////////////////////////
//     Function: print_catalog
//       Access: Public
//  Description: print the catalog
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
139 14 Dtool_yMIf58dz 4 137 796 0 14 Dtool_yMIf58dz 252 ////////////////////////////////////////////////////////////////////
//     Function: store_DNAGroup
//       Access: Public
//  Description: store a DNAGroup at the node path pointer
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  6 param0 0 837  6 param1 0 791  
140 14 Dtool_yMIffgHa 6 138 795 0 14 Dtool_yMIffgHa 371 ////////////////////////////////////////////////////////////////////
//     Function: remove_DNAGroup
//       Access: Public
//  Description: remove the DNAGroup from the map
//               It also removes all children of the dnaGroup.
//               Returns the total number of DNAGroups removed.
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 791  
141 14 Dtool_yMIfPPXi 6 138 795 0 14 Dtool_yMIfPPXi 388 ////////////////////////////////////////////////////////////////////
//     Function: remove_DNAGroup
//       Access: Public
//  Description: remove the DNAGroup pointed to by rr from the map
//               It also removes all children of the dnaGroup.
//               Returns the total number of DNAGroups removed.
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 837  
142 14 Dtool_yMIfrclV 7 139 791 415 14 Dtool_yMIfrclV 250 ////////////////////////////////////////////////////////////////////
//     Function: find_DNAGroup
//       Access: Public
//  Description: find a DNAGroup at the node path pointer
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  6 param0 0 837  
143 14 Dtool_yMIfXv_S 7 140 837 0 14 Dtool_yMIfXv_S 243 ////////////////////////////////////////////////////////////////////
//     Function: find_PandaNode
//       Access: Public
//  Description: find a PandaNode at the DNAGroup
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  6 param0 0 791  
144 14 Dtool_yMIf3eC0 6 141 795 0 14 Dtool_yMIf3eC0 222 ////////////////////////////////////////////////////////////////////
//     Function: get_zone_from_block_number
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
145 14 Dtool_yMIfWn20 6 142 795 0 14 Dtool_yMIfWn20 232 ////////////////////////////////////////////////////////////////////
//     Function: get_block_number_at
//       Access: Public
//  Description: Get key at index
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 797  
146 14 Dtool_yMIf02aC 6 143 795 0 14 Dtool_yMIf02aC 243 ////////////////////////////////////////////////////////////////////
//     Function: get_num_block_number
//       Access: Public
//  Description: Ask how many block numbers
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
147 14 Dtool_yMIfZL72 6 144 826 0 14 Dtool_yMIfZL72 230 ////////////////////////////////////////////////////////////////////
//     Function: get_door_pos_hpr_from_block_number
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
148 14 Dtool_yMIfV0BN 6 145 795 0 14 Dtool_yMIfV0BN 238 ////////////////////////////////////////////////////////////////////
//     Function: get_door_pos_hpr_block_at
//       Access: Public
//  Description: Get key at index
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 797  
149 14 Dtool_yMIfpwq_ 6 146 795 0 14 Dtool_yMIfpwq_ 250 ////////////////////////////////////////////////////////////////////
//     Function: get_num_block_door_pos_hprs
//       Access: Public
//  Description: Ask how many block numbers
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
150 14 Dtool_yMIf0D3d 6 147 834 0 14 Dtool_yMIf0D3d 232 ////////////////////////////////////////////////////////////////////
//     Function: get_sign_transform_from_block_number
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
151 14 Dtool_yMIfs3CU 6 148 795 0 14 Dtool_yMIfs3CU 240 ////////////////////////////////////////////////////////////////////
//     Function: get_sign_transform_block_at
//       Access: Public
//  Description: Get key at index
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 797  
152 14 Dtool_yMIfbqAy 6 149 795 0 14 Dtool_yMIfbqAy 252 ////////////////////////////////////////////////////////////////////
//     Function: get_num_block_sign_transforms
//       Access: Public
//  Description: Ask how many block numbers
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
153 14 Dtool_yMIfZDEH 4 150 796 0 14 Dtool_yMIfZDEH 242 ////////////////////////////////////////////////////////////////////
//     Function: reset_DNAGroups
//       Access: Public
//  Description: clear out the map of DNAGroups
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
154 14 Dtool_yMIf7PHJ 6 151 792 0 14 Dtool_yMIf7PHJ 223 ////////////////////////////////////////////////////////////////////
//     Function: get_title_from_block_number
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
155 14 Dtool_yMIfPXb6 6 152 795 0 14 Dtool_yMIfPXb6 231 ////////////////////////////////////////////////////////////////////
//     Function: get_title_block_at
//       Access: Public
//  Description: Get key at index
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 797  
156 14 Dtool_yMIfKg0v 6 153 795 0 14 Dtool_yMIfKg0v 243 ////////////////////////////////////////////////////////////////////
//     Function: get_num_block_titles
//       Access: Public
//  Description: Ask how many block numbers
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
157 14 Dtool_yMIf2hU1 6 154 792 0 14 Dtool_yMIf2hU1 225 ////////////////////////////////////////////////////////////////////
//     Function: get_article_from_block_number
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
158 14 Dtool_yMIfaOzR 4 155 796 0 14 Dtool_yMIfaOzR 244 ////////////////////////////////////////////////////////////////////
//     Function: store_block_building_type
//       Access: Public
//  Description: Store a block and zone
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  5 block 1 792  4 type 1 792  
159 14 Dtool_yMIf66IJ 6 156 792 0 14 Dtool_yMIf66IJ 219 ////////////////////////////////////////////////////////////////////
//     Function: get_block_building_type
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  12 block_number 1 795  
160 14 Dtool_yMIfEMo_ 4 157 796 0 14 Dtool_yMIfEMo_ 258 ////////////////////////////////////////////////////////////////////
//     Function: store_DNAVisGroup
//       Access: Public
//  Description: store a DNAVisGroup at the node path pointer
//////////////////////////////////////////////////////////////////// 3 4 this 3 794  6 param0 0 837  6 param1 0 819  
161 14 Dtool_yMIfnHea 6 158 795 0 14 Dtool_yMIfnHea 267 ////////////////////////////////////////////////////////////////////
//     Function: remove_DNAVisGroup
//       Access: Public
//  Description: remove the DNAVisGroup pointed to by rr from the map
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 837  
162 14 Dtool_yMIfylbh 7 159 819 467 14 Dtool_yMIfylbh 256 ////////////////////////////////////////////////////////////////////
//     Function: find_DNAVisGroup
//       Access: Public
//  Description: find a DNAVisGroup at the node path pointer
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  6 param0 0 837  
163 14 Dtool_yMIffVv1 4 160 796 0 14 Dtool_yMIffVv1 248 ////////////////////////////////////////////////////////////////////
//     Function: reset_DNAVisGroups
//       Access: Public
//  Description: clear out the map of DNAVisGroups
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
164 14 Dtool_yMIfvTr_ 6 161 795 0 14 Dtool_yMIfvTr_ 267 ////////////////////////////////////////////////////////////////////
//     Function: get_num_DNAVisGroups
//       Access: Public
//  Description: Ask how many vis groups this dna store knows about
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
165 14 Dtool_yMIfENmU 7 162 819 467 14 Dtool_yMIfENmU 251 ////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroup
//       Access: Public
//  Description: Return the ith vis group in our storage
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  1 i 1 797  
166 14 Dtool_yMIfjPwk 6 163 795 0 14 Dtool_yMIfjPwk 276 ////////////////////////////////////////////////////////////////////
//     Function: get_num_visibles_in_DNAVisGroup
//       Access: Public
//  Description: Ask how many visibles there are in this visgroup
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  1 i 1 797  
167 14 Dtool_yMIfECe3 6 164 792 0 14 Dtool_yMIfECe3 267 ////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroup_name
//       Access: Public
//  Description: Ask for the name of the nth DNAVisGroup in the map
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  1 i 1 797  
168 14 Dtool_yMIfLlmc 6 165 792 0 14 Dtool_yMIfLlmc 271 ////////////////////////////////////////////////////////////////////
//     Function: get_visible_name
//       Access: Public
//  Description: Ask for the name of the nth visible in the nth DNAVisGroup
//////////////////////////////////////////////////////////////////// 3 4 this 3 828  14 visgroup_index 1 797  13 visible_index 1 797  
169 14 Dtool_yMIfub1T 4 166 796 0 14 Dtool_yMIfub1T 317 ////////////////////////////////////////////////////////////////////
//     Function: store_DNAVisGroupAI
//       Access: Public
//  Description: store a DNAVisGroup in a vector so the AI can
//               retrieve it without traversing the DNA
//////////////////////////////////////////////////////////////////// 2 4 this 3 794  6 param0 0 819  
170 14 Dtool_yMIfOfP2 6 167 795 0 14 Dtool_yMIfOfP2 269 ////////////////////////////////////////////////////////////////////
//     Function: get_num_DNAVisGroupsAI
//       Access: Public
//  Description: Ask how many vis groups this dna store knows about
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
171 14 Dtool_yMIf6luo 7 168 819 467 14 Dtool_yMIf6luo 253 ////////////////////////////////////////////////////////////////////
//     Function: get_DNAVisGroupAI
//       Access: Public
//  Description: Return the ith vis group in our storage
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  1 i 1 797  
172 14 Dtool_yMIfSaG0 4 169 796 0 14 Dtool_yMIfSaG0 253 ////////////////////////////////////////////////////////////////////
//     Function: reset_DNAVisGroupsAI
//       Access: Public
//  Description: clear out the vector of DNAVisGroups
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
173 14 Dtool_yMIfIV4p 6 170 795 0 14 Dtool_yMIfIV4p 256 ////////////////////////////////////////////////////////////////////
//     Function: get_num_PandaNodes
//       Access: Public
//  Description: how many node paths do we have in our map
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
174 14 Dtool_yMIfl1j8 7 171 837 0 14 Dtool_yMIfl1j8 236 ////////////////////////////////////////////////////////////////////
//     Function: get_PandaNode_at
//       Access: Public
//  Description: return the ith NodePath
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  1 i 1 797  
175 14 Dtool_yMIfQHj_ 4 172 796 0 14 Dtool_yMIfQHj_ 0 1 4 this 3 828  
176 14 Dtool_yMIfTH_i 6 173 792 0 14 Dtool_yMIfTH_i 321 ////////////////////////////////////////////////////////////////////
//     Function: get_suit_edge_zone
//       Access: Public
//  Description: Ask for the zone that this edge is in
//               Returns -1 if there is no edge between these points
//////////////////////////////////////////////////////////////////// 3 4 this 3 828  11 start_index 1 795  9 end_index 1 795  
177 14 Dtool_yMIf_vok 6 174 813 0 14 Dtool_yMIf_vok 449 ////////////////////////////////////////////////////////////////////
//     Function: get_suit_travel_time
//       Access: Public
//  Description: Ask how long in seconds it will take a suit to walk
//               from the start point to the end point if he is
//               walking this constant rate in units/second
//               If there is not connection, return -1.0
//////////////////////////////////////////////////////////////////// 4 4 this 3 828  11 start_index 1 795  9 end_index 1 795  4 rate 1 813  
178 14 Dtool_yMIfK942 6 175 795 0 14 Dtool_yMIfK942 256 ////////////////////////////////////////////////////////////////////
//     Function: get_num_suit_points
//       Access: Public
//  Description: How many suit points are in the map now?
//////////////////////////////////////////////////////////////////// 1 4 this 3 828  
179 14 Dtool_yMIfjv3i 7 176 806 431 14 Dtool_yMIfjv3i 273 ////////////////////////////////////////////////////////////////////
//     Function: get_suit_point_at_index
//       Access: Private
//  Description: Convient way to return the point at index internally
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 795  
180 14 Dtool_yMIfw37H 7 177 806 431 14 Dtool_yMIfw37H 275 ////////////////////////////////////////////////////////////////////
//     Function: get_suit_point_with_index
//       Access: Private
//  Description: Convient way to return the point at index internally
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  5 index 1 795  
181 14 Dtool_yMIfwYaP 7 178 820 474 14 Dtool_yMIfwYaP 708 ////////////////////////////////////////////////////////////////////
//     Function: get_suit_path
//       Access: Public
//  Description: Find a valid path from start to end for a suit to
//               walk on given all the points and edges that are
//               loaded in the current branch
//               To make this easy, the SuitStartPointMap is organized
//               as a map of points to edge lists that that point starts
//               {
//                 start_point1 { edge1 edge2 edge3 }
//                 start_point2 { edge4 edge5 }
//                 start_point3 { edge6 edge7 edge8 }
//               }
//////////////////////////////////////////////////////////////////// 5 4 this 3 828  11 start_point 1 807  9 end_point 1 807  10 min_length 1 795  10 max_length 1 795  
182 14 Dtool_yMIf0G80 7 179 820 474 14 Dtool_yMIf0G80 432 ////////////////////////////////////////////////////////////////////
//     Function: get_adjacent_points
//       Access: Public
//  Description: Returns all of the points adjacent to the indicated
//               point.  The result is returned as a DNASuitPath, even
//               though it's not actually a path; it's just a set of
//               points.
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  11 start_point 1 806  
183 14 Dtool_yMIfsx_x 6 180 795 0 14 Dtool_yMIfsx_x 725 ////////////////////////////////////////////////////////////////////
//     Function: discover_continuity
//       Access: Public
//  Description: This should be called once the DNA file has been read
//               and the set of suit points is complete.  It walks
//               through the points and discovers which points are
//               connected to each other and which are not.  Each
//               group of suit points that can be reached from each
//               other are assigned a unique graph_id number, which
//               has no other meaning.  The return value is the number
//               of disconnected graphs we have.
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
184 14 Dtool_yMIfh1k3 6 181 792 0 14 Dtool_yMIfh1k3 279 ////////////////////////////////////////////////////////////////////
//     Function: get_block
//       Access: Public
//  Description: Get the block number as a string from the building
//               name.
//////////////////////////////////////////////////////////////////// 2 4 this 3 828  4 name 1 792  
185 14 Dtool_yMIflyrU 4 182 796 0 14 Dtool_yMIflyrU 302 ////////////////////////////////////////////////////////////////////
//     Function: fixup
//       Access: Public
//  Description: Do any processing here before we write the file
//               to cleanup or fixup the dna storage
//////////////////////////////////////////////////////////////////// 1 4 this 3 794  
186 14 Dtool_yMIfyhF4 4 183 796 0 14 Dtool_yMIfyhF4 315 ////////////////////////////////////////////////////////////////////
//     Function: write
//       Access: Public
//  Description: Write out to the dna file whatever the storage
//               feels it needs to. For instance, the suit points.
//////////////////////////////////////////////////////////////////// 3 4 this 3 828  3 out 1 798  12 indent_level 1 795  
187 14 Dtool_yMIfmf58 7 186 841 579 14 Dtool_yMIfmf58 220 ////////////////////////////////////////////////////////////////////
//     Function: DNANode::CopyConstructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 node 1 839  
188 14 Dtool_yMIfrVoe 7 186 841 579 14 Dtool_yMIfrVoe 216 ////////////////////////////////////////////////////////////////////
//     Function: DNANode::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
189 14 Dtool_yMIfLriI 4 187 796 0 14 Dtool_yMIfLriI 0 2 4 this 3 841  3 pos 1 842  
190 14 Dtool_yMIfErPN 7 188 845 0 14 Dtool_yMIfErPN 0 1 4 this 3 839  
191 14 Dtool_yMIfTGac 4 189 796 0 14 Dtool_yMIfTGac 0 2 4 this 3 841  3 hpr 1 842  
192 14 Dtool_yMIfqcGh 7 190 845 0 14 Dtool_yMIfqcGh 0 1 4 this 3 839  
193 14 Dtool_yMIfiI61 4 191 796 0 14 Dtool_yMIfiI61 0 2 4 this 3 841  5 scale 1 842  
194 14 Dtool_yMIf_yMF 7 192 845 0 14 Dtool_yMIf_yMF 0 1 4 this 3 839  
195 14 Dtool_yMIf87tV 7 193 801 0 14 Dtool_yMIf87tV 0 0 
196 14 Dtool_yMIf0GQk 7 196 848 588 14 Dtool_yMIf0GQk 221 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 wall 1 846  
197 14 Dtool_yMIfCZcm 7 196 848 588 14 Dtool_yMIfCZcm 216 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
198 14 Dtool_yMIfGhBi 7 196 848 588 14 Dtool_yMIfGhBi 216 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
199 14 Dtool_yMIfAfAr 4 197 796 0 14 Dtool_yMIfAfAr 213 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 848  4 code 1 792  
200 14 Dtool_yMIf9IPi 6 198 792 0 14 Dtool_yMIf9IPi 213 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 846  
201 14 Dtool_yMIfLVdS 4 199 796 0 14 Dtool_yMIfLVdS 349 // Filename: dnaBuildings.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_height
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 848  6 height 1 813  
202 14 Dtool_yMIfuHve 6 200 813 0 14 Dtool_yMIfuHve 215 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_height
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 846  
203 14 Dtool_yMIfzRvm 4 201 796 0 14 Dtool_yMIfzRvm 214 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::set_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 848  5 color 1 849  
204 14 Dtool_yMIfC2JF 7 202 852 0 14 Dtool_yMIfC2JF 214 ////////////////////////////////////////////////////////////////////
//     Function: DNAWall::get_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 846  
205 14 Dtool_yMIfKSbO 7 203 801 0 14 Dtool_yMIfKSbO 0 0 
206 14 Dtool_yMIf2FIO 7 206 855 594 14 Dtool_yMIf2FIO 229 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 8 building 1 853  
207 14 Dtool_yMIfcl4a 7 206 855 594 14 Dtool_yMIfcl4a 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
208 14 Dtool_yMIfdUKf 7 206 855 594 14 Dtool_yMIfdUKf 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
209 14 Dtool_yMIfu2r5 4 207 796 0 14 Dtool_yMIfu2r5 222 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::set_width
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 855  5 width 1 813  
210 14 Dtool_yMIfTbr5 6 208 813 0 14 Dtool_yMIfTbr5 222 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::get_width
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 853  
211 14 Dtool_yMIfTVhS 6 209 813 0 14 Dtool_yMIfTVhS 236 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatBuilding::get_current_wall_height
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 855  
212 14 Dtool_yMIf_O0g 7 210 801 0 14 Dtool_yMIf_O0g 0 0 
213 14 Dtool_yMIfTFuh 7 213 858 607 14 Dtool_yMIfTFuh 233 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 8 building 1 856  
214 14 Dtool_yMIfEgBm 7 213 858 607 14 Dtool_yMIfEgBm 228 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
215 14 Dtool_yMIfcemh 7 213 858 607 14 Dtool_yMIfcemh 228 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
216 14 Dtool_yMIf5j5T 4 214 796 0 14 Dtool_yMIf5j5T 226 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_title
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 858  5 title 1 792  
217 14 Dtool_yMIf3Ybf 6 215 792 0 14 Dtool_yMIf3Ybf 226 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_title
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 856  
218 14 Dtool_yMIfi8_2 4 216 796 0 14 Dtool_yMIfi8_2 228 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_article
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 858  7 article 1 792  
219 14 Dtool_yMIf5Kl7 6 217 792 0 14 Dtool_yMIf5Kl7 228 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_article
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 856  
220 14 Dtool_yMIfo6Oc 4 218 796 0 14 Dtool_yMIfo6Oc 225 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 858  4 code 1 792  
221 14 Dtool_yMIfHbJR 6 219 792 0 14 Dtool_yMIfHbJR 225 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 856  
222 14 Dtool_yMIficmK 4 220 796 0 14 Dtool_yMIficmK 231 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_wall_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 858  5 color 1 849  
223 14 Dtool_yMIfl_gH 7 221 852 0 14 Dtool_yMIfl_gH 231 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_wall_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 856  
224 14 Dtool_yMIf5Fyh 4 222 796 0 14 Dtool_yMIf5Fyh 269 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::set_building_type
//       Access: Public
//  Description: Set the flag for Toon Headquarters
//////////////////////////////////////////////////////////////////// 2 4 this 3 858  4 type 1 792  
225 14 Dtool_yMIf_o7Z 6 223 792 0 14 Dtool_yMIf_o7Z 267 ////////////////////////////////////////////////////////////////////
//     Function: DNALandmarkBuilding::get_building_type
//       Access: Public
//  Description: Is this a Headquarters building?
//////////////////////////////////////////////////////////////////// 1 4 this 3 856  
226 14 Dtool_yMIfEe2l 7 224 801 0 14 Dtool_yMIfEe2l 0 0 
227 14 Dtool_yMIf35d8 7 227 861 612 14 Dtool_yMIf35d8 229 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 13 anim_building 1 859  
228 14 Dtool_yMIf_lxJ 7 227 861 612 14 Dtool_yMIf_lxJ 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
229 14 Dtool_yMIfjTDO 7 227 861 612 14 Dtool_yMIfjTDO 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
230 14 Dtool_yMIf3xO9 4 228 796 0 14 Dtool_yMIf3xO9 356 // Filename: dnaAnimBuilding.I
// Created by:  gjeon (12Nov09)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::set_anim
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 861  4 anim 1 792  
231 14 Dtool_yMIfEL_K 6 229 792 0 14 Dtool_yMIfEL_K 221 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimBuilding::get_anim
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 859  
232 14 Dtool_yMIfv2Mc 7 230 801 0 14 Dtool_yMIfv2Mc 0 0 
233 14 Dtool_yMIfoaqd 7 233 864 619 14 Dtool_yMIfoaqd 221 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 prop 1 862  
234 14 Dtool_yMIfaXqa 7 233 864 619 14 Dtool_yMIfaXqa 216 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
235 14 Dtool_yMIfzpQW 7 233 864 619 14 Dtool_yMIfzpQW 216 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
236 14 Dtool_yMIfdY51 4 234 796 0 14 Dtool_yMIfdY51 213 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::set_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 864  4 code 1 792  
237 14 Dtool_yMIfYDIt 6 235 792 0 14 Dtool_yMIfYDIt 213 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::get_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 862  
238 14 Dtool_yMIfWUox 4 236 796 0 14 Dtool_yMIfWUox 343 // Filename: dnaProp.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAProp::set_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 864  5 color 1 849  
239 14 Dtool_yMIfFxCQ 7 237 852 0 14 Dtool_yMIfFxCQ 214 ////////////////////////////////////////////////////////////////////
//     Function: DNAProp::get_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 862  
240 14 Dtool_yMIfXJUZ 7 238 801 0 14 Dtool_yMIfXJUZ 0 0 
241 14 Dtool_yMIfHl1M 7 241 867 624 14 Dtool_yMIfHl1M 225 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 9 anim_prop 1 865  
242 14 Dtool_yMIf1m0P 7 241 867 624 14 Dtool_yMIf1m0P 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
243 14 Dtool_yMIff0WG 7 241 867 624 14 Dtool_yMIff0WG 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
244 14 Dtool_yMIfrLGg 4 242 796 0 14 Dtool_yMIfrLGg 348 // Filename: dnaAnimProp.I
// Created by:  gjeon (18Sep09)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::set_anim
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 867  4 anim 1 792  
245 14 Dtool_yMIfL5m7 6 243 792 0 14 Dtool_yMIfL5m7 217 ////////////////////////////////////////////////////////////////////
//     Function: DNAAnimProp::get_anim
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 865  
246 14 Dtool_yMIf9QTP 7 244 801 0 14 Dtool_yMIf9QTP 0 0 
247 14 Dtool_yMIf17vQ 7 247 870 631 14 Dtool_yMIf17vQ 224 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 7 cornice 1 868  
248 14 Dtool_yMIfruOf 7 247 870 631 14 Dtool_yMIfruOf 219 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
249 14 Dtool_yMIfj6YA 7 247 870 631 14 Dtool_yMIfj6YA 219 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
250 14 Dtool_yMIfIWIU 4 248 796 0 14 Dtool_yMIfIWIU 216 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::set_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 870  4 code 1 792  
251 14 Dtool_yMIfbAD7 6 249 792 0 14 Dtool_yMIfbAD7 216 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::get_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 868  
252 14 Dtool_yMIfZI6Q 4 250 796 0 14 Dtool_yMIfZI6Q 217 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::set_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 870  5 color 1 849  
253 14 Dtool_yMIfIq3v 7 251 852 0 14 Dtool_yMIfIq3v 217 ////////////////////////////////////////////////////////////////////
//     Function: DNACornice::get_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 868  
254 14 Dtool_yMIfmZxg 7 252 801 0 14 Dtool_yMIfmZxg 0 0 
255 14 Dtool_yMIfeOgM 7 255 873 645 14 Dtool_yMIfeOgM 221 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::Copy constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 copy 1 871  
256 14 Dtool_yMIfnx_q 7 255 873 645 14 Dtool_yMIfnx_q 345 // Filename: dnaData.I
// Created by:  shochet (24May00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAData::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
257 14 Dtool_yMIfdMjm 7 255 873 645 14 Dtool_yMIfdMjm 345 // Filename: dnaData.I
// Created by:  shochet (24May00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAData::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
258 14 Dtool_yMIf9Iao 7 256 873 645 14 Dtool_yMIf9Iao 229 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::Copy assignment operator
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  4 copy 1 871  
259 14 Dtool_yMIfYqn0 6 257 809 0 14 Dtool_yMIfYqn0 584 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Opens the indicated filename and reads the DNA data
//               contents from it.  Returns true if the file was
//               successfully opened and read, false if there were
//               some errors, in which case the data may be partially
//               read.
//
//               error is the output stream to which to write error
//               messages.
//////////////////////////////////////////////////////////////////// 3 4 this 3 873  8 filename 1 874  5 error 1 798  
260 14 Dtool_yMIfLS50 6 257 809 0 14 Dtool_yMIfLS50 584 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Opens the indicated filename and reads the DNA data
//               contents from it.  Returns true if the file was
//               successfully opened and read, false if there were
//               some errors, in which case the data may be partially
//               read.
//
//               error is the output stream to which to write error
//               messages.
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  8 filename 1 874  
261 14 Dtool_yMIfWygI 6 257 809 0 14 Dtool_yMIfWygI 463 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Parses the DNA syntax contained in the indicated
//               input stream.  Returns true if the stream was a
//               completely valid DNA file, false if there were some
//               errors, in which case the data may be partially read.
//////////////////////////////////////////////////////////////////// 3 4 this 3 873  2 in 1 876  5 error 1 798  
262 14 Dtool_yMIfWofQ 6 257 809 0 14 Dtool_yMIfWofQ 463 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::read
//       Access: Public
//  Description: Parses the DNA syntax contained in the indicated
//               input stream.  Returns true if the stream was a
//               completely valid DNA file, false if there were some
//               errors, in which case the data may be partially read.
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  2 in 1 876  
263 14 Dtool_yMIfZPNG 6 258 809 0 14 Dtool_yMIfZPNG 528 ////////////////////////////////////////////////////////////////////
//     Function: DnaData::resolve_dna_filename
//       Access: Public, Static
//  Description: Looks for the indicated filename, first along the
//               indicated searchpath, and then along the dna_path and
//               finally along the model_path.  If found, updates the
//               filename to the full path and returns true;
//               otherwise, returns false.
//////////////////////////////////////////////////////////////////// 2 12 dna_filename 1 874  10 searchpath 1 878  
264 14 Dtool_yMIfHR01 6 258 809 0 14 Dtool_yMIfHR01 528 ////////////////////////////////////////////////////////////////////
//     Function: DnaData::resolve_dna_filename
//       Access: Public, Static
//  Description: Looks for the indicated filename, first along the
//               indicated searchpath, and then along the dna_path and
//               finally along the model_path.  If found, updates the
//               filename to the full path and returns true;
//               otherwise, returns false.
//////////////////////////////////////////////////////////////////// 1 12 dna_filename 1 874  
265 14 Dtool_yMIfebLE 6 259 809 0 14 Dtool_yMIfebLE 659 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::resolve_externals
//       Access: Public
//  Description: Loads up all the dna files referenced by <File>
//               entries within the dna structure, and inserts their
//               contents in place of the <File> entries.  Searches
//               for files in the searchpath, if not found directly,
//               and writes error messages to the indicated output
//               stream.  Returns true if all externals were loaded
//               successfully, false otherwise.
//////////////////////////////////////////////////////////////////// 3 4 this 3 873  10 searchpath 1 792  5 error 1 798  
266 14 Dtool_yMIfXVKM 6 259 809 0 14 Dtool_yMIfXVKM 659 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::resolve_externals
//       Access: Public
//  Description: Loads up all the dna files referenced by <File>
//               entries within the dna structure, and inserts their
//               contents in place of the <File> entries.  Searches
//               for files in the searchpath, if not found directly,
//               and writes error messages to the indicated output
//               stream.  Returns true if all externals were loaded
//               successfully, false otherwise.
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  10 searchpath 1 792  
267 14 Dtool_yMIfrDGG 6 260 809 0 14 Dtool_yMIfrDGG 265 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::write_dna
//       Access: Public
//  Description: The main interface for writing complete dna files.
//////////////////////////////////////////////////////////////////// 4 4 this 3 873  8 filename 1 874  5 error 1 798  5 store 1 794  
268 14 Dtool_yMIfMyKP 6 260 809 0 14 Dtool_yMIfMyKP 265 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::write_dna
//       Access: Public
//  Description: The main interface for writing complete dna files.
//////////////////////////////////////////////////////////////////// 4 4 this 3 873  3 out 1 798  5 error 1 798  5 store 1 794  
269 14 Dtool_yMIfrJA5 4 261 796 0 14 Dtool_yMIfrJA5 403 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_coordinate_system
//       Access: Public
//  Description: Changes the coordinate system of the DNAData.  If the
//               coordinate system was previously different, this may
//               result in a conversion of the data.
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  8 coordsys 1 881  
270 14 Dtool_yMIf2_2I 6 262 881 0 14 Dtool_yMIf2_2I 307 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_coordinate_system
//       Access: Public
//  Description: Returns the coordinate system in which the dna file
//               is defined.
//////////////////////////////////////////////////////////////////// 1 4 this 3 871  
271 14 Dtool_yMIf1wSB 4 263 796 0 14 Dtool_yMIf1wSB 361 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_dna_filename
//       Access: Public
//  Description: Sets the directory in which the dna file is
//               considered to reside.  This is also implicitly set by
//               read().
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  9 directory 1 882  
272 14 Dtool_yMIfjqWP 6 264 882 0 14 Dtool_yMIfjqWP 307 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_dna_filename
//       Access: Public
//  Description: Returns the directory in which the dna file is
//               considered to reside.
//////////////////////////////////////////////////////////////////// 1 4 this 3 871  
273 14 Dtool_yMIffmc5 4 265 796 0 14 Dtool_yMIffmc5 258 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::set_dna_storage
//       Access: Public
//  Description: Sets the current dna storage facility
//////////////////////////////////////////////////////////////////// 2 4 this 3 873  5 store 1 794  
274 14 Dtool_yMIfrnzg 6 266 794 0 14 Dtool_yMIfrnzg 261 ////////////////////////////////////////////////////////////////////
//     Function: DNAData::get_dna_storage
//       Access: Public
//  Description: Returns the current dna storage facility
//////////////////////////////////////////////////////////////////// 1 4 this 3 873  
275 14 Dtool_yMIfklrg 7 267 801 0 14 Dtool_yMIfklrg 0 0 
276 14 Dtool_yMIfc9GJ 7 270 886 653 14 Dtool_yMIfc9GJ 221 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 door 1 884  
277 14 Dtool_yMIfTHFL 7 270 886 653 14 Dtool_yMIfTHFL 216 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
278 14 Dtool_yMIfIlrG 7 270 886 653 14 Dtool_yMIfIlrG 216 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
279 14 Dtool_yMIf0J0Z 4 271 796 0 14 Dtool_yMIf0J0Z 213 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::set_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 886  4 code 1 792  
280 14 Dtool_yMIfxcDR 6 272 792 0 14 Dtool_yMIfxcDR 213 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::get_code
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 884  
281 14 Dtool_yMIfjDjV 4 273 796 0 14 Dtool_yMIfjDjV 214 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::set_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 886  5 color 1 849  
282 14 Dtool_yMIfTh9z 7 274 852 0 14 Dtool_yMIfTh9z 214 ////////////////////////////////////////////////////////////////////
//     Function: DNADoor::get_color
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 884  
283 14 Dtool_yMIfkSvf 4 275 796 0 14 Dtool_yMIfkSvf 0 6 14 door_node_path 1 793  6 parent 1 793  11 door_origin 1 793  5 store 1 794  5 block 1 792  5 color 1 887  
284 14 Dtool_yMIf4LO9 7 276 801 0 14 Dtool_yMIf4LO9 0 0 
285 14 Dtool_yMIfk_L2 7 279 892 656 14 Dtool_yMIfk_L2 225 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatDoor::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 door 1 890  
286 14 Dtool_yMIfd2xd 7 279 892 656 14 Dtool_yMIfd2xd 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatDoor::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
287 14 Dtool_yMIf3kUU 7 279 892 656 14 Dtool_yMIf3kUU 220 ////////////////////////////////////////////////////////////////////
//     Function: DNAFlatDoor::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
288 14 Dtool_yMIfwULa 7 280 801 0 14 Dtool_yMIfwULa 0 0 
289 14 Dtool_yMIfRvTy 7 283 895 661 14 Dtool_yMIfRvTy 232 ////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 16 interactive_prop 1 893  
290 14 Dtool_yMIfJBO0 7 283 895 661 14 Dtool_yMIfJBO0 227 ////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
291 14 Dtool_yMIf6z5B 7 283 895 661 14 Dtool_yMIf6z5B 227 ////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
292 14 Dtool_yMIfeEls 4 284 796 0 14 Dtool_yMIfeEls 721 // Filename: dnaInteractiveProp.I
// Created by:  gjeon (02Oct09)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::set_cell_id
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 895  7 cell_id 1 795  
293 14 Dtool_yMIfbnZ1 6 285 795 0 14 Dtool_yMIfbnZ1 227 ////////////////////////////////////////////////////////////////////
//     Function: DNAInteractiveProp::get_cell_id
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 this 3 893  
294 14 Dtool_yMIfo1i5 7 286 801 0 14 Dtool_yMIfo1i5 0 0 
295 14 Dtool_yMIfnacW 7 289 896 667 14 Dtool_yMIfnacW 218 ////////////////////////////////////////////////////////////////////
//     Function: DNALoader::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
296 14 Dtool_yMIfWgdC 7 290 837 0 14 Dtool_yMIfWgdC 218 ////////////////////////////////////////////////////////////////////
//     Function: DNALoader::build_graph
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 3 4 this 3 896  9 dna_store 1 794  7 editing 1 795  
297 14 Dtool_yMIfSjxN 7 290 837 0 14 Dtool_yMIfSjxN 218 ////////////////////////////////////////////////////////////////////
//     Function: DNALoader::build_graph
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 896  9 dna_store 1 794  
298 14 Dtool_yMIft8FI 7 291 873 645 14 Dtool_yMIft8FI 0 1 4 this 3 896  
299 14 Dtool_yMIfhxUX 7 293 837 0 14 Dtool_yMIfhxUX 0 1 4 this 3 897  
300 14 Dtool_yMIfpxvF 6 296 899 0 14 Dtool_yMIfpxvF 0 1 4 this 3 897  
301 14 Dtool_yMIf_7zm 7 302 903 676 14 Dtool_yMIf_7zm 224 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 6 window 1 901  
302 14 Dtool_yMIfyGfX 7 302 903 676 14 Dtool_yMIfyGfX 219 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
303 14 Dtool_yMIfmEp4 7 302 903 676 14 Dtool_yMIfmEp4 219 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
304 14 Dtool_yMIfGboO 4 303 796 0 14 Dtool_yMIfGboO 381 // Filename: dnaWindow.I
// Created by:  shochet (11Jun00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_code
//       Access: Public
//  Description: sets the code of the windows node
//////////////////////////////////////////////////////////////////// 2 4 this 3 903  4 code 1 792  
305 14 Dtool_yMIflHl1 6 304 792 0 14 Dtool_yMIflHl1 253 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_code
//       Access: Public
//  Description: returns the code of the windows node
//////////////////////////////////////////////////////////////////// 1 4 this 3 901  
306 14 Dtool_yMIf5sAX 4 305 796 0 14 Dtool_yMIf5sAX 251 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_window_count
//       Access: Public
//  Description: sets the number of windows
//////////////////////////////////////////////////////////////////// 2 4 this 3 903  5 count 1 795  
307 14 Dtool_yMIfLEzi 6 306 795 0 14 Dtool_yMIfLEzi 253 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_window_count
//       Access: Public
//  Description: returns the count of windows
//////////////////////////////////////////////////////////////////// 1 4 this 3 901  
308 14 Dtool_yMIfPZaL 4 307 796 0 14 Dtool_yMIfPZaL 252 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::set_color
//       Access: Public
//  Description: sets the color of the windows node
//////////////////////////////////////////////////////////////////// 2 4 this 3 903  5 color 1 849  
309 14 Dtool_yMIfbJYq 7 308 852 0 14 Dtool_yMIfbJYq 255 ////////////////////////////////////////////////////////////////////
//     Function: DNAWindows::get_color
//       Access: Public
//  Description: returns the color of the windows node
//////////////////////////////////////////////////////////////////// 1 4 this 3 901  
310 14 Dtool_yMIfhbQb 7 309 801 0 14 Dtool_yMIfhbQb 0 0 
311 14 Dtool_yMIfOIML 7 312 906 693 14 Dtool_yMIfOIML 223 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 6 street 1 904  
312 14 Dtool_yMIf_FMW 7 312 906 693 14 Dtool_yMIf_FMW 218 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
313 14 Dtool_yMIfSmTO 4 313 796 0 14 Dtool_yMIfSmTO 379 // Filename: dnaStreet.I
// Created by:  shochet (28Mar00)
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_code
//       Access: Public
//  Description: sets the code of the street node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  4 code 1 792  
314 14 Dtool_yMIfEQjL 6 314 792 0 14 Dtool_yMIfEQjL 251 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_code
//       Access: Public
//  Description: returns the code of the street node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
315 14 Dtool_yMIfGReL 4 315 796 0 14 Dtool_yMIfGReL 261 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_street_texture
//       Access: Public
//  Description: sets the texture of the street node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  14 street_texture 1 792  
316 14 Dtool_yMIfzYQY 6 316 792 0 14 Dtool_yMIfzYQY 264 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_street_texture
//       Access: Public
//  Description: returns the texture of the street node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
317 14 Dtool_yMIfh0_l 4 317 796 0 14 Dtool_yMIfh0_l 265 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_sidewalk_texture
//       Access: Public
//  Description: sets the texture of the sidewalk node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  16 sidewalk_texture 1 792  
318 14 Dtool_yMIfkRke 6 318 792 0 14 Dtool_yMIfkRke 268 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_sidewalk_texture
//       Access: Public
//  Description: returns the texture of the sidewalk node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
319 14 Dtool_yMIfMv8z 4 319 796 0 14 Dtool_yMIfMv8z 257 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_curb_texture
//       Access: Public
//  Description: sets the texture of the curb node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  12 curb_texture 1 792  
320 14 Dtool_yMIfkZkz 6 320 792 0 14 Dtool_yMIfkZkz 260 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_curb_texture
//       Access: Public
//  Description: returns the texture of the curb node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
321 14 Dtool_yMIfs3vt 4 321 796 0 14 Dtool_yMIfs3vt 257 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_street_color
//       Access: Public
//  Description: sets the color of the street node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  5 color 1 849  
322 14 Dtool_yMIfxIQg 7 322 852 0 14 Dtool_yMIfxIQg 260 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_street_color
//       Access: Public
//  Description: returns the color of the street node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
323 14 Dtool_yMIfKrjL 4 323 796 0 14 Dtool_yMIfKrjL 261 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_sidewalk_color
//       Access: Public
//  Description: sets the color of the sidewalk node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  5 color 1 849  
324 14 Dtool_yMIfmnCn 7 324 852 0 14 Dtool_yMIfmnCn 264 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_sidewalk_color
//       Access: Public
//  Description: returns the color of the sidewalk node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
325 14 Dtool_yMIf_ayL 4 325 796 0 14 Dtool_yMIf_ayL 257 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::set_curb_color
//       Access: Public
//  Description: sets the color of the sidewalk node
//////////////////////////////////////////////////////////////////// 2 4 this 3 906  5 color 1 849  
326 14 Dtool_yMIfD3B7 7 326 852 0 14 Dtool_yMIfD3B7 256 ////////////////////////////////////////////////////////////////////
//     Function: DNAStreet::get_curb_color
//       Access: Public
//  Description: returns the color of the curb node
//////////////////////////////////////////////////////////////////// 1 4 this 3 904  
327 14 Dtool_yMIfWNtw 7 327 801 0 14 Dtool_yMIfWNtw 0 0 
328 14 Dtool_yMIfZQjF 7 330 909 700 14 Dtool_yMIfZQjF 221 ////////////////////////////////////////////////////////////////////
//     Function: DNASign::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 Sign 1 907  
329 14 Dtool_yMIfs7B5 7 330 909 700 14 Dtool_yMIfs7B5 216 ////////////////////////////////////////////////////////////////////
//     Function: DNASign::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
330 14 Dtool_yMIfTmm0 7 330 909 700 14 Dtool_yMIfTmm0 216 ////////////////////////////////////////////////////////////////////
//     Function: DNASign::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
331 14 Dtool_yMIfk2wJ 4 331 796 0 14 Dtool_yMIfk2wJ 0 2 4 this 3 909  4 code 1 792  
332 14 Dtool_yMIfIn_A 6 332 792 0 14 Dtool_yMIfIn_A 0 1 4 this 3 907  
333 14 Dtool_yMIfz6fF 4 333 796 0 14 Dtool_yMIfz6fF 0 2 4 this 3 909  5 color 1 849  
334 14 Dtool_yMIfjO5j 7 334 852 0 14 Dtool_yMIfjO5j 0 1 4 this 3 907  
335 14 Dtool_yMIfo4Lt 7 335 801 0 14 Dtool_yMIfo4Lt 0 0 
336 14 Dtool_yMIf0llq 7 338 912 733 14 Dtool_yMIf0llq 229 ////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 4 Sign 1 910  
337 14 Dtool_yMIf3ZTT 7 338 912 733 14 Dtool_yMIf3ZTT 224 ////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
338 14 Dtool_yMIfqnlX 7 338 912 733 14 Dtool_yMIfqnlX 224 ////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
339 14 Dtool_yMIfTl8n 4 339 796 0 14 Dtool_yMIfTl8n 0 2 4 this 3 912  4 code 1 792  
340 14 Dtool_yMIfeXt1 6 340 792 0 14 Dtool_yMIfeXt1 0 1 4 this 3 910  
341 14 Dtool_yMIfupch 4 341 796 0 14 Dtool_yMIfupch 0 2 4 this 3 912  5 color 1 849  
342 14 Dtool_yMIf80Vf 7 342 852 0 14 Dtool_yMIf80Vf 0 1 4 this 3 910  
343 14 Dtool_yMIfvSVm 4 343 796 0 14 Dtool_yMIfvSVm 0 2 4 this 3 912  4 font 1 832  
344 14 Dtool_yMIfcqSf 7 344 832 0 14 Dtool_yMIfcqSf 0 1 4 this 3 910  
345 14 Dtool_yMIfY_9C 4 345 796 0 14 Dtool_yMIfY_9C 0 2 4 this 3 912  6 indent 1 813  
346 14 Dtool_yMIfiw_D 6 346 813 0 14 Dtool_yMIfiw_D 0 1 4 this 3 910  
347 14 Dtool_yMIfDTpR 4 347 796 0 14 Dtool_yMIfDTpR 0 2 4 this 3 912  4 kern 1 813  
348 14 Dtool_yMIfx0nT 6 348 813 0 14 Dtool_yMIfx0nT 0 1 4 this 3 910  
349 14 Dtool_yMIfScMV 6 349 813 0 14 Dtool_yMIfScMV 0 1 4 this 3 912  
350 14 Dtool_yMIfNbX1 4 350 796 0 14 Dtool_yMIfNbX1 0 2 4 this 3 912  6 wiggle 1 813  
351 14 Dtool_yMIfCMa2 6 351 813 0 14 Dtool_yMIfCMa2 0 1 4 this 3 910  
352 14 Dtool_yMIfljiJ 6 352 813 0 14 Dtool_yMIfljiJ 0 1 4 this 3 912  
353 14 Dtool_yMIfqvDo 4 353 796 0 14 Dtool_yMIfqvDo 0 2 4 this 3 912  7 stumble 1 813  
354 14 Dtool_yMIfHj8K 6 354 813 0 14 Dtool_yMIfHj8K 0 1 4 this 3 910  
355 14 Dtool_yMIfEa4q 6 355 813 0 14 Dtool_yMIfEa4q 0 1 4 this 3 912  
356 14 Dtool_yMIfoFe_ 4 356 796 0 14 Dtool_yMIfoFe_ 0 2 4 this 3 912  5 stomp 1 813  
357 14 Dtool_yMIfZjf_ 6 357 813 0 14 Dtool_yMIfZjf_ 0 1 4 this 3 910  
358 14 Dtool_yMIfLME1 6 358 813 0 14 Dtool_yMIfLME1 0 1 4 this 3 912  
359 14 Dtool_yMIfEA_Z 4 359 796 0 14 Dtool_yMIfEA_Z 0 2 4 this 3 912  5 width 1 813  
360 14 Dtool_yMIfXl_Z 6 360 813 0 14 Dtool_yMIfXl_Z 0 1 4 this 3 910  
361 14 Dtool_yMIfqSo_ 4 361 796 0 14 Dtool_yMIfqSo_ 0 2 4 this 3 912  6 height 1 813  
362 14 Dtool_yMIf6BrA 6 362 813 0 14 Dtool_yMIf6BrA 0 1 4 this 3 910  
363 14 Dtool_yMIfaObB 4 363 796 0 14 Dtool_yMIfaObB 0 2 4 this 3 912  5 flags 1 792  
364 14 Dtool_yMIfjmx5 6 364 792 0 14 Dtool_yMIfjmx5 0 1 4 this 3 910  
365 14 Dtool_yMIfngKi 6 365 809 0 14 Dtool_yMIfngKi 232 ////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::isFirstLetterOfWord
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 2 4 this 3 912  6 letter 1 792  
366 14 Dtool_yMIfNWmo 4 366 796 0 14 Dtool_yMIfNWmo 0 1 4 this 3 912  
367 14 Dtool_yMIfzeoR 4 367 796 0 14 Dtool_yMIfzeoR 0 1 4 this 3 912  
368 14 Dtool_yMIfI_UE 4 368 796 0 14 Dtool_yMIfI_UE 235 ////////////////////////////////////////////////////////////////////
//     Function: DNASignBaseline::baseline_pos_hpr_scale
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 5 4 this 3 912  3 pos 1 913  3 hpr 1 913  5 scale 1 913  4 size 1 915  
369 14 Dtool_yMIf6kHB 7 369 801 0 14 Dtool_yMIf6kHB 0 0 
370 14 Dtool_yMIfW2kO 7 372 919 744 14 Dtool_yMIfW2kO 228 ////////////////////////////////////////////////////////////////////
//     Function: DNASignGraphic::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 7 graphic 1 917  
371 14 Dtool_yMIf1oUg 7 372 919 744 14 Dtool_yMIf1oUg 223 ////////////////////////////////////////////////////////////////////
//     Function: DNASignGraphic::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
372 14 Dtool_yMIfBWR_ 7 372 919 744 14 Dtool_yMIfBWR_ 223 ////////////////////////////////////////////////////////////////////
//     Function: DNASignGraphic::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
373 14 Dtool_yMIfOepc 4 373 796 0 14 Dtool_yMIfOepc 0 2 4 this 3 919  4 code 1 792  
374 14 Dtool_yMIfwnGX 6 374 792 0 14 Dtool_yMIfwnGX 0 1 4 this 3 917  
375 14 Dtool_yMIfrrdI 4 375 796 0 14 Dtool_yMIfrrdI 0 2 4 this 3 919  5 color 1 849  
376 14 Dtool_yMIffBaa 7 376 852 0 14 Dtool_yMIffBaa 0 1 4 this 3 917  
377 14 Dtool_yMIfT6PO 4 377 796 0 14 Dtool_yMIfT6PO 0 2 4 this 3 919  5 width 1 813  
378 14 Dtool_yMIfw6Po 6 378 813 0 14 Dtool_yMIfw6Po 0 1 4 this 3 917  
379 14 Dtool_yMIfGOaD 4 379 796 0 14 Dtool_yMIfGOaD 0 2 4 this 3 919  6 height 1 813  
380 14 Dtool_yMIfJhcb 6 380 813 0 14 Dtool_yMIfJhcb 0 1 4 this 3 917  
381 14 Dtool_yMIfwTfh 7 381 801 0 14 Dtool_yMIfwTfh 0 0 
382 14 Dtool_yMIfMeb4 7 384 922 753 14 Dtool_yMIfMeb4 225 ////////////////////////////////////////////////////////////////////
//     Function: DNASignText::Copy Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 8 signText 1 920  
383 14 Dtool_yMIfUHjl 7 384 922 753 14 Dtool_yMIfUHjl 220 ////////////////////////////////////////////////////////////////////
//     Function: DNASignText::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 1 12 initial_name 1 792  
384 14 Dtool_yMIfkRFc 7 384 922 753 14 Dtool_yMIfkRFc 220 ////////////////////////////////////////////////////////////////////
//     Function: DNASignText::Constructor
//       Access: Public
//  Description:
//////////////////////////////////////////////////////////////////// 0 
385 14 Dtool_yMIf4Aw_ 4 385 796 0 14 Dtool_yMIf4Aw_ 0 2 4 this 3 922  4 code 1 792  
386 14 Dtool_yMIfF_Rb 6 386 792 0 14 Dtool_yMIfF_Rb 0 1 4 this 3 920  
387 14 Dtool_yMIftOiX 4 387 796 0 14 Dtool_yMIftOiX 0 2 4 this 3 922  5 color 1 849  
388 14 Dtool_yMIfjIc1 7 388 852 0 14 Dtool_yMIfjIc1 0 1 4 this 3 920  
389 14 Dtool_yMIfGPYM 4 389 796 0 14 Dtool_yMIfGPYM 0 2 4 this 3 922  7 letters 1 792  
390 14 Dtool_yMIfovbX 6 390 792 0 14 Dtool_yMIfovbX 0 1 4 this 3 920  
391 14 Dtool_yMIfljAS 7 391 801 0 14 Dtool_yMIfljAS 0 0 
392 14 Dtool_yMIfvtlr 6 1 923 0 14 Dtool_yMIfvtlr 0 0 
393 14 Dtool_yMIfq_U1 7 393 837 0 14 Dtool_yMIfq_U1 648 ////////////////////////////////////////////////////////////////////
//     Function: load_dna_file
//  Description: A convenience function.  Loads up the indicated dna
//               file, and returns the root of a scene graph.  Returns
//               NULL if the file cannot be read for some reason.
//
//               Unlike load_egg_file(), this function *does* search
//               for the file along the model_path (as well as the
//               dna_path) if it is not already fully qualified.
//               Begin the filename with ./ to prevent this behavior.
//////////////////////////////////////////////////////////////////// 4 9 dna_store 1 794  8 filename 1 792  2 cs 1 881  7 editing 1 795  
394 14 Dtool_yMIf4qN9 7 393 837 0 14 Dtool_yMIf4qN9 648 ////////////////////////////////////////////////////////////////////
//     Function: load_dna_file
//  Description: A convenience function.  Loads up the indicated dna
//               file, and returns the root of a scene graph.  Returns
//               NULL if the file cannot be read for some reason.
//
//               Unlike load_egg_file(), this function *does* search
//               for the file along the model_path (as well as the
//               dna_path) if it is not already fully qualified.
//               Begin the filename with ./ to prevent this behavior.
//////////////////////////////////////////////////////////////////// 3 9 dna_store 1 794  8 filename 1 792  2 cs 1 881  
395 14 Dtool_yMIfpfFQ 7 393 837 0 14 Dtool_yMIfpfFQ 648 ////////////////////////////////////////////////////////////////////
//     Function: load_dna_file
//  Description: A convenience function.  Loads up the indicated dna
//               file, and returns the root of a scene graph.  Returns
//               NULL if the file cannot be read for some reason.
//
//               Unlike load_egg_file(), this function *does* search
//               for the file along the model_path (as well as the
//               dna_path) if it is not already fully qualified.
//               Begin the filename with ./ to prevent this behavior.
//////////////////////////////////////////////////////////////////// 2 9 dna_store 1 794  8 filename 1 792  
396 14 Dtool_yMIfxsfU 7 394 873 645 14 Dtool_yMIfxsfU 503 ////////////////////////////////////////////////////////////////////
//     Function: load_dna_file_ai
//  Description: Loads up the indicated dna file but does not create
//               any geometry from it. It simply creates the dna
//               structures that can then be accessed via the dnaStorage
//               Returns the DNAData object on success, or NULL if the
//               file cannot be read for some reason.
//////////////////////////////////////////////////////////////////// 3 9 dna_store 1 794  8 filename 1 792  2 cs 1 881  
397 14 Dtool_yMIf3_Um 7 394 873 645 14 Dtool_yMIf3_Um 503 ////////////////////////////////////////////////////////////////////
//     Function: load_dna_file_ai
//  Description: Loads up the indicated dna file but does not create
//               any geometry from it. It simply creates the dna
//               structures that can then be accessed via the dnaStorage
//               Returns the DNAData object on success, or NULL if the
//               file cannot be read for some reason.
//////////////////////////////////////////////////////////////////// 2 9 dna_store 1 794  8 filename 1 792  
172
756 8 DNAGroup 141313 8 DNAGroup 8 DNAGroup 0 0 0 1 403 415 0 11 404 405 406 407 408 409 410 411 412 413 414 0 0 2 3 757 399 400 3 758 401 402 0 0 201
////////////////////////////////////////////////////////////////////
//       Class : DNAGroup
// Description : A group of dna nodes
////////////////////////////////////////////////////////////////////

757 19 TypedReferenceCount 2049 19 TypedReferenceCount 19 TypedReferenceCount 0 0 0 0 0 0 0 0 0 0 0 0 710
////////////////////////////////////////////////////////////////////
//       Class : TypedReferenceCount
// Description : A base class for things which need to inherit from
//               both TypedObject and from ReferenceCount.  It's
//               convenient to define this intermediate base class
//               instead of multiply inheriting from the two classes
//               each time they are needed, so that we can sensibly
//               pass around pointers to things which are both
//               TypedObjects and ReferenceCounters.
//               
//               See also TypedObject for detailed instructions.
////////////////////////////////////////////////////////////////////

758 7 Namable 2049 7 Namable 7 Namable 0 0 0 0 0 0 0 0 0 0 0 0 324
////////////////////////////////////////////////////////////////////
//       Class : Namable
// Description : A base class for all things which can have a name.
//               The name is either empty or nonempty, but it is never
//               NULL.
////////////////////////////////////////////////////////////////////

759 12 DNASuitPoint 141313 12 DNASuitPoint 12 DNASuitPoint 0 0 0 1 416 431 0 14 417 418 419 420 421 422 423 424 425 426 427 428 429 430 0 0 1 0 757 0 0 0 1 760 184
////////////////////////////////////////////////////////////////////
//       Class : DNASuitPoint
// Description :
////////////////////////////////////////////////////////////////////

760 16 DNASuitPointType 794624 30 DNASuitPoint::DNASuitPointType 30 DNASuitPoint::DNASuitPointType 759 0 0 0 0 0 0 0 0 0 5 12 STREET_POINT 26 DNASuitPoint::STREET_POINT 0 16 FRONT_DOOR_POINT 30 DNASuitPoint::FRONT_DOOR_POINT 1 15 SIDE_DOOR_POINT 29 DNASuitPoint::SIDE_DOOR_POINT 2 14 COGHQ_IN_POINT 28 DNASuitPoint::COGHQ_IN_POINT 3 15 COGHQ_OUT_POINT 29 DNASuitPoint::COGHQ_OUT_POINT 4 0 0

761 11 DNASuitEdge 141313 11 DNASuitEdge 11 DNASuitEdge 0 0 0 1 432 441 0 8 433 434 435 436 437 438 439 440 0 0 1 0 757 0 0 0 0 183
////////////////////////////////////////////////////////////////////
//       Class : DNASuitEdge
// Description :
////////////////////////////////////////////////////////////////////

762 13 DNABattleCell 141313 13 DNABattleCell 13 DNABattleCell 0 0 0 1 442 452 0 9 443 444 445 446 447 448 449 450 451 0 0 1 0 757 0 0 0 0 239
////////////////////////////////////////////////////////////////////
//       Class : DNABattleCell
// Description : A representation of an area where a battle may occur.
////////////////////////////////////////////////////////////////////

763 11 DNAVisGroup 141313 11 DNAVisGroup 11 DNAVisGroup 0 0 0 1 453 467 0 13 454 455 456 457 458 459 460 461 462 463 464 465 466 0 0 1 0 756 0 0 0 0 451
////////////////////////////////////////////////////////////////////
//       Class : DNAVisGroup
// Description : A group of dna nodes with special visibility info
//               tagged in a vis property. The vis property should list
//               all the other DNAVisGroups (including itself) that
//               should be rendered when the avatar is standing in this group
////////////////////////////////////////////////////////////////////

764 11 DNASuitPath 141313 11 DNASuitPath 11 DNASuitPath 0 0 0 1 468 474 0 5 469 470 471 472 473 0 0 1 0 757 0 0 0 0 183
////////////////////////////////////////////////////////////////////
//       Class : DNASuitPath
// Description :
////////////////////////////////////////////////////////////////////

765 6 PosHpr 140289 6 PosHpr 6 PosHpr 0 0 0 1 475 478 0 2 476 477 0 0 0 0 0 124
//////////////////////////////////////////////////
// Global part storage
//////////////////////////////////////////////////

766 10 DNAStorage 141313 10 DNAStorage 10 DNAStorage 0 0 0 1 479 570 0 90 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 0 0 0 0 0 0

767 7 DNANode 141313 7 DNANode 7 DNANode 0 0 0 1 571 579 0 7 572 573 574 575 576 577 578 0 0 1 0 756 0 0 0 0 0

768 7 DNAWall 141313 7 DNAWall 7 DNAWall 0 0 0 1 580 588 0 7 581 582 583 584 585 586 587 0 0 1 0 767 0 0 0 0 197
////////////////////////////////////////////////////////////////////
//       Class : DNAWall
// Description : A stackable wall.
////////////////////////////////////////////////////////////////////

769 15 DNAFlatBuilding 141313 15 DNAFlatBuilding 15 DNAFlatBuilding 0 0 0 1 589 594 0 4 590 591 592 593 0 0 1 0 767 0 0 0 0 204
////////////////////////////////////////////////////////////////////
//       Class : DNAFlatBuilding
// Description : A flat building.
////////////////////////////////////////////////////////////////////

770 19 DNALandmarkBuilding 141313 19 DNALandmarkBuilding 19 DNALandmarkBuilding 0 0 0 1 595 607 0 11 596 597 598 599 600 601 602 603 604 605 606 0 0 1 0 767 0 0 0 0 212
////////////////////////////////////////////////////////////////////
//       Class : DNALandmarkBuilding
// Description : A landmark building.
////////////////////////////////////////////////////////////////////

771 15 DNAAnimBuilding 141313 15 DNAAnimBuilding 15 DNAAnimBuilding 0 0 0 1 608 612 0 3 609 610 611 0 0 1 0 770 0 0 0 0 235
////////////////////////////////////////////////////////////////////
//       Class : DNAAnimBuilding
// Description : An animated building like a sneeizing building.
////////////////////////////////////////////////////////////////////

772 7 DNAProp 141313 7 DNAProp 7 DNAProp 0 0 0 1 613 619 0 5 614 615 616 617 618 0 0 1 0 767 0 0 0 0 215
////////////////////////////////////////////////////////////////////
//       Class : DNAProp
// Description : A prop like a tree or fire hydrant.
////////////////////////////////////////////////////////////////////

773 11 DNAAnimProp 141313 11 DNAAnimProp 11 DNAAnimProp 0 0 0 1 620 624 0 3 621 622 623 0 0 1 0 772 0 0 0 0 224
////////////////////////////////////////////////////////////////////
//       Class : DNAAnimProp
// Description : An animated prop like a walking hydrant.
////////////////////////////////////////////////////////////////////

774 10 DNACornice 141313 10 DNACornice 10 DNACornice 0 0 0 1 625 631 0 5 626 627 628 629 630 0 0 1 0 756 0 0 0 0 222
////////////////////////////////////////////////////////////////////
//       Class : DNACornice
// Description : A cornice at the top of a flat building
////////////////////////////////////////////////////////////////////

775 7 DNAData 141313 7 DNAData 7 DNAData 0 0 0 1 632 645 0 12 633 634 635 636 637 638 639 640 641 642 643 644 0 0 1 0 756 0 0 0 0 397
///////////////////////////////////////////////////////////////////
//       Class : DNAData
// Description : This is the primary interface into all the DNA data,
//               and the root of the DNA file structure.  An DNAData
//               structure corresponds exactly with an DNA file on the
//               disk.
//
////////////////////////////////////////////////////////////////////

776 7 DNADoor 141313 7 DNADoor 7 DNADoor 0 0 0 1 646 653 0 6 647 648 649 650 651 652 0 0 1 0 756 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : DNADoor
// Description : A door
////////////////////////////////////////////////////////////////////

777 11 DNAFlatDoor 141313 11 DNAFlatDoor 11 DNAFlatDoor 0 0 0 1 654 656 0 1 655 0 0 1 0 776 0 0 0 0 211
////////////////////////////////////////////////////////////////////
//       Class : DNAFlatDoor
// Description : A door for a flat buildings
////////////////////////////////////////////////////////////////////

778 18 DNAInteractiveProp 141313 18 DNAInteractiveProp 18 DNAInteractiveProp 0 0 0 1 657 661 0 3 658 659 660 0 0 1 0 773 0 0 0 0 234
////////////////////////////////////////////////////////////////////
//       Class : DNAInteractiveProp
// Description : An interactive prop like a walking hydrant.
////////////////////////////////////////////////////////////////////

779 9 DNALoader 141313 9 DNALoader 9 DNALoader 0 0 0 1 662 667 3 928 929 930 2 663 664 0 0 0 0 0 334
///////////////////////////////////////////////////////////////////
//       Class : DNALoader
// Description : Converts a dna structure, possibly read from a
//               dna file but not necessarily, into a scene graph
//               suitable for rendering.
////////////////////////////////////////////////////////////////////

780 22 PointerTo< PandaNode > 2048 22 PointerTo< PandaNode > 22 PointerTo< PandaNode > 0 0 0 0 0 0 0 0 0 0 0 0 0

781 8 NodePath 2048 8 NodePath 8 NodePath 0 0 0 0 0 0 0 2 931 932 0 0 0 0 4938
//
// A NodePath is the fundamental unit of high-level interaction with
// the scene graph.  It encapsulates the complete path down to a node
// from some other node, usually the root of the scene graph.  This is
// used to resolve ambiguities associated with instancing.
//
// NodePath also contains a number of handy high-level methods for
// common scene-graph manipulations, such as reparenting, and common
// state changes, such as repositioning.
//
// There are also a number of NodePath methods for finding nodes deep
// within the tree by name or by type.  These take a path string,
// which at its simplest consists of a series of node names separated
// by slashes, like a directory pathname.
//
// Each component of the path string may optionally consist of one of
// the following special names, instead of a node name:
//
//   *          -- matches exactly one node, with any name.
//   **         -- matches any sequence of zero or more nodes.
//   +typename  -- matches any node that is or derives from the given type.
//   -typename  -- matches any node that is the given type exactly.
//   =tag       -- matches any node that has the indicated tag.
//   =tag=value -- matches any node whose tag matches the indicated value.
//
// Furthermore, a node name may itself contain standard filename
// globbing characters, like *, ?, and [a-z], that will be accepted as
// a partial match.  (In fact, the '*' special name may be seen as
// just a special case of this.)  The globbing characters may not be
// used with the typename matches or with tag matches, but they may
// be used to match a tag's value in the =tag=value syntax.
//
// The special characters "@@", appearing at the beginning of a node
// name, indicate a stashed node.  Normally, stashed nodes are not
// returned by a find (but see the special flags, below), but a
// stashed node may be found if it is explicitly named with its
// leading @@ characters.  By extension, "@@*" may be used to identify
// any stashed node.
//
// Examples:
//
// "room//graph" will look for a node named "graph", which is a child
// of an unnamed node, which is a child of a node named "room", which
// is a child of the starting path.
//
// "**/red*" will look for any node anywhere in the tree (below the
// starting path) with a name that begins with "red".
//
// "**/+PartBundleNode/**/head" will look for a node named "head",
// somewhere below a PartBundleNode anywhere in the tree.
//
//
// The search is always potentially ambiguous, even if the special
// wildcard operators are not used, because there may be multiple
// nodes in the tree with the same name.  In general, in the case of
// an ambiguity, the shortest path is preferred; when a method (such
// as extend_by) must choose only only one of several possible paths,
// it will choose the shortest available; on the other hand, when a
// method (such as find_all_matches) is to return all of the matching
// paths, it will sort them so that the shortest paths appear first in
// the output.
//
//
// Special flags.  The entire string may optionally be followed by the
// ";" character, followed by one or more of the following special
// control flags, with no intervening spaces or punctuation:
//
//    -h    Do not return hidden nodes.
//    +h    Do return hidden nodes.
//    -s    Do not return stashed nodes unless explicitly referenced with @@.
//    +s    Return stashed nodes even without any explicit @@ characters.
//    -i    Node name comparisons are not case insensitive: case must match
//          exactly.
//    +i    Node name comparisons are case insensitive: case is not important.
//          This affects matches against the node name only; node type
//          and tag strings are always case sensitive.
//
// The default flags are +h-s-i.
//
////////////////////////////////////////////////////////////////////
//       Class : NodePath
// Description : NodePath is the fundamental system for disambiguating
//               instances, and also provides a higher-level interface
//               for manipulating the scene graph.
//
//               A NodePath is a list of connected nodes from the root
//               of the graph to any sub-node.  Each NodePath
//               therefore uniquely describes one instance of a node.
//
//               NodePaths themselves are lightweight objects that may
//               easily be copied and passed by value.  Their data is
//               stored as a series of NodePathComponents that are
//               stored on the nodes.  Holding a NodePath will keep a
//               reference count to all the nodes in the path.
//               However, if any node in the path is removed or
//               reparented (perhaps through a different NodePath),
//               the NodePath will automatically be updated to reflect
//               the changes.
////////////////////////////////////////////////////////////////////

782 20 PointerTo< DNAData > 2048 20 PointerTo< DNAData > 20 PointerTo< DNAData > 0 0 0 0 0 0 0 0 0 0 0 0 0

783 10 DNAWindows 141313 10 DNAWindows 10 DNAWindows 0 0 0 1 668 676 0 7 669 670 671 672 673 674 675 0 0 1 0 756 0 0 0 0 223
////////////////////////////////////////////////////////////////////
//       Class : DNAWindows
// Description : A group of windows with a default layout
////////////////////////////////////////////////////////////////////

784 9 DNAStreet 141313 9 DNAStreet 9 DNAStreet 0 0 0 1 677 693 0 15 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 0 0 1 0 767 0 0 0 0 191
////////////////////////////////////////////////////////////////////
//       Class : DNAStreet
// Description : A street.
////////////////////////////////////////////////////////////////////

785 7 DNASign 141313 7 DNASign 7 DNASign 0 0 0 1 694 700 0 5 695 696 697 698 699 0 0 1 0 767 0 0 0 0 186
////////////////////////////////////////////////////////////////////
//       Class : DNASign
// Description : A Sign
////////////////////////////////////////////////////////////////////

786 15 DNASignBaseline 141313 15 DNASignBaseline 15 DNASignBaseline 0 0 0 1 701 733 0 31 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 0 0 1 0 767 0 0 0 0 190
////////////////////////////////////////////////////////////////////
//   Class : DNASignBaseline
// Description : A Sign
////////////////////////////////////////////////////////////////////

787 14 DNASignGraphic 141313 14 DNASignGraphic 14 DNASignGraphic 0 0 0 1 734 744 0 9 735 736 737 738 739 740 741 742 743 0 0 1 0 767 0 0 0 0 192
////////////////////////////////////////////////////////////////////
//   Class : DNASignGraphic
// Description : A graphic
////////////////////////////////////////////////////////////////////

788 11 DNASignText 141313 11 DNASignText 11 DNASignText 0 0 0 1 745 753 0 7 746 747 748 749 750 751 752 0 0 1 0 767 0 0 0 0 190
////////////////////////////////////////////////////////////////////
//       Class : DNASignText
// Description : A Sign
////////////////////////////////////////////////////////////////////

789 16 DNAGroup const * 8576 16 DNAGroup const * 16 DNAGroup const * 0 0 790 0 0 0 0 0 0 0 0 0 0

790 14 DNAGroup const 8832 14 DNAGroup const 14 DNAGroup const 0 0 756 0 0 0 0 0 0 0 0 0 0

791 10 DNAGroup * 8576 10 DNAGroup * 10 DNAGroup * 0 0 756 0 0 0 0 0 0 0 0 0 0

792 13 atomic string 2 13 atomic string 13 atomic string 0 7 0 0 0 0 0 0 0 0 0 0 0

793 10 NodePath * 8576 10 NodePath * 10 NodePath * 0 0 781 0 0 0 0 0 0 0 0 0 0

794 12 DNAStorage * 8576 12 DNAStorage * 12 DNAStorage * 0 0 766 0 0 0 0 0 0 0 0 0 0

795 3 int 8194 3 int 3 int 0 1 0 0 0 0 0 0 0 0 0 0 0

796 4 void 8194 4 void 4 void 0 6 0 0 0 0 0 0 0 0 0 0 0

797 12 unsigned int 8198 12 unsigned int 12 unsigned int 0 1 0 0 0 0 0 0 0 0 0 0 0

798 9 ostream * 8576 9 ostream * 9 ostream * 0 0 799 0 0 0 0 0 0 0 0 0 0

799 7 ostream 2048 7 ostream 7 ostream 0 0 0 0 0 0 0 0 0 0 0 0 0

800 10 TypeHandle 2048 10 TypeHandle 10 TypeHandle 0 0 0 0 0 0 0 0 0 0 0 0 1098
////////////////////////////////////////////////////////////////////
//       Class : TypeHandle
// Description : TypeHandle is the identifier used to differentiate
//               C++ class types.  Any C++ classes that inherit from
//               some base class, and must be differentiated at run
//               time, should store a static TypeHandle object that
//               can be queried through a static member function
//               named get_class_type().  Most of the time, it is also
//               desirable to inherit from TypedObject, which provides
//               some virtual functions to return the TypeHandle for a
//               particular instance.
//
//               At its essence, a TypeHandle is simply a unique
//               identifier that is assigned by the TypeRegistry.  The
//               TypeRegistry stores a tree of TypeHandles, so that
//               ancestry of a particular type may be queried, and the
//               type name may be retrieved for run-time display.
////////////////////////////////////////////////////////////////////

801 12 TypeHandle * 8576 12 TypeHandle * 12 TypeHandle * 0 0 800 0 0 0 0 0 0 0 0 0 0

802 21 TypedReferenceCount * 8576 21 TypedReferenceCount * 21 TypedReferenceCount * 0 0 757 0 0 0 0 0 0 0 0 0 0

803 9 Namable * 8576 9 Namable * 9 Namable * 0 0 758 0 0 0 0 0 0 0 0 0 0

804 10 LPoint3f * 8576 10 LPoint3f * 10 LPoint3f * 0 0 805 0 0 0 0 0 0 0 0 0 0

805 7 Vertexf 2048 8 LPoint3f 8 LPoint3f 0 0 0 0 0 0 0 0 0 0 0 0 1083
// Filename: lpoint3_src.h
// Created by:  drose (25Sep99)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LPoint3
// Description : This is a three-component point in space (as opposed
//               to a three-component vector, which represents a
//               direction and a distance).  Some of the methods are
//               slightly different between LPoint3 and LVector3; in
//               particular, subtraction of two points yields a
//               vector, while addition of a vector and a point yields
//               a point.
////////////////////////////////////////////////////////////////////

806 14 DNASuitPoint * 8576 14 DNASuitPoint * 14 DNASuitPoint * 0 0 759 0 0 0 0 0 0 0 0 0 0

807 20 DNASuitPoint const * 8576 20 DNASuitPoint const * 20 DNASuitPoint const * 0 0 808 0 0 0 0 0 0 0 0 0 0

808 18 DNASuitPoint const 8832 18 DNASuitPoint const 18 DNASuitPoint const 0 0 759 0 0 0 0 0 0 0 0 0 0

809 4 bool 8194 4 bool 4 bool 0 4 0 0 0 0 0 0 0 0 0 0 0

810 13 DNASuitEdge * 8576 13 DNASuitEdge * 13 DNASuitEdge * 0 0 761 0 0 0 0 0 0 0 0 0 0

811 19 DNASuitEdge const * 8576 19 DNASuitEdge const * 19 DNASuitEdge const * 0 0 812 0 0 0 0 0 0 0 0 0 0

812 17 DNASuitEdge const 8832 17 DNASuitEdge const 17 DNASuitEdge const 0 0 761 0 0 0 0 0 0 0 0 0 0

813 5 float 8194 5 float 5 float 0 2 0 0 0 0 0 0 0 0 0 0 0

814 15 DNABattleCell * 8576 15 DNABattleCell * 15 DNABattleCell * 0 0 762 0 0 0 0 0 0 0 0 0 0

815 21 DNABattleCell const * 8576 21 DNABattleCell const * 21 DNABattleCell const * 0 0 816 0 0 0 0 0 0 0 0 0 0

816 19 DNABattleCell const 8832 19 DNABattleCell const 19 DNABattleCell const 0 0 762 0 0 0 0 0 0 0 0 0 0

817 19 DNAVisGroup const * 8576 19 DNAVisGroup const * 19 DNAVisGroup const * 0 0 818 0 0 0 0 0 0 0 0 0 0

818 17 DNAVisGroup const 8832 17 DNAVisGroup const 17 DNAVisGroup const 0 0 763 0 0 0 0 0 0 0 0 0 0

819 13 DNAVisGroup * 8576 13 DNAVisGroup * 13 DNAVisGroup * 0 0 763 0 0 0 0 0 0 0 0 0 0

820 13 DNASuitPath * 8576 13 DNASuitPath * 13 DNASuitPath * 0 0 764 0 0 0 0 0 0 0 0 0 0

821 19 DNASuitPath const * 8576 19 DNASuitPath const * 19 DNASuitPath const * 0 0 822 0 0 0 0 0 0 0 0 0 0

822 17 DNASuitPath const 8832 17 DNASuitPath const 17 DNASuitPath const 0 0 764 0 0 0 0 0 0 0 0 0 0

823 16 LPoint3f const * 8576 16 LPoint3f const * 16 LPoint3f const * 0 0 824 0 0 0 0 0 0 0 0 0 0

824 14 LPoint3f const 8832 14 LPoint3f const 14 LPoint3f const 0 0 805 0 0 0 0 0 0 0 0 0 0

825 8 PosHpr * 8576 8 PosHpr * 8 PosHpr * 0 0 765 0 0 0 0 0 0 0 0 0 0

826 14 PosHpr const * 8576 14 PosHpr const * 14 PosHpr const * 0 0 827 0 0 0 0 0 0 0 0 0 0

827 12 PosHpr const 8832 12 PosHpr const 12 PosHpr const 0 0 765 0 0 0 0 0 0 0 0 0 0

828 18 DNAStorage const * 8576 18 DNAStorage const * 18 DNAStorage const * 0 0 829 0 0 0 0 0 0 0 0 0 0

829 16 DNAStorage const 8832 16 DNAStorage const 16 DNAStorage const 0 0 766 0 0 0 0 0 0 0 0 0 0

830 9 Texture * 8576 9 Texture * 9 Texture * 0 0 831 0 0 0 0 0 0 0 0 0 0

831 7 Texture 2048 7 Texture 7 Texture 0 0 0 0 0 0 0 0 0 0 0 0 1051
////////////////////////////////////////////////////////////////////
//       Class : Texture
// Description : Represents a texture object, which is typically a
//               single 2-d image but may also represent a 1-d or 3-d
//               texture image, or the six 2-d faces of a cube map
//               texture.
//
//               A texture's image data might be stored in system RAM
//               (see get_ram_image()) or its image may be represented
//               in texture memory on one or more
//               GraphicsStateGuardians (see prepare()), or both.  The
//               typical usage pattern is that a texture is loaded
//               from an image file on disk, which copies its image
//               data into system RAM; then the first time the texture
//               is rendered its image data is copied to texture
//               memory (actually, to the graphics API), and the
//               system RAM image is automatically freed.
////////////////////////////////////////////////////////////////////

832 10 TextFont * 8576 10 TextFont * 10 TextFont * 0 0 833 0 0 0 0 0 0 0 0 0 0

833 8 TextFont 2048 8 TextFont 8 TextFont 0 0 0 0 0 0 0 0 0 0 0 0 497
////////////////////////////////////////////////////////////////////
//       Class : TextFont
// Description : An encapsulation of a font; i.e. a set of glyphs that
//               may be assembled together by a TextNode to represent
//               a string of text.
//
//               This is just an abstract interface; see
//               StaticTextFont or DynamicTextFont for an actual
//               implementation.
////////////////////////////////////////////////////////////////////

834 17 LMatrix4f const * 8576 17 LMatrix4f const * 17 LMatrix4f const * 0 0 835 0 0 0 0 0 0 0 0 0 0

835 15 LMatrix4f const 8832 15 LMatrix4f const 15 LMatrix4f const 0 0 836 0 0 0 0 0 0 0 0 0 0

836 9 LMatrix4f 2048 9 LMatrix4f 9 LMatrix4f 0 0 0 0 0 0 0 3 933 934 935 0 0 0 0 703
// Filename: lmatrix4_src.h
// Created by:  drose (15Jan99)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LMatrix4
// Description : This is a 4-by-4 transform matrix.
////////////////////////////////////////////////////////////////////

837 11 PandaNode * 8576 11 PandaNode * 11 PandaNode * 0 0 838 0 0 0 0 0 0 0 0 0 0

838 9 PandaNode 2048 9 PandaNode 9 PandaNode 0 0 0 0 0 0 0 0 0 0 0 0 374
////////////////////////////////////////////////////////////////////
//       Class : PandaNode
// Description : A basic node of the scene graph or data graph.  This
//               is the base class of all specialized nodes, and also
//               serves as a generic node with no special properties.
////////////////////////////////////////////////////////////////////

839 15 DNANode const * 8576 15 DNANode const * 15 DNANode const * 0 0 840 0 0 0 0 0 0 0 0 0 0

840 13 DNANode const 8832 13 DNANode const 13 DNANode const 0 0 767 0 0 0 0 0 0 0 0 0 0

841 9 DNANode * 8576 9 DNANode * 9 DNANode * 0 0 767 0 0 0 0 0 0 0 0 0 0

842 18 LVecBase3f const * 8576 18 LVecBase3f const * 18 LVecBase3f const * 0 0 843 0 0 0 0 0 0 0 0 0 0

843 16 LVecBase3f const 8832 16 LVecBase3f const 16 LVecBase3f const 0 0 844 0 0 0 0 0 0 0 0 0 0

844 9 RGBColorf 2048 10 LVecBase3f 10 LVecBase3f 0 0 0 0 0 0 0 0 0 0 0 0 754
// Filename: lvecBase3_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVecBase3
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

845 12 LVecBase3f * 8576 12 LVecBase3f * 12 LVecBase3f * 0 0 844 0 0 0 0 0 0 0 0 0 0

846 15 DNAWall const * 8576 15 DNAWall const * 15 DNAWall const * 0 0 847 0 0 0 0 0 0 0 0 0 0

847 13 DNAWall const 8832 13 DNAWall const 13 DNAWall const 0 0 768 0 0 0 0 0 0 0 0 0 0

848 9 DNAWall * 8576 9 DNAWall * 9 DNAWall * 0 0 768 0 0 0 0 0 0 0 0 0 0

849 18 LVecBase4f const * 8576 18 LVecBase4f const * 18 LVecBase4f const * 0 0 850 0 0 0 0 0 0 0 0 0 0

850 16 LVecBase4f const 8832 16 LVecBase4f const 16 LVecBase4f const 0 0 851 0 0 0 0 0 0 0 0 0 0

851 6 Colorf 2048 10 LVecBase4f 10 LVecBase4f 0 0 0 0 0 0 0 0 0 0 0 0 754
// Filename: lvecBase4_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVecBase4
// Description : This is the base class for all three-component
//               vectors and points.
////////////////////////////////////////////////////////////////////

852 12 LVecBase4f * 8576 12 LVecBase4f * 12 LVecBase4f * 0 0 851 0 0 0 0 0 0 0 0 0 0

853 23 DNAFlatBuilding const * 8576 23 DNAFlatBuilding const * 23 DNAFlatBuilding const * 0 0 854 0 0 0 0 0 0 0 0 0 0

854 21 DNAFlatBuilding const 8832 21 DNAFlatBuilding const 21 DNAFlatBuilding const 0 0 769 0 0 0 0 0 0 0 0 0 0

855 17 DNAFlatBuilding * 8576 17 DNAFlatBuilding * 17 DNAFlatBuilding * 0 0 769 0 0 0 0 0 0 0 0 0 0

856 27 DNALandmarkBuilding const * 8576 27 DNALandmarkBuilding const * 27 DNALandmarkBuilding const * 0 0 857 0 0 0 0 0 0 0 0 0 0

857 25 DNALandmarkBuilding const 8832 25 DNALandmarkBuilding const 25 DNALandmarkBuilding const 0 0 770 0 0 0 0 0 0 0 0 0 0

858 21 DNALandmarkBuilding * 8576 21 DNALandmarkBuilding * 21 DNALandmarkBuilding * 0 0 770 0 0 0 0 0 0 0 0 0 0

859 23 DNAAnimBuilding const * 8576 23 DNAAnimBuilding const * 23 DNAAnimBuilding const * 0 0 860 0 0 0 0 0 0 0 0 0 0

860 21 DNAAnimBuilding const 8832 21 DNAAnimBuilding const 21 DNAAnimBuilding const 0 0 771 0 0 0 0 0 0 0 0 0 0

861 17 DNAAnimBuilding * 8576 17 DNAAnimBuilding * 17 DNAAnimBuilding * 0 0 771 0 0 0 0 0 0 0 0 0 0

862 15 DNAProp const * 8576 15 DNAProp const * 15 DNAProp const * 0 0 863 0 0 0 0 0 0 0 0 0 0

863 13 DNAProp const 8832 13 DNAProp const 13 DNAProp const 0 0 772 0 0 0 0 0 0 0 0 0 0

864 9 DNAProp * 8576 9 DNAProp * 9 DNAProp * 0 0 772 0 0 0 0 0 0 0 0 0 0

865 19 DNAAnimProp const * 8576 19 DNAAnimProp const * 19 DNAAnimProp const * 0 0 866 0 0 0 0 0 0 0 0 0 0

866 17 DNAAnimProp const 8832 17 DNAAnimProp const 17 DNAAnimProp const 0 0 773 0 0 0 0 0 0 0 0 0 0

867 13 DNAAnimProp * 8576 13 DNAAnimProp * 13 DNAAnimProp * 0 0 773 0 0 0 0 0 0 0 0 0 0

868 18 DNACornice const * 8576 18 DNACornice const * 18 DNACornice const * 0 0 869 0 0 0 0 0 0 0 0 0 0

869 16 DNACornice const 8832 16 DNACornice const 16 DNACornice const 0 0 774 0 0 0 0 0 0 0 0 0 0

870 12 DNACornice * 8576 12 DNACornice * 12 DNACornice * 0 0 774 0 0 0 0 0 0 0 0 0 0

871 15 DNAData const * 8576 15 DNAData const * 15 DNAData const * 0 0 872 0 0 0 0 0 0 0 0 0 0

872 13 DNAData const 8832 13 DNAData const 13 DNAData const 0 0 775 0 0 0 0 0 0 0 0 0 0

873 9 DNAData * 8576 9 DNAData * 9 DNAData * 0 0 775 0 0 0 0 0 0 0 0 0 0

874 10 Filename * 8576 10 Filename * 10 Filename * 0 0 875 0 0 0 0 0 0 0 0 0 0

875 8 Filename 2048 8 Filename 8 Filename 0 0 0 0 0 0 0 0 0 0 0 0 869
////////////////////////////////////////////////////////////////////
//       Class : Filename
// Description : The name of a file, such as a texture file or an Egg
//               file.  Stores the full pathname, and includes
//               functions for extracting out the directory prefix
//               part and the file extension and stuff.
//
//               A Filename is also aware of the mapping between the
//               Unix-like filename convention we use internally, and
//               the local OS's specific filename convention, and it
//               knows how to perform basic OS-specific I/O, like
//               testing for file existence and searching a
//               searchpath, as well as the best way to open an
//               fstream for reading or writing.
////////////////////////////////////////////////////////////////////

876 9 istream * 8576 9 istream * 9 istream * 0 0 877 0 0 0 0 0 0 0 0 0 0

877 7 istream 2048 7 istream 7 istream 0 0 0 0 0 0 0 0 0 0 0 0 0

878 19 DSearchPath const * 8576 19 DSearchPath const * 19 DSearchPath const * 0 0 879 0 0 0 0 0 0 0 0 0 0

879 17 DSearchPath const 8832 17 DSearchPath const 17 DSearchPath const 0 0 880 0 0 0 0 0 0 0 0 0 0

880 11 DSearchPath 2048 11 DSearchPath 11 DSearchPath 0 0 0 0 0 0 0 1 936 0 0 0 0 551
///////////////////////////////////////////////////////////////////
//       Class : DSearchPath
// Description : This class stores a list of directories that can be
//               searched, in order, to locate a particular file.  It
//               is normally constructed by passing it a traditional
//               searchpath-style string, e.g. a list of directory
//               names delimited by spaces or colons, but it can also
//               be built up explicitly.
////////////////////////////////////////////////////////////////////

881 16 CoordinateSystem 532480 16 CoordinateSystem 16 CoordinateSystem 0 0 0 0 0 0 0 0 0 0 6 10 CS_default 10 CS_default 0 12 CS_zup_right 12 CS_zup_right 1 12 CS_yup_right 12 CS_yup_right 2 11 CS_zup_left 11 CS_zup_left 3 11 CS_yup_left 11 CS_yup_left 4 10 CS_invalid 10 CS_invalid 5 0 0

882 16 Filename const * 8576 16 Filename const * 16 Filename const * 0 0 883 0 0 0 0 0 0 0 0 0 0

883 14 Filename const 8832 14 Filename const 14 Filename const 0 0 875 0 0 0 0 0 0 0 0 0 0

884 15 DNADoor const * 8576 15 DNADoor const * 15 DNADoor const * 0 0 885 0 0 0 0 0 0 0 0 0 0

885 13 DNADoor const 8832 13 DNADoor const 13 DNADoor const 0 0 776 0 0 0 0 0 0 0 0 0 0

886 9 DNADoor * 8576 9 DNADoor * 9 DNADoor * 0 0 776 0 0 0 0 0 0 0 0 0 0

887 17 LVector4f const * 8576 17 LVector4f const * 17 LVector4f const * 0 0 888 0 0 0 0 0 0 0 0 0 0

888 15 LVector4f const 8832 15 LVector4f const 15 LVector4f const 0 0 889 0 0 0 0 0 0 0 0 0 0

889 9 LVector4f 2048 9 LVector4f 9 LVector4f 0 0 0 0 0 0 0 0 0 0 0 0 710
// Filename: lvector4_src.h
// Created by:  drose (08Mar00)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVector4
// Description : This is a four-component vector distance.
////////////////////////////////////////////////////////////////////

890 19 DNAFlatDoor const * 8576 19 DNAFlatDoor const * 19 DNAFlatDoor const * 0 0 891 0 0 0 0 0 0 0 0 0 0

891 17 DNAFlatDoor const 8832 17 DNAFlatDoor const 17 DNAFlatDoor const 0 0 777 0 0 0 0 0 0 0 0 0 0

892 13 DNAFlatDoor * 8576 13 DNAFlatDoor * 13 DNAFlatDoor * 0 0 777 0 0 0 0 0 0 0 0 0 0

893 26 DNAInteractiveProp const * 8576 26 DNAInteractiveProp const * 26 DNAInteractiveProp const * 0 0 894 0 0 0 0 0 0 0 0 0 0

894 24 DNAInteractiveProp const 8832 24 DNAInteractiveProp const 24 DNAInteractiveProp const 0 0 778 0 0 0 0 0 0 0 0 0 0

895 20 DNAInteractiveProp * 8576 20 DNAInteractiveProp * 20 DNAInteractiveProp * 0 0 778 0 0 0 0 0 0 0 0 0 0

896 11 DNALoader * 8576 11 DNALoader * 11 DNALoader * 0 0 779 0 0 0 0 0 0 0 0 0 0

897 17 DNALoader const * 8576 17 DNALoader const * 17 DNALoader const * 0 0 898 0 0 0 0 0 0 0 0 0 0

898 15 DNALoader const 8832 15 DNALoader const 15 DNALoader const 0 0 779 0 0 0 0 0 0 0 0 0 0

899 16 NodePath const * 8576 16 NodePath const * 16 NodePath const * 0 0 900 0 0 0 0 0 0 0 0 0 0

900 14 NodePath const 8832 14 NodePath const 14 NodePath const 0 0 781 0 0 0 0 0 0 0 0 0 0

901 18 DNAWindows const * 8576 18 DNAWindows const * 18 DNAWindows const * 0 0 902 0 0 0 0 0 0 0 0 0 0

902 16 DNAWindows const 8832 16 DNAWindows const 16 DNAWindows const 0 0 783 0 0 0 0 0 0 0 0 0 0

903 12 DNAWindows * 8576 12 DNAWindows * 12 DNAWindows * 0 0 783 0 0 0 0 0 0 0 0 0 0

904 17 DNAStreet const * 8576 17 DNAStreet const * 17 DNAStreet const * 0 0 905 0 0 0 0 0 0 0 0 0 0

905 15 DNAStreet const 8832 15 DNAStreet const 15 DNAStreet const 0 0 784 0 0 0 0 0 0 0 0 0 0

906 11 DNAStreet * 8576 11 DNAStreet * 11 DNAStreet * 0 0 784 0 0 0 0 0 0 0 0 0 0

907 15 DNASign const * 8576 15 DNASign const * 15 DNASign const * 0 0 908 0 0 0 0 0 0 0 0 0 0

908 13 DNASign const 8832 13 DNASign const 13 DNASign const 0 0 785 0 0 0 0 0 0 0 0 0 0

909 9 DNASign * 8576 9 DNASign * 9 DNASign * 0 0 785 0 0 0 0 0 0 0 0 0 0

910 23 DNASignBaseline const * 8576 23 DNASignBaseline const * 23 DNASignBaseline const * 0 0 911 0 0 0 0 0 0 0 0 0 0

911 21 DNASignBaseline const 8832 21 DNASignBaseline const 21 DNASignBaseline const 0 0 786 0 0 0 0 0 0 0 0 0 0

912 17 DNASignBaseline * 8576 17 DNASignBaseline * 17 DNASignBaseline * 0 0 786 0 0 0 0 0 0 0 0 0 0

913 11 LVector3f * 8576 11 LVector3f * 11 LVector3f * 0 0 914 0 0 0 0 0 0 0 0 0 0

914 7 Normalf 2048 9 LVector3f 9 LVector3f 0 0 0 0 0 0 0 0 0 0 0 0 1086
// Filename: lvector3_src.h
// Created by:  drose (24Sep99)
//
////////////////////////////////////////////////////////////////////
//
// PANDA 3D SOFTWARE
// Copyright (c) Carnegie Mellon University.  All rights reserved.
//
// All use of this software is subject to the terms of the revised BSD
// license.  You should have received a copy of this license along
// with this source code in a file named "LICENSE."
//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//       Class : LVector3
// Description : This is a three-component vector distance (as opposed
//               to a three-component point, which represents a
//               particular point in space).  Some of the methods are
//               slightly different between LPoint3 and LVector3; in
//               particular, subtraction of two points yields a
//               vector, while addition of a vector and a point yields
//               a point.
////////////////////////////////////////////////////////////////////

915 17 LVector3f const * 8576 17 LVector3f const * 17 LVector3f const * 0 0 916 0 0 0 0 0 0 0 0 0 0

916 15 LVector3f const 8832 15 LVector3f const 15 LVector3f const 0 0 914 0 0 0 0 0 0 0 0 0 0

917 22 DNASignGraphic const * 8576 22 DNASignGraphic const * 22 DNASignGraphic const * 0 0 918 0 0 0 0 0 0 0 0 0 0

918 20 DNASignGraphic const 8832 20 DNASignGraphic const 20 DNASignGraphic const 0 0 787 0 0 0 0 0 0 0 0 0 0

919 16 DNASignGraphic * 8576 16 DNASignGraphic * 16 DNASignGraphic * 0 0 787 0 0 0 0 0 0 0 0 0 0

920 19 DNASignText const * 8576 19 DNASignText const * 19 DNASignText const * 0 0 921 0 0 0 0 0 0 0 0 0 0

921 17 DNASignText const 8832 17 DNASignText const 17 DNASignText const 0 0 788 0 0 0 0 0 0 0 0 0 0

922 13 DNASignText * 8576 13 DNASignText * 13 DNASignText * 0 0 788 0 0 0 0 0 0 0 0 0 0

923 32 ConfigVariableSearchPath const * 8576 32 ConfigVariableSearchPath const * 32 ConfigVariableSearchPath const * 0 0 924 0 0 0 0 0 0 0 0 0 0

924 30 ConfigVariableSearchPath const 8832 30 ConfigVariableSearchPath const 30 ConfigVariableSearchPath const 0 0 925 0 0 0 0 0 0 0 0 0 0

925 24 ConfigVariableSearchPath 2048 24 ConfigVariableSearchPath 24 ConfigVariableSearchPath 0 0 0 0 0 0 0 0 0 0 0 0 1125
////////////////////////////////////////////////////////////////////
//       Class : ConfigVariableSearchPath
// Description : This is similar to a ConfigVariableList, but it
//               returns its list as a DSearchPath, as a list of
//               directories.
//
//               You may locally append directories to the end of the
//               search path with the methods here, or prepend them to
//               the beginning.  Use these methods to make adjustments
//               to the path; do not attempt to directly modify the
//               const DSearchPath object returned by get_value().
//
//               Unlike other ConfigVariable types, local changes
//               (made by calling append_directory() and
//               prepend_directory()) are specific to this particular
//               instance of the ConfigVariableSearchPath.  A separate
//               instance of the same variable, created by using the
//               same name to the constructor, will not reflect the
//               local changes.
////////////////////////////////////////////////////////////////////

926 6 string 2048 20 basic_string< char > 20 basic_string< char > 0 0 0 0 0 0 0 0 0 0 0 0 0

927 21 PointerTo< DNAGroup > 2048 21 PointerTo< DNAGroup > 21 PointerTo< DNAGroup > 0 0 0 0 0 0 0 0 0 0 0 0 0

0
3
928 9 _top_node 2 780 665 0 20 DNALoader::_top_node 
929 5 _root 2 781 666 0 16 DNALoader::_root 
930 5 _data 0 782 0 0 16 DNALoader::_data 
6
931 0 295 9 get_nodes 13 get_num_nodes 8 get_node 
932 0 295 13 get_ancestors 13 get_num_nodes 12 get_ancestor 
933 0 552 8 get_rows 4 size 7 get_row 
934 0 552 8 get_cols 4 size 7 get_col 
935 0 552 9 get_row3s 4 size 8 get_row3 
936 0 749 15 get_directories 19 get_num_directories 13 get_directory 
